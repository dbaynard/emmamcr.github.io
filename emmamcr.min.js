!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n||e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){var bigInt=function(undefined){"use strict";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){return void 0===v?Integer[0]:void 0!==radix?10==+radix?parseValue(v):parseBase(v,radix):parseValue(v)}function BigInteger(value,sign){this.value=value,this.sign=sign,this.isSmall=!1}function SmallInteger(value){this.value=value,this.sign=value<0,this.isSmall=!0}function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){return n<1e7?[n]:n<1e14?[n%1e7,Math.floor(n/1e7)]:[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0)switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}return arr}function trim(v){for(var i=v.length;0===v[--i];);v.length=i+1}function createArray(length){for(var x=new Array(length),i=-1;++i<length;)x[i]=0;return x}function truncate(n){return 0<n?Math.floor(n):Math.ceil(n)}function add(a,b){var sum,i,l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE;for(i=0;i<l_b;i++)carry=base<=(sum=a[i]+b[i]+carry)?1:0,r[i]=sum-carry*base;for(;i<l_a;)carry=(sum=a[i]+carry)===base?1:0,r[i++]=sum-carry*base;return 0<carry&&r.push(carry),r}function addAny(a,b){return a.length>=b.length?add(a,b):add(b,a)}function addSmall(a,carry){var sum,i,l=a.length,r=new Array(l),base=BASE;for(i=0;i<l;i++)sum=a[i]-base+carry,carry=Math.floor(sum/base),r[i]=sum-carry*base,carry+=1;for(;0<carry;)r[i++]=carry%base,carry=Math.floor(carry/base);return r}function subtract(a,b){var i,difference,a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE;for(i=0;i<b_l;i++)(difference=a[i]-borrow-b[i])<0?(difference+=base,borrow=1):borrow=0,r[i]=difference;for(i=b_l;i<a_l;i++){if(!((difference=a[i]-borrow)<0)){r[i++]=difference;break}difference+=base,r[i]=difference}for(;i<a_l;i++)r[i]=a[i];return trim(r),r}function subtractSmall(a,b,sign){var i,difference,l=a.length,r=new Array(l),carry=-b,base=BASE;for(i=0;i<l;i++)difference=a[i]+carry,carry=Math.floor(difference/base),difference%=base,r[i]=difference<0?difference+base:difference;return"number"==typeof(r=arrayToSmall(r))?(sign&&(r=-r),new SmallInteger(r)):new BigInteger(r,sign)}function multiplyLong(a,b){var product,carry,i,a_i,a_l=a.length,b_l=b.length,r=createArray(a_l+b_l),base=BASE;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j)product=a_i*b[j]+r[i+j],carry=Math.floor(product/base),r[i+j]=product-carry*base,r[i+j+1]+=carry}return trim(r),r}function multiplySmall(a,b){var product,i,l=a.length,r=new Array(l),base=BASE,carry=0;for(i=0;i<l;i++)product=a[i]*b+carry,carry=Math.floor(product/base),r[i]=product-carry*base;for(;0<carry;)r[i++]=carry%base,carry=Math.floor(carry/base);return r}function shiftLeft(x,n){for(var r=[];0<n--;)r.push(0);return r.concat(x)}function multiplySmallAndArray(a,b,sign){return new BigInteger(a<BASE?multiplySmall(b,a):multiplyLong(b,smallToArray(a)),sign)}function square(a){var product,carry,i,a_i,l=a.length,r=createArray(l+l),base=BASE;for(i=0;i<l;i++){carry=0-(a_i=a[i])*a_i;for(var j=i;j<l;j++)product=a_i*a[j]*2+r[i+j]+carry,carry=Math.floor(product/base),r[i+j]=product-carry*base;r[i+l]=carry}return trim(r),r}function divModSmall(value,lambda){var i,q,remainder,divisor,length=value.length,quotient=createArray(length),base=BASE;for(remainder=0,i=length-1;0<=i;--i)remainder=(divisor=remainder*base+value[i])-(q=truncate(divisor/lambda))*lambda,quotient[i]=0|q;return[quotient,0|remainder]}function divModAny(self,v){var value,quotient,n=parseValue(v),a=self.value,b=n.value;if(0===b)throw new Error("Cannot divide by zero");if(self.isSmall)return n.isSmall?[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]:[Integer[0],self];if(n.isSmall){if(1===b)return[self,Integer[0]];if(-1==b)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){quotient=arrayToSmall((value=divModSmall(a,abs))[0]);var remainder=value[1];return self.sign&&(remainder=-remainder),"number"==typeof quotient?(self.sign!==n.sign&&(quotient=-quotient),[new SmallInteger(quotient),new SmallInteger(remainder)]):[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(-1===comparison)return[Integer[0],self];if(0===comparison)return[Integer[self.sign===n.sign?1:-1],Integer[0]];quotient=(value=a.length+b.length<=200?function(a,b){var quotientDigit,shift,carry,borrow,i,l,q,a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda);for(remainder.length<=a_l&&remainder.push(0),divisor.push(0),divisorMostSignificantDigit=divisor[b_l-1],shift=a_l-b_l;0<=shift;shift--){for(quotientDigit=base-1,remainder[shift+b_l]!==divisorMostSignificantDigit&&(quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)),borrow=carry=0,l=divisor.length,i=0;i<l;i++)carry+=quotientDigit*divisor[i],q=Math.floor(carry/base),borrow+=remainder[shift+i]-(carry-q*base),carry=q,borrow<0?(remainder[shift+i]=borrow+base,borrow=-1):(remainder[shift+i]=borrow,borrow=0);for(;0!==borrow;){for(quotientDigit-=1,i=carry=0;i<l;i++)(carry+=remainder[shift+i]-base+divisor[i])<0?(remainder[shift+i]=carry+base,carry=0):(remainder[shift+i]=carry,carry=1);borrow+=carry}result[shift]=quotientDigit}return remainder=divModSmall(remainder,lambda)[0],[arrayToSmall(result),arrayToSmall(remainder)]}(a,b):function(a,b){for(var guess,xlen,highx,highy,check,a_l=a.length,b_l=b.length,result=[],part=[],base=BASE;a_l;)if(part.unshift(a[--a_l]),trim(part),compareAbs(part,b)<0)result.push(0);else{highx=part[(xlen=part.length)-1]*base+part[xlen-2],highy=b[b_l-1]*base+b[b_l-2],b_l<xlen&&(highx=(highx+1)*base),guess=Math.ceil(highx/highy);do{if(compareAbs(check=multiplySmall(b,guess),part)<=0)break;guess--}while(guess);result.push(guess),part=subtract(part,check)}return result.reverse(),[arrayToSmall(result),arrayToSmall(part)]}(a,b))[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;return"number"==typeof quotient?(qSign&&(quotient=-quotient),quotient=new SmallInteger(quotient)):quotient=new BigInteger(quotient,qSign),"number"==typeof mod?(mSign&&(mod=-mod),mod=new SmallInteger(mod)):mod=new BigInteger(mod,mSign),[quotient,mod]}function compareAbs(a,b){if(a.length!==b.length)return a.length>b.length?1:-1;for(var i=a.length-1;0<=i;i--)if(a[i]!==b[i])return a[i]>b[i]?1:-1;return 0}function isBasicPrime(v){var n=v.abs();return!n.isUnit()&&(!!(n.equals(2)||n.equals(3)||n.equals(5))||!(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))&&(!!n.lesser(25)||void 0))}BigInteger.prototype=Object.create(Integer.prototype),SmallInteger.prototype=Object.create(Integer.prototype),BigInteger.prototype.plus=BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign)return this.subtract(n.negate());var a=this.value,b=n.value;return n.isSmall?new BigInteger(addSmall(a,Math.abs(b)),this.sign):new BigInteger(addAny(a,b),this.sign)},SmallInteger.prototype.plus=SmallInteger.prototype.add=function(v){var n=parseValue(v),a=this.value;if(a<0!==n.sign)return this.subtract(n.negate());var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)},BigInteger.prototype.minus=BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign)return this.add(n.negate());var a=this.value,b=n.value;return n.isSmall?subtractSmall(a,Math.abs(b),this.sign):function(a,b,sign){var value;return 0<=compareAbs(a,b)?value=subtract(a,b):(value=subtract(b,a),sign=!sign),"number"==typeof(value=arrayToSmall(value))?(sign&&(value=-value),new SmallInteger(value)):new BigInteger(value,sign)}(a,b,this.sign)},SmallInteger.prototype.minus=SmallInteger.prototype.subtract=function(v){var n=parseValue(v),a=this.value;if(a<0!==n.sign)return this.add(n.negate());var b=n.value;return n.isSmall?new SmallInteger(a-b):subtractSmall(b,Math.abs(a),0<=a)},BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)},SmallInteger.prototype.negate=function(){var sign=this.sign,small=new SmallInteger(-this.value);return small.sign=!sign,small},BigInteger.prototype.abs=function(){return new BigInteger(this.value,!1)},SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))},BigInteger.prototype.times=BigInteger.prototype.multiply=function(v){var abs,l1,l2,n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign;if(n.isSmall){if(0===b)return Integer[0];if(1===b)return this;if(-1===b)return this.negate();if((abs=Math.abs(b))<BASE)return new BigInteger(multiplySmall(a,abs),sign);b=smallToArray(abs)}return l1=a.length,l2=b.length,new BigInteger(0<-.012*l1-.012*l2+15e-6*l1*l2?function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n),ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),product=addAny(addAny(ac,shiftLeft(subtract(subtract(multiplyKaratsuba(addAny(a,b),addAny(c,d)),ac),bd),n)),shiftLeft(bd,2*n));return trim(product),product}(a,b):multiplyLong(a,b),sign)},SmallInteger.prototype._multiplyBySmall=function(a){return isPrecise(a.value*this.value)?new SmallInteger(a.value*this.value):multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)},BigInteger.prototype._multiplyBySmall=function(a){return 0===a.value?Integer[0]:1===a.value?this:-1===a.value?this.negate():multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)},SmallInteger.prototype.times=SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)},BigInteger.prototype.square=function(){return new BigInteger(square(this.value),!1)},SmallInteger.prototype.square=function(){var value=this.value*this.value;return isPrecise(value)?new SmallInteger(value):new BigInteger(square(smallToArray(Math.abs(this.value))),!1)},SmallInteger.prototype.divmod=BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}},SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]},SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]},BigInteger.prototype.pow=function(v){var value,x,y,n=parseValue(v),a=this.value,b=n.value;if(0===b)return Integer[1];if(0===a)return Integer[0];if(1===a)return Integer[1];if(-1===a)return n.isEven()?Integer[1]:Integer[-1];if(n.sign)return Integer[0];if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall&&isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value));for(x=this,y=Integer[1];!0&b&&(y=y.times(x),--b),0!==b;)b/=2,x=x.square();return y},SmallInteger.prototype.pow=BigInteger.prototype.pow,SmallInteger.prototype.modPow=BigInteger.prototype.modPow=function(exp,mod){if(exp=parseValue(exp),(mod=parseValue(mod)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var r=Integer[1],base=this.mod(mod);exp.isPositive();){if(base.isZero())return Integer[0];exp.isOdd()&&(r=r.multiply(base).mod(mod)),exp=exp.divide(2),base=base.square().mod(mod)}return r},BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;return n.isSmall?1:compareAbs(a,b)},SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;return n.isSmall?a===(b=Math.abs(b))?0:b<a?1:-1:-1},BigInteger.prototype.compareTo=BigInteger.prototype.compare=function(v){if(v===1/0)return-1;if(v===-1/0)return 1;var n=parseValue(v),a=this.value,b=n.value;return this.sign!==n.sign?n.sign?1:-1:n.isSmall?this.sign?-1:1:compareAbs(a,b)*(this.sign?-1:1)},SmallInteger.prototype.compareTo=SmallInteger.prototype.compare=function(v){if(v===1/0)return-1;if(v===-1/0)return 1;var n=parseValue(v),a=this.value,b=n.value;return n.isSmall?a==b?0:b<a?1:-1:a<0!==n.sign?a<0?-1:1:a<0?1:-1},SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals=function(v){return 0===this.compare(v)},SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals=function(v){return 0!==this.compare(v)},SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater=function(v){return 0<this.compare(v)},SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser=function(v){return this.compare(v)<0},SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals=function(v){return 0<=this.compare(v)},SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0},BigInteger.prototype.isEven=function(){return 0==(1&this.value[0])},SmallInteger.prototype.isEven=function(){return 0==(1&this.value)},BigInteger.prototype.isOdd=function(){return 1==(1&this.value[0])},SmallInteger.prototype.isOdd=function(){return 1==(1&this.value)},BigInteger.prototype.isPositive=function(){return!this.sign},SmallInteger.prototype.isPositive=function(){return 0<this.value},BigInteger.prototype.isNegative=function(){return this.sign},SmallInteger.prototype.isNegative=function(){return this.value<0},BigInteger.prototype.isUnit=function(){return!1},SmallInteger.prototype.isUnit=function(){return 1===Math.abs(this.value)},BigInteger.prototype.isZero=function(){return!1},SmallInteger.prototype.isZero=function(){return 0===this.value},SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v),value=n.value;return 0!==value&&(1===value||(2===value?this.isEven():this.mod(n).equals(Integer[0])))},SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime=function(){var isPrime=isBasicPrime(this);if(void 0!==isPrime)return isPrime;for(var d,t,i,x,n=this.abs(),nPrev=n.prev(),a=[2,3,5,7,11,13,17,19],b=nPrev;b.isEven();)b=b.divide(2);for(i=0;i<a.length;i++)if(!(x=bigInt(a[i]).modPow(b,n)).equals(Integer[1])&&!x.equals(nPrev)){for(t=!0,d=b;t&&d.lesser(nPrev);d=d.multiply(2))(x=x.square().mod(n)).equals(nPrev)&&(t=!1);if(t)return!1}return!0},SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(void 0!==isPrime)return isPrime;for(var n=this.abs(),t=void 0===iterations?5:iterations,i=0;i<t;i++){if(!bigInt.randBetween(2,n.minus(2)).modPow(n.prev(),n).isUnit())return!1}return!0},SmallInteger.prototype.modInv=BigInteger.prototype.modInv=function(n){for(var q,lastT,lastR,t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs();!newR.equals(bigInt.zero);)q=r.divide(newR),lastT=t,lastR=r,t=newT,r=newR,newT=lastT.subtract(q.multiply(newT)),newR=lastR.subtract(q.multiply(newR));if(!r.equals(1))throw new Error(this.toString()+" and "+n.toString()+" are not co-prime");return-1===t.compare(0)&&(t=t.add(n)),this.isNegative()?t.negate():t},BigInteger.prototype.next=function(){var value=this.value;return this.sign?subtractSmall(value,1,this.sign):new BigInteger(addSmall(value,1),this.sign)},SmallInteger.prototype.next=function(){var value=this.value;return value+1<MAX_INT?new SmallInteger(value+1):new BigInteger(MAX_INT_ARR,!1)},BigInteger.prototype.prev=function(){var value=this.value;return this.sign?new BigInteger(addSmall(value,1),!0):subtractSmall(value,1,this.sign)},SmallInteger.prototype.prev=function(){var value=this.value;return-MAX_INT<value-1?new SmallInteger(value-1):new BigInteger(MAX_INT_ARR,!0)};for(var powersOfTwo=[1];2*powersOfTwo[powersOfTwo.length-1]<=BASE;)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return("number"==typeof n||"string"==typeof n)&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1}function bitwise(x,y,fn){y=parseValue(y);for(var xSign=x.isNegative(),ySign=y.isNegative(),xRem=xSign?x.not():x,yRem=ySign?y.not():y,xDigit=0,yDigit=0,xDivMod=null,yDivMod=null,result=[];!xRem.isZero()||!yRem.isZero();)xDigit=(xDivMod=divModAny(xRem,highestPower2))[1].toJSNumber(),xSign&&(xDigit=highestPower2-1-xDigit),yDigit=(yDivMod=divModAny(yRem,highestPower2))[1].toJSNumber(),ySign&&(yDigit=highestPower2-1-yDigit),xRem=xDivMod[0],yRem=yDivMod[0],result.push(fn(xDigit,yDigit));for(var sum=0!==fn(xSign?1:0,ySign?1:0)?bigInt(-1):bigInt(0),i=result.length-1;0<=i;i-=1)sum=sum.multiply(highestPower2).add(bigInt(result[i]));return sum}SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n))throw new Error(String(n)+" is too large for shifting.");if((n=+n)<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;for(;powers2Length<=n;)result=result.multiply(highestPower2),n-=powers2Length-1;return result.multiply(powersOfTwo[n])},SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n))throw new Error(String(n)+" is too large for shifting.");if((n=+n)<0)return this.shiftLeft(-n);for(var result=this;powers2Length<=n;){if(result.isZero()||result.isNegative()&&result.isUnit())return result;result=(remQuo=divModAny(result,highestPower2))[1].isNegative()?remQuo[0].prev():remQuo[0],n-=powers2Length-1}return(remQuo=divModAny(result,powersOfTwo[n]))[1].isNegative()?remQuo[0].prev():remQuo[0]},SmallInteger.prototype.not=BigInteger.prototype.not=function(){return this.negate().prev()},SmallInteger.prototype.and=BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})},SmallInteger.prototype.or=BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})},SmallInteger.prototype.xor=BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x="number"==typeof v?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function max(a,b){return a=parseValue(a),b=parseValue(b),a.greater(b)?a:b}function min(a,b){return a=parseValue(a),b=parseValue(b),a.lesser(b)?a:b}function gcd(a,b){if(a=parseValue(a).abs(),b=parseValue(b).abs(),a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var d,t,c=Integer[1];a.isEven()&&b.isEven();)d=Math.min(roughLOB(a),roughLOB(b)),a=a.divide(d),b=b.divide(d),c=c.multiply(d);for(;a.isEven();)a=a.divide(roughLOB(a));do{for(;b.isEven();)b=b.divide(roughLOB(b));a.greater(b)&&(t=b,b=a,a=t),b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength=function(){var n=this;return n.compareTo(bigInt(0))<0&&(n=n.negate().subtract(bigInt(1))),0===n.compareTo(bigInt(0))?bigInt(0):bigInt(function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base)),p=tmp.p,e=tmp.e,t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:2*e+1}:{p:p,e:2*e}}return{p:bigInt(1),e:0}}(n,bigInt(2)).e).add(bigInt(1))};var parseBase=function(text,base){for(var length=text.length,absBase=Math.abs(base),i=0;i<length;i++){if("-"!==(c=text[i].toLowerCase())&&/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&absBase<=+c){if("1"===c&&1===absBase)continue;throw new Error(c+" is not a valid digit in base "+base+".")}if(c.charCodeAt(0)-87>=absBase)throw new Error(c+" is not a valid digit in base "+base+".")}}if(2<=base&&base<=36&&length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result))throw new Error(c+" is not a valid digit in base "+base+".");return new SmallInteger(parseInt(text,base))}base=parseValue(base);var digits=[],isNegative="-"===text[0];for(i=isNegative?1:0;i<text.length;i++){var c,charCode=(c=text[i].toLowerCase()).charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else{if("<"!==c)throw new Error(c+" is not a valid character");for(var start=i;">"!==text[++i];);digits.push(parseValue(text.slice(start+1,i)))}}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var i,val=Integer[0],pow=Integer[1];for(i=digits.length-1;0<=i;i--)val=val.add(digits[i].times(pow)),pow=pow.times(base);return isNegative?val.negate():val}function stringify(digit){return digit<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(digit):"<"+digit+">"}function toBase(n,base){if((base=bigInt(base)).isZero()){if(n.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:!1};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var arr=Array.apply(null,Array(+n-1)).map(Array.prototype.valueOf,[0,1]);return arr.unshift([1]),{value:[].concat.apply([],arr),isNegative:!1}}var neg=!1;if(n.isNegative()&&base.isPositive()&&(neg=!0,n=n.abs()),base.equals(1))return n.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+n)).map(Number.prototype.valueOf,1),isNegative:neg};for(var divmod,out=[],left=n;left.isNegative()||0<=left.compareAbs(base);){left=(divmod=left.divmod(base)).quotient;var digit=divmod.remainder;digit.isNegative()&&(digit=base.minus(digit).abs(),left=left.next()),out.push(digit.toJSNumber())}return out.push(left.toJSNumber()),{value:out.reverse(),isNegative:neg}}function toBaseString(n,base){var arr=toBase(n,base);return(arr.isNegative?"-":"")+arr.value.map(stringify).join("")}function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw new Error("Invalid integer: "+v)}var sign="-"===v[0];sign&&(v=v.slice(1));var split=v.split(/e/i);if(2<split.length)throw new Error("Invalid integer: "+split.join("e"));if(2===split.length){var exp=split[1];if("+"===exp[0]&&(exp=exp.slice(1)),(exp=+exp)!==truncate(exp)||!isPrecise(exp))throw new Error("Invalid integer: "+exp+" is not a valid exponent.");var text=split[0],decimalPlace=text.indexOf(".");if(0<=decimalPlace&&(exp-=text.length-decimalPlace-1,text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)),exp<0)throw new Error("Cannot include negative exponent part for integers");v=text+=new Array(exp+1).join("0")}if(!/^([0-9][0-9]*)$/.test(v))throw new Error("Invalid integer: "+v);for(var r=[],max=v.length,l=LOG_BASE,min=max-l;0<max;)r.push(+v.slice(min,max)),(min-=l)<0&&(min=0),max-=l;return trim(r),new BigInteger(r,sign)}function parseValue(v){return"number"==typeof v?function(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+" is not an integer.");return new SmallInteger(v)}return parseStringValue(v.toString())}(v):"string"==typeof v?parseStringValue(v):v}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)},SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)},BigInteger.prototype.toString=function(radix){if(void 0===radix&&(radix=10),10!==radix)return toBaseString(this,radix);for(var digit,v=this.value,l=v.length,str=String(v[--l]);0<=--l;)digit=String(v[l]),str+="0000000".slice(digit.length)+digit;return(this.sign?"-":"")+str},SmallInteger.prototype.toString=function(radix){return void 0===radix&&(radix=10),10!=radix?toBaseString(this,radix):String(this.value)},BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()},BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)},SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf=function(){return this.value};for(var i=0;i<1e3;i++)Integer[i]=new SmallInteger(i),0<i&&(Integer[-i]=new SmallInteger(-i));return Integer.one=Integer[1],Integer.zero=Integer[0],Integer.minusOne=Integer[-1],Integer.max=max,Integer.min=min,Integer.gcd=gcd,Integer.lcm=function(a,b){return a=parseValue(a).abs(),b=parseValue(b).abs(),a.divide(gcd(a,b)).multiply(b)},Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger},Integer.randBetween=function(a,b){var low=min(a=parseValue(a),b=parseValue(b)),range=max(a,b).subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));for(var result=[],restricted=!0,i=range.value.length-1;0<=i;i--){var top=restricted?range.value[i]:BASE,digit=truncate(Math.random()*top);result.unshift(digit),digit<top&&(restricted=!1)}return result=arrayToSmall(result),low.add("number"==typeof result?new SmallInteger(result):new BigInteger(result,!1))},Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)},Integer}();void 0!==module&&module.hasOwnProperty("exports")&&(module.exports=bigInt),"function"==typeof define&&define.amd&&define("big-integer",[],function(){return bigInt})},{}],2:[function(require,module,exports){var encoding=require("./lib/encoding.js");module.exports={TextEncoder:encoding.TextEncoder,TextDecoder:encoding.TextDecoder}},{"./lib/encoding.js":4}],3:[function(require,module,exports){!function(global){"use strict";void 0!==module&&module.exports&&(module.exports=global),global["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}}(this||{})},{}],4:[function(require,module,exports){!function(global){"use strict";function inRange(a,min,max){return min<=a&&a<=max}void 0!==module&&module.exports&&!global["encoding-indexes"]&&(global["encoding-indexes"]=require("./encoding-indexes.js")["encoding-indexes"]);var floor=Math.floor;function ToDictionary(o){if(void 0===o)return{};if(o===Object(o))return o;throw TypeError("Could not convert argument to dictionary")}function isASCIIByte(a){return 0<=a&&a<=127}var isASCIICodePoint=isASCIIByte;function Stream(tokens){this.tokens=[].slice.call(tokens),this.tokens.reverse()}Stream.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():-1},prepend:function(token){if(Array.isArray(token))for(var tokens=token;tokens.length;)this.tokens.push(tokens.pop());else this.tokens.push(token)},push:function(token){if(Array.isArray(token))for(var tokens=token;tokens.length;)this.tokens.unshift(tokens.shift());else this.tokens.unshift(token)}};function decoderError(fatal,opt_code_point){if(fatal)throw TypeError("Decoder error");return opt_code_point||65533}function encoderError(code_point){throw TypeError("The code point "+code_point+" could not be encoded.")}function getEncoding(label){return label=String(label).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(label_to_encoding,label)?label_to_encoding[label]:null}var encodings=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],label_to_encoding={};encodings.forEach(function(category){category.encodings.forEach(function(encoding){encoding.labels.forEach(function(label){label_to_encoding[label]=encoding})})});var shift_jis_index,big5_index_no_hkscs,encoders={},decoders={};function indexCodePointFor(pointer,index){return index&&index[pointer]||null}function indexPointerFor(code_point,index){var pointer=index.indexOf(code_point);return-1===pointer?null:pointer}function index(name){if(!("encoding-indexes"in global))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return global["encoding-indexes"][name]}var DEFAULT_ENCODING="utf-8";function TextDecoder(label,options){if(!(this instanceof TextDecoder))throw TypeError("Called as a function. Did you forget 'new'?");label=void 0!==label?String(label):DEFAULT_ENCODING,options=ToDictionary(options),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var encoding=getEncoding(label);if(null===encoding||"replacement"===encoding.name)throw RangeError("Unknown encoding: "+label);if(!decoders[encoding.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");return this._encoding=encoding,Boolean(options.fatal)&&(this._error_mode="fatal"),Boolean(options.ignoreBOM)&&(this._ignoreBOM=!0),Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase(),this.fatal="fatal"===this._error_mode,this.ignoreBOM=this._ignoreBOM),this}function TextEncoder(label,options){if(!(this instanceof TextEncoder))throw TypeError("Called as a function. Did you forget 'new'?");options=ToDictionary(options),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(options.fatal)?"fatal":"replacement";if(Boolean(options.NONSTANDARD_allowLegacyEncoding)){var encoding=getEncoding(label=void 0!==label?String(label):DEFAULT_ENCODING);if(null===encoding||"replacement"===encoding.name)throw RangeError("Unknown encoding: "+label);if(!encoders[encoding.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");this._encoding=encoding}else this._encoding=getEncoding("utf-8"),void 0!==label&&"console"in global&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase()),this}function UTF8Decoder(options){var fatal=options.fatal,utf8_code_point=0,utf8_bytes_seen=0,utf8_bytes_needed=0,utf8_lower_boundary=128,utf8_upper_boundary=191;this.handler=function(stream,bite){if(-1===bite&&0!==utf8_bytes_needed)return utf8_bytes_needed=0,decoderError(fatal);if(-1===bite)return-1;if(0===utf8_bytes_needed){if(inRange(bite,0,127))return bite;if(inRange(bite,194,223))utf8_bytes_needed=1,utf8_code_point=31&bite;else if(inRange(bite,224,239))224===bite&&(utf8_lower_boundary=160),237===bite&&(utf8_upper_boundary=159),utf8_bytes_needed=2,utf8_code_point=15&bite;else{if(!inRange(bite,240,244))return decoderError(fatal);240===bite&&(utf8_lower_boundary=144),244===bite&&(utf8_upper_boundary=143),utf8_bytes_needed=3,utf8_code_point=7&bite}return null}if(!inRange(bite,utf8_lower_boundary,utf8_upper_boundary))return utf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0,utf8_lower_boundary=128,utf8_upper_boundary=191,stream.prepend(bite),decoderError(fatal);if(utf8_lower_boundary=128,utf8_upper_boundary=191,utf8_code_point=utf8_code_point<<6|63&bite,(utf8_bytes_seen+=1)!==utf8_bytes_needed)return null;var code_point=utf8_code_point;return utf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0,code_point}}function UTF8Encoder(options){options.fatal;this.handler=function(stream,code_point){if(-1===code_point)return-1;if(isASCIICodePoint(code_point))return code_point;var count,offset;inRange(code_point,128,2047)?(count=1,offset=192):inRange(code_point,2048,65535)?(count=2,offset=224):inRange(code_point,65536,1114111)&&(count=3,offset=240);for(var bytes=[(code_point>>6*count)+offset];0<count;){var temp=code_point>>6*(count-1);bytes.push(128|63&temp),count-=1}return bytes}}function SingleByteDecoder(index,options){var fatal=options.fatal;this.handler=function(stream,bite){if(-1===bite)return-1;if(isASCIIByte(bite))return bite;var code_point=index[bite-128];return null===code_point?decoderError(fatal):code_point}}function SingleByteEncoder(index,options){options.fatal;this.handler=function(stream,code_point){if(-1===code_point)return-1;if(isASCIICodePoint(code_point))return code_point;var pointer=indexPointerFor(code_point,index);return null===pointer&&encoderError(code_point),pointer+128}}function GB18030Decoder(options){var fatal=options.fatal,gb18030_first=0,gb18030_second=0,gb18030_third=0;this.handler=function(stream,bite){if(-1===bite&&0===gb18030_first&&0===gb18030_second&&0===gb18030_third)return-1;var code_point;if(-1!==bite||0===gb18030_first&&0===gb18030_second&&0===gb18030_third||(gb18030_third=gb18030_second=gb18030_first=0,decoderError(fatal)),0!==gb18030_third){code_point=null,inRange(bite,48,57)&&(code_point=function(pointer){if(39419<pointer&&pointer<189e3||1237575<pointer)return null;if(7457===pointer)return 59335;var i,offset=0,code_point_offset=0,idx=index("gb18030-ranges");for(i=0;i<idx.length;++i){var entry=idx[i];if(!(entry[0]<=pointer))break;offset=entry[0],code_point_offset=entry[1]}return code_point_offset+pointer-offset}(10*(126*(10*(gb18030_first-129)+gb18030_second-48)+gb18030_third-129)+bite-48));var buffer=[gb18030_second,gb18030_third,bite];return gb18030_third=gb18030_second=gb18030_first=0,null===code_point?(stream.prepend(buffer),decoderError(fatal)):code_point}if(0!==gb18030_second)return inRange(bite,129,254)?(gb18030_third=bite,null):(stream.prepend([gb18030_second,bite]),gb18030_second=gb18030_first=0,decoderError(fatal));if(0!==gb18030_first){if(inRange(bite,48,57))return gb18030_second=bite,null;var lead=gb18030_first,pointer=null;gb18030_first=0;var offset=bite<127?64:65;return(inRange(bite,64,126)||inRange(bite,128,254))&&(pointer=190*(lead-129)+(bite-offset)),null===(code_point=null===pointer?null:indexCodePointFor(pointer,index("gb18030")))&&isASCIIByte(bite)&&stream.prepend(bite),null===code_point?decoderError(fatal):code_point}return isASCIIByte(bite)?bite:128===bite?8364:inRange(bite,129,254)?(gb18030_first=bite,null):decoderError(fatal)}}function GB18030Encoder(options,gbk_flag){options.fatal;this.handler=function(stream,code_point){if(-1===code_point)return-1;if(isASCIICodePoint(code_point))return code_point;if(58853===code_point)return encoderError(code_point);if(gbk_flag&&8364===code_point)return 128;var pointer=indexPointerFor(code_point,index("gb18030"));if(null!==pointer){var trail=pointer%190;return[floor(pointer/190)+129,trail+(trail<63?64:65)]}if(gbk_flag)return encoderError(code_point);pointer=function(code_point){if(59335===code_point)return 7457;var i,offset=0,pointer_offset=0,idx=index("gb18030-ranges");for(i=0;i<idx.length;++i){var entry=idx[i];if(!(entry[1]<=code_point))break;offset=entry[1],pointer_offset=entry[0]}return pointer_offset+code_point-offset}(code_point);var byte1=floor(pointer/10/126/10),byte2=floor((pointer-=10*byte1*126*10)/10/126),byte3=floor((pointer-=10*byte2*126)/10);return[byte1+129,byte2+48,byte3+129,pointer-10*byte3+48]}}function Big5Decoder(options){var fatal=options.fatal,Big5_lead=0;this.handler=function(stream,bite){if(-1===bite&&0!==Big5_lead)return Big5_lead=0,decoderError(fatal);if(-1===bite&&0===Big5_lead)return-1;if(0!==Big5_lead){var lead=Big5_lead,pointer=null;Big5_lead=0;var offset=bite<127?64:98;switch((inRange(bite,64,126)||inRange(bite,161,254))&&(pointer=157*(lead-129)+(bite-offset)),pointer){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var code_point=null===pointer?null:indexCodePointFor(pointer,index("big5"));return null===code_point&&isASCIIByte(bite)&&stream.prepend(bite),null===code_point?decoderError(fatal):code_point}return isASCIIByte(bite)?bite:inRange(bite,129,254)?(Big5_lead=bite,null):decoderError(fatal)}}function Big5Encoder(options){options.fatal;this.handler=function(stream,code_point){if(-1===code_point)return-1;if(isASCIICodePoint(code_point))return code_point;var pointer=function(code_point){var index_=big5_index_no_hkscs=big5_index_no_hkscs||index("big5").map(function(code_point,pointer){return pointer<5024?null:code_point});return 9552===code_point||9566===code_point||9569===code_point||9578===code_point||21313===code_point||21317===code_point?index_.lastIndexOf(code_point):indexPointerFor(code_point,index_)}(code_point);if(null===pointer)return encoderError(code_point);var lead=floor(pointer/157)+129;if(lead<161)return encoderError(code_point);var trail=pointer%157;return[lead,trail+(trail<63?64:98)]}}function EUCJPDecoder(options){var fatal=options.fatal,eucjp_jis0212_flag=!1,eucjp_lead=0;this.handler=function(stream,bite){if(-1===bite&&0!==eucjp_lead)return eucjp_lead=0,decoderError(fatal);if(-1===bite&&0===eucjp_lead)return-1;if(142===eucjp_lead&&inRange(bite,161,223))return eucjp_lead=0,65216+bite;if(143===eucjp_lead&&inRange(bite,161,254))return eucjp_jis0212_flag=!0,eucjp_lead=bite,null;if(0!==eucjp_lead){var lead=eucjp_lead;eucjp_lead=0;var code_point=null;return inRange(lead,161,254)&&inRange(bite,161,254)&&(code_point=indexCodePointFor(94*(lead-161)+(bite-161),index(eucjp_jis0212_flag?"jis0212":"jis0208"))),eucjp_jis0212_flag=!1,inRange(bite,161,254)||stream.prepend(bite),null===code_point?decoderError(fatal):code_point}return isASCIIByte(bite)?bite:142===bite||143===bite||inRange(bite,161,254)?(eucjp_lead=bite,null):decoderError(fatal)}}function EUCJPEncoder(options){options.fatal;this.handler=function(stream,code_point){if(-1===code_point)return-1;if(isASCIICodePoint(code_point))return code_point;if(165===code_point)return 92;if(8254===code_point)return 126;if(inRange(code_point,65377,65439))return[142,code_point-65377+161];8722===code_point&&(code_point=65293);var pointer=indexPointerFor(code_point,index("jis0208"));return null===pointer?encoderError(code_point):[floor(pointer/94)+161,pointer%94+161]}}function ISO2022JPDecoder(options){var fatal=options.fatal,states_ASCII=0,states_Roman=1,states_Katakana=2,states_LeadByte=3,states_TrailByte=4,states_EscapeStart=5,states_Escape=6,iso2022jp_decoder_state=states_ASCII,iso2022jp_decoder_output_state=states_ASCII,iso2022jp_lead=0,iso2022jp_output_flag=!1;this.handler=function(stream,bite){switch(iso2022jp_decoder_state){default:case states_ASCII:return 27===bite?(iso2022jp_decoder_state=states_EscapeStart,null):inRange(bite,0,127)&&14!==bite&&15!==bite&&27!==bite?(iso2022jp_output_flag=!1,bite):-1===bite?-1:(iso2022jp_output_flag=!1,decoderError(fatal));case states_Roman:return 27===bite?(iso2022jp_decoder_state=states_EscapeStart,null):92===bite?(iso2022jp_output_flag=!1,165):126===bite?(iso2022jp_output_flag=!1,8254):inRange(bite,0,127)&&14!==bite&&15!==bite&&27!==bite&&92!==bite&&126!==bite?(iso2022jp_output_flag=!1,bite):-1===bite?-1:(iso2022jp_output_flag=!1,decoderError(fatal));case states_Katakana:return 27===bite?(iso2022jp_decoder_state=states_EscapeStart,null):inRange(bite,33,95)?(iso2022jp_output_flag=!1,65344+bite):-1===bite?-1:(iso2022jp_output_flag=!1,decoderError(fatal));case states_LeadByte:return 27===bite?(iso2022jp_decoder_state=states_EscapeStart,null):inRange(bite,33,126)?(iso2022jp_output_flag=!1,iso2022jp_lead=bite,iso2022jp_decoder_state=states_TrailByte,null):-1===bite?-1:(iso2022jp_output_flag=!1,decoderError(fatal));case states_TrailByte:if(27===bite)return iso2022jp_decoder_state=states_EscapeStart,decoderError(fatal);if(inRange(bite,33,126)){iso2022jp_decoder_state=states_LeadByte;var code_point=indexCodePointFor(94*(iso2022jp_lead-33)+bite-33,index("jis0208"));return null===code_point?decoderError(fatal):code_point}return-1===bite?(iso2022jp_decoder_state=states_LeadByte,stream.prepend(bite)):iso2022jp_decoder_state=states_LeadByte,decoderError(fatal);case states_EscapeStart:return 36===bite||40===bite?(iso2022jp_lead=bite,iso2022jp_decoder_state=states_Escape,null):(stream.prepend(bite),iso2022jp_output_flag=!1,iso2022jp_decoder_state=iso2022jp_decoder_output_state,decoderError(fatal));case states_Escape:var lead=iso2022jp_lead;iso2022jp_lead=0;var state=null;if(40===lead&&66===bite&&(state=states_ASCII),40===lead&&74===bite&&(state=states_Roman),40===lead&&73===bite&&(state=states_Katakana),36!==lead||64!==bite&&66!==bite||(state=states_LeadByte),null!==state){iso2022jp_decoder_state=iso2022jp_decoder_state=state;var output_flag=iso2022jp_output_flag;return iso2022jp_output_flag=!0,output_flag?decoderError(fatal):null}return stream.prepend([lead,bite]),iso2022jp_output_flag=!1,iso2022jp_decoder_state=iso2022jp_decoder_output_state,decoderError(fatal)}}}function ISO2022JPEncoder(options){options.fatal;var states_ASCII=0,states_Roman=1,states_jis0208=2,iso2022jp_state=states_ASCII;this.handler=function(stream,code_point){if(-1===code_point&&iso2022jp_state!==states_ASCII)return stream.prepend(code_point),iso2022jp_state=states_ASCII,[27,40,66];if(-1===code_point&&iso2022jp_state===states_ASCII)return-1;if(!(iso2022jp_state!==states_ASCII&&iso2022jp_state!==states_Roman||14!==code_point&&15!==code_point&&27!==code_point))return encoderError(65533);if(iso2022jp_state===states_ASCII&&isASCIICodePoint(code_point))return code_point;if(iso2022jp_state===states_Roman&&(isASCIICodePoint(code_point)&&92!==code_point&&126!==code_point||165==code_point||8254==code_point)){if(isASCIICodePoint(code_point))return code_point;if(165===code_point)return 92;if(8254===code_point)return 126}if(isASCIICodePoint(code_point)&&iso2022jp_state!==states_ASCII)return stream.prepend(code_point),iso2022jp_state=states_ASCII,[27,40,66];if((165===code_point||8254===code_point)&&iso2022jp_state!==states_Roman)return stream.prepend(code_point),iso2022jp_state=states_Roman,[27,40,74];8722===code_point&&(code_point=65293);var pointer=indexPointerFor(code_point,index("jis0208"));return null===pointer?encoderError(code_point):iso2022jp_state!==states_jis0208?(stream.prepend(code_point),iso2022jp_state=states_jis0208,[27,36,66]):[floor(pointer/94)+33,pointer%94+33]}}function ShiftJISDecoder(options){var fatal=options.fatal,Shift_JIS_lead=0;this.handler=function(stream,bite){if(-1===bite&&0!==Shift_JIS_lead)return Shift_JIS_lead=0,decoderError(fatal);if(-1===bite&&0===Shift_JIS_lead)return-1;if(0!==Shift_JIS_lead){var lead=Shift_JIS_lead,pointer=null;Shift_JIS_lead=0;var offset=bite<127?64:65,lead_offset=lead<160?129:193;if((inRange(bite,64,126)||inRange(bite,128,252))&&(pointer=188*(lead-lead_offset)+bite-offset),inRange(pointer,8836,10715))return 48508+pointer;var code_point=null===pointer?null:indexCodePointFor(pointer,index("jis0208"));return null===code_point&&isASCIIByte(bite)&&stream.prepend(bite),null===code_point?decoderError(fatal):code_point}return isASCIIByte(bite)||128===bite?bite:inRange(bite,161,223)?65216+bite:inRange(bite,129,159)||inRange(bite,224,252)?(Shift_JIS_lead=bite,null):decoderError(fatal)}}function ShiftJISEncoder(options){options.fatal;this.handler=function(stream,code_point){if(-1===code_point)return-1;if(isASCIICodePoint(code_point)||128===code_point)return code_point;if(165===code_point)return 92;if(8254===code_point)return 126;if(inRange(code_point,65377,65439))return code_point-65377+161;8722===code_point&&(code_point=65293);var pointer=function(code_point){return(shift_jis_index=shift_jis_index||index("jis0208").map(function(code_point,pointer){return inRange(pointer,8272,8835)?null:code_point})).indexOf(code_point)}(code_point);if(null===pointer)return encoderError(code_point);var lead=floor(pointer/188),trail=pointer%188;return[lead+(lead<31?129:193),trail+(trail<63?64:65)]}}function EUCKRDecoder(options){var fatal=options.fatal,euckr_lead=0;this.handler=function(stream,bite){if(-1===bite&&0!==euckr_lead)return euckr_lead=0,decoderError(fatal);if(-1===bite&&0===euckr_lead)return-1;if(0!==euckr_lead){var lead=euckr_lead,pointer=null;euckr_lead=0,inRange(bite,65,254)&&(pointer=190*(lead-129)+(bite-65));var code_point=null===pointer?null:indexCodePointFor(pointer,index("euc-kr"));return null===pointer&&isASCIIByte(bite)&&stream.prepend(bite),null===code_point?decoderError(fatal):code_point}return isASCIIByte(bite)?bite:inRange(bite,129,254)?(euckr_lead=bite,null):decoderError(fatal)}}function EUCKREncoder(options){options.fatal;this.handler=function(stream,code_point){if(-1===code_point)return-1;if(isASCIICodePoint(code_point))return code_point;var pointer=indexPointerFor(code_point,index("euc-kr"));return null===pointer?encoderError(code_point):[floor(pointer/190)+129,pointer%190+65]}}function convertCodeUnitToBytes(code_unit,utf16be){var byte1=code_unit>>8,byte2=255&code_unit;return utf16be?[byte1,byte2]:[byte2,byte1]}function UTF16Decoder(utf16_be,options){var fatal=options.fatal,utf16_lead_byte=null,utf16_lead_surrogate=null;this.handler=function(stream,bite){if(-1===bite&&(null!==utf16_lead_byte||null!==utf16_lead_surrogate))return decoderError(fatal);if(-1===bite&&null===utf16_lead_byte&&null===utf16_lead_surrogate)return-1;if(null===utf16_lead_byte)return utf16_lead_byte=bite,null;var code_unit;if(code_unit=utf16_be?(utf16_lead_byte<<8)+bite:(bite<<8)+utf16_lead_byte,(utf16_lead_byte=null)!==utf16_lead_surrogate){var lead_surrogate=utf16_lead_surrogate;return utf16_lead_surrogate=null,inRange(code_unit,56320,57343)?65536+1024*(lead_surrogate-55296)+(code_unit-56320):(stream.prepend(convertCodeUnitToBytes(code_unit,utf16_be)),decoderError(fatal))}return inRange(code_unit,55296,56319)?(utf16_lead_surrogate=code_unit,null):inRange(code_unit,56320,57343)?decoderError(fatal):code_unit}}function UTF16Encoder(utf16_be,options){options.fatal;this.handler=function(stream,code_point){if(-1===code_point)return-1;if(inRange(code_point,0,65535))return convertCodeUnitToBytes(code_point,utf16_be);var lead=convertCodeUnitToBytes(55296+(code_point-65536>>10),utf16_be),trail=convertCodeUnitToBytes(56320+(code_point-65536&1023),utf16_be);return lead.concat(trail)}}function XUserDefinedDecoder(options){options.fatal;this.handler=function(stream,bite){return-1===bite?-1:isASCIIByte(bite)?bite:63360+bite-128}}function XUserDefinedEncoder(options){options.fatal;this.handler=function(stream,code_point){return-1===code_point?-1:isASCIICodePoint(code_point)?code_point:inRange(code_point,63360,63487)?code_point-63360+128:encoderError(code_point)}}Object.defineProperty&&(Object.defineProperty(TextDecoder.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(TextDecoder.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(TextDecoder.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),TextDecoder.prototype.decode=function(input,options){var bytes;bytes="object"==typeof input&&input instanceof ArrayBuffer?new Uint8Array(input):"object"==typeof input&&"buffer"in input&&input.buffer instanceof ArrayBuffer?new Uint8Array(input.buffer,input.byteOffset,input.byteLength):new Uint8Array(0),options=ToDictionary(options),this._do_not_flush||(this._decoder=decoders[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(options.stream);for(var result,input_stream=new Stream(bytes),output=[];;){var token=input_stream.read();if(-1===token)break;if(-1===(result=this._decoder.handler(input_stream,token)))break;null!==result&&(Array.isArray(result)?output.push.apply(output,result):output.push(result))}if(!this._do_not_flush){do{if(-1===(result=this._decoder.handler(input_stream,input_stream.read())))break;null!==result&&(Array.isArray(result)?output.push.apply(output,result):output.push(result))}while(!input_stream.endOfStream());this._decoder=null}return function(stream){var array,item;return array=["UTF-8","UTF-16LE","UTF-16BE"],item=this._encoding.name,-1===array.indexOf(item)||this._ignoreBOM||this._BOMseen||(0<stream.length&&65279===stream[0]?(this._BOMseen=!0,stream.shift()):0<stream.length&&(this._BOMseen=!0)),function(code_points){for(var s="",i=0;i<code_points.length;++i){var cp=code_points[i];cp<=65535?s+=String.fromCharCode(cp):(cp-=65536,s+=String.fromCharCode(55296+(cp>>10),56320+(1023&cp)))}return s}(stream)}.call(this,output)},Object.defineProperty&&Object.defineProperty(TextEncoder.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),TextEncoder.prototype.encode=function(opt_string,options){opt_string=void 0===opt_string?"":String(opt_string),options=ToDictionary(options),this._do_not_flush||(this._encoder=encoders[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(options.stream);for(var result,input=new Stream(function(string){for(var s=String(string),n=s.length,i=0,u=[];i<n;){var c=s.charCodeAt(i);if(c<55296||57343<c)u.push(c);else if(56320<=c&&c<=57343)u.push(65533);else if(55296<=c&&c<=56319)if(i===n-1)u.push(65533);else{var d=s.charCodeAt(i+1);if(56320<=d&&d<=57343){var a=1023&c,b=1023&d;u.push(65536+(a<<10)+b),i+=1}else u.push(65533)}i+=1}return u}(opt_string)),output=[];;){var token=input.read();if(-1===token)break;if(-1===(result=this._encoder.handler(input,token)))break;Array.isArray(result)?output.push.apply(output,result):output.push(result)}if(!this._do_not_flush){for(;-1!==(result=this._encoder.handler(input,input.read()));)Array.isArray(result)?output.push.apply(output,result):output.push(result);this._encoder=null}return new Uint8Array(output)},encoders["UTF-8"]=function(options){return new UTF8Encoder(options)},decoders["UTF-8"]=function(options){return new UTF8Decoder(options)},"encoding-indexes"in global&&encodings.forEach(function(category){"Legacy single-byte encodings"===category.heading&&category.encodings.forEach(function(encoding){var name=encoding.name,idx=index(name.toLowerCase());decoders[name]=function(options){return new SingleByteDecoder(idx,options)},encoders[name]=function(options){return new SingleByteEncoder(idx,options)}})}),decoders.GBK=function(options){return new GB18030Decoder(options)},encoders.GBK=function(options){return new GB18030Encoder(options,!0)},encoders.gb18030=function(options){return new GB18030Encoder(options)},decoders.gb18030=function(options){return new GB18030Decoder(options)},encoders.Big5=function(options){return new Big5Encoder(options)},decoders.Big5=function(options){return new Big5Decoder(options)},encoders["EUC-JP"]=function(options){return new EUCJPEncoder(options)},decoders["EUC-JP"]=function(options){return new EUCJPDecoder(options)},encoders["ISO-2022-JP"]=function(options){return new ISO2022JPEncoder(options)},decoders["ISO-2022-JP"]=function(options){return new ISO2022JPDecoder(options)},encoders.Shift_JIS=function(options){return new ShiftJISEncoder(options)},decoders.Shift_JIS=function(options){return new ShiftJISDecoder(options)},encoders["EUC-KR"]=function(options){return new EUCKREncoder(options)},decoders["EUC-KR"]=function(options){return new EUCKRDecoder(options)},encoders["UTF-16BE"]=function(options){return new UTF16Encoder(!0,options)},decoders["UTF-16BE"]=function(options){return new UTF16Decoder(!0,options)},encoders["UTF-16LE"]=function(options){return new UTF16Encoder(!1,options)},decoders["UTF-16LE"]=function(options){return new UTF16Decoder(!1,options)},encoders["x-user-defined"]=function(options){return new XUserDefinedEncoder(options)},decoders["x-user-defined"]=function(options){return new XUserDefinedDecoder(options)},global.TextEncoder||(global.TextEncoder=TextEncoder),global.TextDecoder||(global.TextDecoder=TextDecoder),void 0!==module&&module.exports&&(module.exports={TextEncoder:global.TextEncoder,TextDecoder:global.TextDecoder,EncodingIndexes:global["encoding-indexes"]})}(this||{})},{"./encoding-indexes.js":3}],5:[function(require,module,exports){(function(Buffer){var exports,bigInt,PS={};!function(exports){"use strict";exports.localStorage=window.localStorage,exports.sessionStorage=window.sessionStorage,exports.unsafeLength=function(storage){return function(){return storage.length}},exports.unsafeKey=function(null2Maybe,storage,num){return function(){return null2Maybe(storage.key(num))}},exports.unsafeGetItem=function(null2Maybe,storage,str){return function(){return null2Maybe(storage.getItem(str))}},exports.unsafeSetItem=function(storage,str,val){return function(){return storage.setItem(str,val),{}}},exports.unsafeRemoveItem=function(storage,str){return function(){return storage.removeItem(str),{}}},exports.unsafeClear=function(storage){return function(){return storage.clear(),{}}},exports.null2MaybeImpl=function(just,nothing,n){return null==n?nothing:just(n)}}(PS["Browser.WebStorage"]=PS["Browser.WebStorage"]||{}),function(exports){"use strict";var Semigroupoid=function(compose){this.compose=compose},semigroupoidFn=new Semigroupoid(function(f){return function(g){return function(x){return f(g(x))}}});exports.compose=function(dict){return dict.compose},exports.Semigroupoid=Semigroupoid,exports.semigroupoidFn=semigroupoidFn}(PS["Control.Semigroupoid"]=PS["Control.Semigroupoid"]||{}),function(exports){"use strict";var Control_Semigroupoid=PS["Control.Semigroupoid"],Category=function(Semigroupoid0,id){this.Semigroupoid0=Semigroupoid0,this.id=id},categoryFn=new Category(function(){return Control_Semigroupoid.semigroupoidFn},function(x){return x});exports.Category=Category,exports.id=function(dict){return dict.id},exports.categoryFn=categoryFn}(PS["Control.Category"]=PS["Control.Category"]||{}),function(exports){"use strict";exports.pureE=function(a){return function(){return a}},exports.bindE=function(a){return function(f){return function(){return f(a())()}}},exports.runPure=function(f){return f()},exports.foreachE=function(as){return function(f){return function(){for(var i=0,l=as.length;i<l;i++)f(as[i])()}}}}(PS["Control.Monad.Eff"]=PS["Control.Monad.Eff"]||{}),function(exports){"use strict";(PS["Control.Apply"]=PS["Control.Apply"]||{}).arrayApply=function(fs){return function(xs){for(var l=fs.length,k=xs.length,result=new Array(l*k),n=0,i=0;i<l;i++)for(var f=fs[i],j=0;j<k;j++)result[n++]=f(xs[j]);return result}}}(),function(exports){"use strict";PS["Control.Category"];exports.flip=function(f){return function(b){return function(a){return f(a)(b)}}},exports.const=function(a){return function(v){return a}},exports.apply=function(f){return function(x){return f(x)}},exports.on=function(f){return function(g){return function(x){return function(y){return f(g(x))(g(y))}}}}}(PS["Data.Function"]=PS["Data.Function"]||{}),function(exports){"use strict";(PS["Data.Functor"]=PS["Data.Functor"]||{}).arrayMap=function(f){return function(arr){for(var l=arr.length,result=new Array(l),i=0;i<l;i++)result[i]=f(arr[i]);return result}}}(),function(exports){"use strict";(PS["Data.Unit"]=PS["Data.Unit"]||{}).unit={}}(),function(exports){"use strict";exports.showIntImpl=function(n){return n.toString()},exports.showNumberImpl=function(n){var str=n.toString();return isNaN(str+".0")?str:str+".0"},exports.showCharImpl=function(c){var code=c.charCodeAt(0);if(code<32||127===code){switch(c){case"":return"'\\a'";case"\b":return"'\\b'";case"\f":return"'\\f'";case"\n":return"'\\n'";case"\r":return"'\\r'";case"\t":return"'\\t'";case"\v":return"'\\v'"}return"'\\"+code.toString(10)+"'"}return"'"===c||"\\"===c?"'\\"+c+"'":"'"+c+"'"},exports.showStringImpl=function(s){var l=s.length;return'"'+s.replace(/[\0-\x1F\x7F"\\]/g,function(c,i){switch(c){case'"':case"\\":return"\\"+c;case"":return"\\a";case"\b":return"\\b";case"\f":return"\\f";case"\n":return"\\n";case"\r":return"\\r";case"\t":return"\\t";case"\v":return"\\v"}var k=i+1,empty=k<l&&"0"<=s[k]&&s[k]<="9"?"\\&":"";return"\\"+c.charCodeAt(0).toString(10)+empty})+'"'},exports.showArrayImpl=function(f){return function(xs){for(var ss=[],i=0,l=xs.length;i<l;i++)ss[i]=f(xs[i]);return"["+ss.join(",")+"]"}}}(PS["Data.Show"]=PS["Data.Show"]||{}),function(exports){"use strict";var $foreign=PS["Data.Show"],Show=function(show){this.show=show},showString=new Show($foreign.showStringImpl),showNumber=new Show($foreign.showNumberImpl),showInt=new Show($foreign.showIntImpl),showChar=new Show($foreign.showCharImpl),show=function(dict){return dict.show};exports.Show=Show,exports.show=show,exports.showInt=showInt,exports.showNumber=showNumber,exports.showChar=showChar,exports.showString=showString,exports.showArray=function(dictShow){return new Show($foreign.showArrayImpl(show(dictShow)))}}(PS["Data.Show"]=PS["Data.Show"]||{}),function(exports){"use strict";var $foreign=PS["Data.Unit"];PS["Data.Show"];exports.unit=$foreign.unit}(PS["Data.Unit"]=PS["Data.Unit"]||{}),function(exports){"use strict";var $foreign=PS["Data.Functor"],Control_Semigroupoid=PS["Control.Semigroupoid"],Data_Function=PS["Data.Function"],Data_Unit=PS["Data.Unit"],Functor=function(map){this.map=map},map=function(dict){return dict.map},functorFn=new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)),functorArray=new Functor($foreign.arrayMap);exports.Functor=Functor,exports.map=map,exports.mapFlipped=function(dictFunctor){return function(fa){return function(f){return map(dictFunctor)(f)(fa)}}},exports.void=function(dictFunctor){return map(dictFunctor)(Data_Function.const(Data_Unit.unit))},exports.voidRight=function(dictFunctor){return function(x){return map(dictFunctor)(Data_Function.const(x))}},exports.voidLeft=function(dictFunctor){return function(f){return function(x){return map(dictFunctor)(Data_Function.const(x))(f)}}},exports.functorFn=functorFn,exports.functorArray=functorArray}(PS["Data.Functor"]=PS["Data.Functor"]||{}),function(exports){"use strict";var $foreign=PS["Control.Apply"],Control_Category=PS["Control.Category"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Apply=function(Functor0,apply){this.Functor0=Functor0,this.apply=apply},applyFn=new Apply(function(){return Data_Functor.functorFn},function(f){return function(g){return function(x){return f(x)(g(x))}}}),applyArray=new Apply(function(){return Data_Functor.functorArray},$foreign.arrayApply),apply=function(dict){return dict.apply};exports.Apply=Apply,exports.apply=apply,exports.applyFirst=function(dictApply){return function(a){return function(b){return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function.const)(a))(b)}}},exports.applySecond=function(dictApply){return function(a){return function(b){return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function.const(Control_Category.id(Control_Category.categoryFn)))(a))(b)}}},exports.lift2=function(dictApply){return function(f){return function(a){return function(b){return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b)}}}},exports.applyFn=applyFn,exports.applyArray=applyArray}(PS["Control.Apply"]=PS["Control.Apply"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_Unit=(PS["Data.Functor"],PS["Data.Unit"]),Applicative=function(Apply0,pure){this.Apply0=Apply0,this.pure=pure},pure=function(dict){return dict.pure},applicativeArray=new Applicative(function(){return Control_Apply.applyArray},function(x){return[x]});exports.Applicative=Applicative,exports.pure=pure,exports.liftA1=function(dictApplicative){return function(f){return function(a){return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a)}}},exports.unless=function(dictApplicative){return function(v){return function(v1){if(!v)return v1;if(v)return pure(dictApplicative)(Data_Unit.unit);throw new Error("Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: "+[v.constructor.name,v1.constructor.name])}}},exports.when=function(dictApplicative){return function(v){return function(v1){if(v)return v1;if(!v)return pure(dictApplicative)(Data_Unit.unit);throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: "+[v.constructor.name,v1.constructor.name])}}},exports.applicativeArray=applicativeArray}(PS["Control.Applicative"]=PS["Control.Applicative"]||{}),function(exports){"use strict";(PS["Control.Bind"]=PS["Control.Bind"]||{}).arrayBind=function(arr){return function(f){for(var result=[],i=0,l=arr.length;i<l;i++)Array.prototype.push.apply(result,f(arr[i]));return result}}}(),function(exports){"use strict";var $foreign=PS["Control.Bind"],Control_Apply=(PS["Control.Applicative"],PS["Control.Apply"]),Control_Category=PS["Control.Category"],Data_Function=PS["Data.Function"],Bind=(PS["Data.Functor"],PS["Data.Unit"],function(Apply0,bind){this.Apply0=Apply0,this.bind=bind}),Discard=function(discard){this.discard=discard},bindArray=new Bind(function(){return Control_Apply.applyArray},$foreign.arrayBind),bind=function(dict){return dict.bind},bindFlipped=function(dictBind){return Data_Function.flip(bind(dictBind))},discardUnit=new Discard(function(dictBind){return bind(dictBind)});exports.Bind=Bind,exports.bind=bind,exports.bindFlipped=bindFlipped,exports.Discard=Discard,exports.discard=function(dict){return dict.discard},exports.join=function(dictBind){return function(m){return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn))}},exports.composeKleisliFlipped=function(dictBind){return function(f){return function(g){return function(a){return bindFlipped(dictBind)(f)(g(a))}}}},exports.bindArray=bindArray,exports.discardUnit=discardUnit}(PS["Control.Bind"]=PS["Control.Bind"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=(PS["Control.Apply"],PS["Control.Bind"]);PS["Data.Functor"],PS["Data.Unit"];exports.Monad=function(Applicative0,Bind1){this.Applicative0=Applicative0,this.Bind1=Bind1},exports.ap=function(dictMonad){return function(f){return function(a){return Control_Bind.bind(dictMonad.Bind1())(f)(function(v){return Control_Bind.bind(dictMonad.Bind1())(a)(function(v1){return Control_Applicative.pure(dictMonad.Applicative0())(v(v1))})})}}}}(PS["Control.Monad"]=PS["Control.Monad"]||{}),function(exports){"use strict";(PS["Data.Boolean"]=PS["Data.Boolean"]||{}).otherwise=!0}(),function(exports){"use strict";exports.refEq=function(r1){return function(r2){return r1===r2}},exports.eqArrayImpl=function(f){return function(xs){return function(ys){if(xs.length!==ys.length)return!1;for(var i=0;i<xs.length;i++)if(!f(xs[i])(ys[i]))return!1;return!0}}}}(PS["Data.Eq"]=PS["Data.Eq"]||{}),function(exports){"use strict";var $foreign=PS["Data.Eq"],Eq=(PS["Data.Unit"],PS["Data.Void"],function(eq){this.eq=eq}),eqVoid=new Eq(function(v){return function(v1){return!0}}),eqUnit=new Eq(function(v){return function(v1){return!0}}),eqString=new Eq($foreign.refEq),eqNumber=new Eq($foreign.refEq),eqInt=new Eq($foreign.refEq),eqChar=new Eq($foreign.refEq),eqBoolean=new Eq($foreign.refEq),eq=function(dict){return dict.eq};exports.Eq=Eq,exports.eq=eq,exports.notEq=function(dictEq){return function(x){return function(y){return eq(eqBoolean)(eq(dictEq)(x)(y))(!1)}}},exports.eqBoolean=eqBoolean,exports.eqInt=eqInt,exports.eqNumber=eqNumber,exports.eqChar=eqChar,exports.eqString=eqString,exports.eqUnit=eqUnit,exports.eqVoid=eqVoid,exports.eqArray=function(dictEq){return new Eq($foreign.eqArrayImpl(eq(dictEq)))}}(PS["Data.Eq"]=PS["Data.Eq"]||{}),function(exports){"use strict";exports.intDegree=function(x){return Math.min(Math.abs(x),2147483647)},exports.intDiv=function(x){return function(y){return x/y|0}},exports.intMod=function(x){return function(y){return x%y}}}(PS["Data.EuclideanRing"]=PS["Data.EuclideanRing"]||{}),function(exports){"use strict";exports.intSub=function(x){return function(y){return x-y|0}},exports.numSub=function(n1){return function(n2){return n1-n2}}}(PS["Data.Ring"]=PS["Data.Ring"]||{}),function(exports){"use strict";exports.intAdd=function(x){return function(y){return x+y|0}},exports.intMul=function(x){return function(y){return x*y|0}},exports.numAdd=function(n1){return function(n2){return n1+n2}},exports.numMul=function(n1){return function(n2){return n1*n2}}}(PS["Data.Semiring"]=PS["Data.Semiring"]||{}),function(exports){"use strict";var $foreign=PS["Data.Semiring"],Semiring=(PS["Data.Unit"],function(add,mul,one,zero){this.add=add,this.mul=mul,this.one=one,this.zero=zero}),semiringNumber=new Semiring($foreign.numAdd,$foreign.numMul,1,0),semiringInt=new Semiring($foreign.intAdd,$foreign.intMul,1,0);exports.Semiring=Semiring,exports.add=function(dict){return dict.add},exports.zero=function(dict){return dict.zero},exports.mul=function(dict){return dict.mul},exports.one=function(dict){return dict.one},exports.semiringInt=semiringInt,exports.semiringNumber=semiringNumber}(PS["Data.Semiring"]=PS["Data.Semiring"]||{}),function(exports){"use strict";var $foreign=PS["Data.Ring"],Data_Semiring=PS["Data.Semiring"],Ring=(PS["Data.Unit"],function(Semiring0,sub){this.Semiring0=Semiring0,this.sub=sub}),sub=function(dict){return dict.sub},ringNumber=new Ring(function(){return Data_Semiring.semiringNumber},$foreign.numSub),ringInt=new Ring(function(){return Data_Semiring.semiringInt},$foreign.intSub);exports.Ring=Ring,exports.sub=sub,exports.negate=function(dictRing){return function(a){return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a)}},exports.ringInt=ringInt,exports.ringNumber=ringNumber}(PS["Data.Ring"]=PS["Data.Ring"]||{}),function(exports){"use strict";var Data_Ring=PS["Data.Ring"],CommutativeRing=(PS["Data.Semiring"],PS["Data.Unit"],function(Ring0){this.Ring0=Ring0}),commutativeRingNumber=new CommutativeRing(function(){return Data_Ring.ringNumber}),commutativeRingInt=new CommutativeRing(function(){return Data_Ring.ringInt});exports.CommutativeRing=CommutativeRing,exports.commutativeRingInt=commutativeRingInt,exports.commutativeRingNumber=commutativeRingNumber}(PS["Data.CommutativeRing"]=PS["Data.CommutativeRing"]||{}),function(exports){"use strict";exports.boolConj=function(b1){return function(b2){return b1&&b2}},exports.boolDisj=function(b1){return function(b2){return b1||b2}},exports.boolNot=function(b){return!b}}(PS["Data.HeytingAlgebra"]=PS["Data.HeytingAlgebra"]||{}),function(exports){"use strict";var $foreign=PS["Data.HeytingAlgebra"],HeytingAlgebra=(PS["Data.Unit"],function(conj,disj,ff,implies,not,tt){this.conj=conj,this.disj=disj,this.ff=ff,this.implies=implies,this.not=not,this.tt=tt}),tt=function(dict){return dict.tt},not=function(dict){return dict.not},implies=function(dict){return dict.implies},ff=function(dict){return dict.ff},disj=function(dict){return dict.disj},heytingAlgebraBoolean=new HeytingAlgebra($foreign.boolConj,$foreign.boolDisj,!1,function(a){return function(b){return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b)}},$foreign.boolNot,!0),conj=function(dict){return dict.conj};exports.HeytingAlgebra=HeytingAlgebra,exports.tt=tt,exports.ff=ff,exports.implies=implies,exports.conj=conj,exports.disj=disj,exports.not=not,exports.heytingAlgebraBoolean=heytingAlgebraBoolean,exports.heytingAlgebraFunction=function(dictHeytingAlgebra){return new HeytingAlgebra(function(f){return function(g){return function(a){return conj(dictHeytingAlgebra)(f(a))(g(a))}}},function(f){return function(g){return function(a){return disj(dictHeytingAlgebra)(f(a))(g(a))}}},function(v){return ff(dictHeytingAlgebra)},function(f){return function(g){return function(a){return implies(dictHeytingAlgebra)(f(a))(g(a))}}},function(f){return function(a){return not(dictHeytingAlgebra)(f(a))}},function(v){return tt(dictHeytingAlgebra)})}}(PS["Data.HeytingAlgebra"]=PS["Data.HeytingAlgebra"]||{}),function(exports){"use strict";var $foreign=PS["Data.EuclideanRing"],Data_CommutativeRing=(PS["Data.BooleanAlgebra"],PS["Data.CommutativeRing"]),Data_Eq=PS["Data.Eq"],Data_Semiring=(PS["Data.HeytingAlgebra"],PS["Data.Ring"],PS["Data.Semiring"]),EuclideanRing=function(CommutativeRing0,degree,div,mod){this.CommutativeRing0=CommutativeRing0,this.degree=degree,this.div=div,this.mod=mod},mod=function(dict){return dict.mod},euclideanRingInt=new EuclideanRing(function(){return Data_CommutativeRing.commutativeRingInt},$foreign.intDegree,$foreign.intDiv,$foreign.intMod);exports.EuclideanRing=EuclideanRing,exports.degree=function(dict){return dict.degree},exports.div=function(dict){return dict.div},exports.mod=mod,exports.gcd=function($copy_dictEq){return function($copy_dictEuclideanRing){return function($copy_a){return function($copy_b){var $tco_result,$tco_var_dictEq=$copy_dictEq,$tco_var_dictEuclideanRing=$copy_dictEuclideanRing,$tco_var_a=$copy_a,$tco_done=!1;function $tco_loop(dictEq,dictEuclideanRing,a,b){if(Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())))return $tco_done=!0,a;$tco_var_dictEq=dictEq,$tco_var_a=b,$copy_b=mod($tco_var_dictEuclideanRing=dictEuclideanRing)(a)(b)}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_dictEq,$tco_var_dictEuclideanRing,$tco_var_a,$copy_b);return $tco_result}}}},exports.euclideanRingInt=euclideanRingInt}(PS["Data.EuclideanRing"]=PS["Data.EuclideanRing"]||{}),function(exports){"use strict";(PS["Data.Ord"]=PS["Data.Ord"]||{}).ordArrayImpl=function(f){return function(xs){return function(ys){for(var i=0,xlen=xs.length,ylen=ys.length;i<xlen&&i<ylen;){var x=xs[i],y=ys[i],o=f(x)(y);if(0!==o)return o;i++}return xlen===ylen?0:ylen<xlen?-1:1}}}}(),function(exports){"use strict";(PS["Data.Ord.Unsafe"]=PS["Data.Ord.Unsafe"]||{}).unsafeCompareImpl=function(lt){return function(eq){return function(gt){return function(x){return function(y){return x<y?lt:x===y?eq:gt}}}}}}(),function(exports){"use strict";exports.concatString=function(s1){return function(s2){return s1+s2}},exports.concatArray=function(xs){return function(ys){return 0===xs.length?ys:0===ys.length?xs:xs.concat(ys)}}}(PS["Data.Semigroup"]=PS["Data.Semigroup"]||{}),function(exports){"use strict";var $foreign=PS["Data.Semigroup"],Data_Unit=PS["Data.Unit"],Semigroup=(PS["Data.Void"],function(append){this.append=append}),semigroupUnit=new Semigroup(function(v){return function(v1){return Data_Unit.unit}}),semigroupString=new Semigroup($foreign.concatString),semigroupArray=new Semigroup($foreign.concatArray),append=function(dict){return dict.append};exports.Semigroup=Semigroup,exports.append=append,exports.semigroupString=semigroupString,exports.semigroupUnit=semigroupUnit,exports.semigroupFn=function(dictSemigroup){return new Semigroup(function(f){return function(g){return function(x){return append(dictSemigroup)(f(x))(g(x))}}})},exports.semigroupArray=semigroupArray}(PS["Data.Semigroup"]=PS["Data.Semigroup"]||{}),function(exports){"use strict";PS["Data.Eq"],PS["Data.Semigroup"],PS["Data.Show"];var LT=function(){function LT(){}return LT.value=new LT,LT}(),GT=function(){function GT(){}return GT.value=new GT,GT}(),EQ=function(){function EQ(){}return EQ.value=new EQ,EQ}();exports.LT=LT,exports.GT=GT,exports.EQ=EQ}(PS["Data.Ordering"]=PS["Data.Ordering"]||{}),function(exports){"use strict";var $foreign=PS["Data.Ord.Unsafe"],Data_Ordering=PS["Data.Ordering"],unsafeCompare=$foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);exports.unsafeCompare=unsafeCompare}(PS["Data.Ord.Unsafe"]=PS["Data.Ord.Unsafe"]||{}),function(exports){"use strict";var $foreign=PS["Data.Ord"],Data_Eq=PS["Data.Eq"],Data_Function=PS["Data.Function"],Data_Ord_Unsafe=PS["Data.Ord.Unsafe"],Data_Ordering=PS["Data.Ordering"],Data_Ring=PS["Data.Ring"],Data_Semiring=PS["Data.Semiring"],Ord=(PS["Data.Unit"],PS["Data.Void"],function(Eq0,compare){this.Eq0=Eq0,this.compare=compare}),ordVoid=new Ord(function(){return Data_Eq.eqVoid},function(v){return function(v1){return Data_Ordering.EQ.value}}),ordUnit=new Ord(function(){return Data_Eq.eqUnit},function(v){return function(v1){return Data_Ordering.EQ.value}}),ordString=new Ord(function(){return Data_Eq.eqString},Data_Ord_Unsafe.unsafeCompare),ordNumber=new Ord(function(){return Data_Eq.eqNumber},Data_Ord_Unsafe.unsafeCompare),ordInt=new Ord(function(){return Data_Eq.eqInt},Data_Ord_Unsafe.unsafeCompare),ordBoolean=new Ord(function(){return Data_Eq.eqBoolean},Data_Ord_Unsafe.unsafeCompare),compare=function(dict){return dict.compare},greaterThanOrEq=function(dictOrd){return function(a1){return function(a2){return!(compare(dictOrd)(a1)(a2)instanceof Data_Ordering.LT)}}};exports.Ord=Ord,exports.compare=compare,exports.lessThan=function(dictOrd){return function(a1){return function(a2){return compare(dictOrd)(a1)(a2)instanceof Data_Ordering.LT}}},exports.lessThanOrEq=function(dictOrd){return function(a1){return function(a2){return!(compare(dictOrd)(a1)(a2)instanceof Data_Ordering.GT)}}},exports.greaterThan=function(dictOrd){return function(a1){return function(a2){return compare(dictOrd)(a1)(a2)instanceof Data_Ordering.GT}}},exports.greaterThanOrEq=greaterThanOrEq,exports.comparing=function(dictOrd){return function(f){return Data_Function.on(compare(dictOrd))(f)}},exports.abs=function(dictOrd){return function(dictRing){return function(x){return greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()))?x:Data_Ring.negate(dictRing)(x)}}},exports.signum=function(dictOrd){return function(dictRing){return function(x){return greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()))?Data_Semiring.one(dictRing.Semiring0()):Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()))}}},exports.ordBoolean=ordBoolean,exports.ordInt=ordInt,exports.ordNumber=ordNumber,exports.ordString=ordString,exports.ordUnit=ordUnit,exports.ordVoid=ordVoid,exports.ordArray=function(dictOrd){return new Ord(function(){return Data_Eq.eqArray(dictOrd.Eq0())},(toDelta=function(x){return function(y){var v=compare(dictOrd)(x)(y);if(v instanceof Data_Ordering.EQ)return 0;if(v instanceof Data_Ordering.LT)return 1;if(v instanceof Data_Ordering.GT)return-1;throw new Error("Failed pattern match at Data.Ord line 61, column 7 - line 66, column 1: "+[v.constructor.name])}},function(xs){return function(ys){return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys))}}));var toDelta}}(PS["Data.Ord"]=PS["Data.Ord"]||{}),function(exports){"use strict";PS["Data.Boolean"],PS["Data.Eq"],PS["Data.EuclideanRing"];var Data_Function=PS["Data.Function"],Data_Semigroup=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"]),Data_Unit=PS["Data.Unit"],Monoid=(PS.Prelude,function(Semigroup0,mempty){this.Semigroup0=Semigroup0,this.mempty=mempty}),monoidUnit=new Monoid(function(){return Data_Semigroup.semigroupUnit},Data_Unit.unit),monoidString=new Monoid(function(){return Data_Semigroup.semigroupString},""),monoidArray=new Monoid(function(){return Data_Semigroup.semigroupArray},[]),mempty=function(dict){return dict.mempty};exports.Monoid=Monoid,exports.mempty=mempty,exports.monoidUnit=monoidUnit,exports.monoidFn=function(dictMonoid){return new Monoid(function(){return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0())},Data_Function.const(mempty(dictMonoid)))},exports.monoidString=monoidString,exports.monoidArray=monoidArray}(PS["Data.Monoid"]=PS["Data.Monoid"]||{}),function(exports){"use strict";var $foreign=PS["Control.Monad.Eff"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad=PS["Control.Monad"],Data_Functor=PS["Data.Functor"],monadEff=(PS["Data.Monoid"],PS["Data.Semigroup"],PS["Data.Unit"],new Control_Monad.Monad(function(){return applicativeEff},function(){return bindEff})),bindEff=new Control_Bind.Bind(function(){return applyEff},$foreign.bindE),applyEff=new Control_Apply.Apply(function(){return functorEff},Control_Monad.ap(monadEff)),applicativeEff=new Control_Applicative.Applicative(function(){return applyEff},$foreign.pureE),functorEff=new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));exports.functorEff=functorEff,exports.applyEff=applyEff,exports.applicativeEff=applicativeEff,exports.bindEff=bindEff,exports.monadEff=monadEff,exports.runPure=$foreign.runPure,exports.foreachE=$foreign.foreachE}(PS["Control.Monad.Eff"]=PS["Control.Monad.Eff"]||{}),function(exports){"use strict";(PS["Data.Function.Uncurried"]=PS["Data.Function.Uncurried"]||{}).runFn4=function(fn){return function(a){return function(b){return function(c){return function(d){return fn(a,b,c,d)}}}}}}(),function(exports){"use strict";var $foreign=PS["Data.Function.Uncurried"];PS["Data.Unit"];exports.runFn4=$foreign.runFn4}(PS["Data.Function.Uncurried"]=PS["Data.Function.Uncurried"]||{}),function(exports){"use strict";var Data_Functor=PS["Data.Functor"],Data_Semigroup=PS["Data.Semigroup"],Alt=function(Functor0,alt){this.Functor0=Functor0,this.alt=alt},altArray=new Alt(function(){return Data_Functor.functorArray},Data_Semigroup.append(Data_Semigroup.semigroupArray));exports.Alt=Alt,exports.alt=function(dict){return dict.alt},exports.altArray=altArray}(PS["Control.Alt"]=PS["Control.Alt"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Plus=(PS["Data.Functor"],function(Alt0,empty){this.Alt0=Alt0,this.empty=empty}),plusArray=new Plus(function(){return Control_Alt.altArray},[]);exports.Plus=Plus,exports.empty=function(dict){return dict.empty},exports.plusArray=plusArray}(PS["Control.Plus"]=PS["Control.Plus"]||{}),function(exports){"use strict";PS["Control.Alt"];var Control_Applicative=PS["Control.Applicative"],Control_Plus=(PS["Control.Apply"],PS["Control.Plus"]),Alternative=(PS["Data.Functor"],function(Applicative0,Plus1){this.Applicative0=Applicative0,this.Plus1=Plus1}),alternativeArray=new Alternative(function(){return Control_Applicative.applicativeArray},function(){return Control_Plus.plusArray});exports.Alternative=Alternative,exports.alternativeArray=alternativeArray}(PS["Control.Alternative"]=PS["Control.Alternative"]||{}),function(exports){"use strict";PS["Control.Extend"],PS["Control.Category"],PS["Data.Functor"],PS["Data.Semigroup"];var extend=function(dict){return dict.extend};exports.Extend=function(Functor0,extend){this.Functor0=Functor0,this.extend=extend},exports.extend=extend,exports.extendFlipped=function(dictExtend){return function(w){return function(f){return extend(dictExtend)(f)(w)}}}}(PS["Control.Extend"]=PS["Control.Extend"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"];var Control_Applicative=PS["Control.Applicative"],Control_Plus=(PS["Control.Apply"],PS["Control.Bind"],PS["Control.Monad"],PS["Control.Plus"]),Data_Unit=(PS["Data.Functor"],PS["Data.Unit"]);exports.MonadZero=function(Alternative1,Monad0){this.Alternative1=Alternative1,this.Monad0=Monad0},exports.guard=function(dictMonadZero){return function(v){if(v)return Control_Applicative.pure(dictMonadZero.Alternative1().Applicative0())(Data_Unit.unit);if(!v)return Control_Plus.empty(dictMonadZero.Alternative1().Plus1());throw new Error("Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: "+[v.constructor.name])}}}(PS["Control.MonadZero"]=PS["Control.MonadZero"]||{}),function(exports){"use strict";exports.topInt=2147483647,exports.bottomInt=-2147483648}(PS["Data.Bounded"]=PS["Data.Bounded"]||{}),function(exports){"use strict";var $foreign=PS["Data.Bounded"],Data_Ord=PS["Data.Ord"],Bounded=(PS["Data.Ordering"],PS["Data.Unit"],function(Ord0,bottom,top){this.Ord0=Ord0,this.bottom=bottom,this.top=top}),boundedInt=new Bounded(function(){return Data_Ord.ordInt},$foreign.bottomInt,$foreign.topInt);exports.Bounded=Bounded,exports.bottom=function(dict){return dict.bottom},exports.top=function(dict){return dict.top},exports.boundedInt=boundedInt}(PS["Data.Bounded"]=PS["Data.Bounded"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad=(PS["Control.Extend"],PS["Control.Monad"]),Control_MonadZero=PS["Control.MonadZero"],Control_Plus=PS["Control.Plus"],Data_Eq=(PS["Data.Bounded"],PS["Data.Eq"]),Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Semigroup=(PS["Data.Functor.Invariant"],PS["Data.Monoid"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"]),Data_Unit=(PS["Data.Show"],PS["Data.Unit"]),Nothing=(PS.Prelude,function(){function Nothing(){}return Nothing.value=new Nothing,Nothing}()),Just=function(){function Just(value0){this.value0=value0}return Just.create=function(value0){return new Just(value0)},Just}(),maybe$prime=function(v){return function(v1){return function(v2){if(v2 instanceof Nothing)return v(Data_Unit.unit);if(v2 instanceof Just)return v1(v2.value0);throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 62: "+[v.constructor.name,v1.constructor.name,v2.constructor.name])}}},maybe=function(v){return function(v1){return function(v2){if(v2 instanceof Nothing)return v;if(v2 instanceof Just)return v1(v2.value0);throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: "+[v.constructor.name,v1.constructor.name,v2.constructor.name])}}},isNothing=maybe(!0)(Data_Function.const(!1)),isJust=maybe(!1)(Data_Function.const(!0)),functorMaybe=new Data_Functor.Functor(function(v){return function(v1){return v1 instanceof Just?new Just(v(v1.value0)):Nothing.value}}),applyMaybe=new Control_Apply.Apply(function(){return functorMaybe},function(v){return function(v1){if(v instanceof Just)return Data_Functor.map(functorMaybe)(v.value0)(v1);if(v instanceof Nothing)return Nothing.value;throw new Error("Failed pattern match at Data.Maybe line 68, column 1 - line 68, column 35: "+[v.constructor.name,v1.constructor.name])}}),bindMaybe=new Control_Bind.Bind(function(){return applyMaybe},function(v){return function(v1){if(v instanceof Just)return v1(v.value0);if(v instanceof Nothing)return Nothing.value;throw new Error("Failed pattern match at Data.Maybe line 127, column 1 - line 127, column 33: "+[v.constructor.name,v1.constructor.name])}}),applicativeMaybe=new Control_Applicative.Applicative(function(){return applyMaybe},Just.create),monadMaybe=new Control_Monad.Monad(function(){return applicativeMaybe},function(){return bindMaybe}),altMaybe=new Control_Alt.Alt(function(){return functorMaybe},function(v){return function(v1){return v instanceof Nothing?v1:v}}),plusMaybe=new Control_Plus.Plus(function(){return altMaybe},Nothing.value),alternativeMaybe=new Control_Alternative.Alternative(function(){return applicativeMaybe},function(){return plusMaybe}),monadZeroMaybe=new Control_MonadZero.MonadZero(function(){return alternativeMaybe},function(){return monadMaybe});exports.Nothing=Nothing,exports.Just=Just,exports.maybe=maybe,exports["maybe'"]=maybe$prime,exports.fromMaybe=function(a){return maybe(a)(Control_Category.id(Control_Category.categoryFn))},exports["fromMaybe'"]=function(a){return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn))},exports.isJust=isJust,exports.isNothing=isNothing,exports.fromJust=function(dictPartial){return function(v){return function(){if(v instanceof Just)return v.value0;throw new Error("Failed pattern match at Data.Maybe line 270, column 1 - line 270, column 46: "+[v.constructor.name])}()}},exports.functorMaybe=functorMaybe,exports.applyMaybe=applyMaybe,exports.applicativeMaybe=applicativeMaybe,exports.altMaybe=altMaybe,exports.plusMaybe=plusMaybe,exports.alternativeMaybe=alternativeMaybe,exports.bindMaybe=bindMaybe,exports.monadMaybe=monadMaybe,exports.monadZeroMaybe=monadZeroMaybe,exports.semigroupMaybe=function(dictSemigroup){return new Data_Semigroup.Semigroup(function(v){return function(v1){if(v instanceof Nothing)return v1;if(v1 instanceof Nothing)return v;if(v instanceof Just&&v1 instanceof Just)return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));throw new Error("Failed pattern match at Data.Maybe line 176, column 1 - line 176, column 62: "+[v.constructor.name,v1.constructor.name])}})},exports.eqMaybe=function(dictEq){return new Data_Eq.Eq(function(x){return function(y){return x instanceof Nothing&&y instanceof Nothing||x instanceof Just&&y instanceof Just&&Data_Eq.eq(dictEq)(x.value0)(y.value0)}})}}(PS["Data.Maybe"]=PS["Data.Maybe"]||{}),function(exports){"use strict";var $foreign=PS["Browser.WebStorage"],Control_Category=PS["Control.Category"],Data_Maybe=(PS["Control.Monad.Eff"],PS["Control.Semigroupoid"],PS["Data.Function.Uncurried"],PS["Data.Maybe"]),StorageKey=(PS.Prelude,function(x){return x}),Storage=function(clear,getItem,key,length,removeItem,setItem){this.clear=clear,this.getItem=getItem,this.key=key,this.length=length,this.removeItem=removeItem,this.setItem=setItem},null2Maybe=function(f){return function(n){return $foreign.null2MaybeImpl(function($12){return Data_Maybe.Just.create(f($12))},Data_Maybe.Nothing.value,n)}},storageLocalStorage=new Storage(function(v){return $foreign.unsafeClear($foreign.localStorage)},function(v){return function(k){return $foreign.unsafeGetItem(null2Maybe(Control_Category.id(Control_Category.categoryFn)),$foreign.localStorage,k)}},function(v){return function(n){return $foreign.unsafeKey(null2Maybe(StorageKey),$foreign.localStorage,n)}},function(v){return $foreign.unsafeLength($foreign.localStorage)},function(v){return function(k){return $foreign.unsafeRemoveItem($foreign.localStorage,k)}},function(v){return function(k){return function(v1){return $foreign.unsafeSetItem($foreign.localStorage,k,v1)}}}),storageSessionStorage=new Storage(function(v){return $foreign.unsafeClear($foreign.sessionStorage)},function(v){return function(k){return $foreign.unsafeGetItem(null2Maybe(Control_Category.id(Control_Category.categoryFn)),$foreign.sessionStorage,k)}},function(v){return function(n){return $foreign.unsafeKey(null2Maybe(StorageKey),$foreign.sessionStorage,n)}},function(v){return $foreign.unsafeLength($foreign.sessionStorage)},function(v){return function(k){return $foreign.unsafeRemoveItem($foreign.sessionStorage,k)}},function(v){return function(k){return function(v1){return $foreign.unsafeSetItem($foreign.sessionStorage,k,v1)}}});exports.Storage=Storage,exports.StorageKey=StorageKey,exports.clear=function(dict){return dict.clear},exports.getItem=function(dict){return dict.getItem},exports.key=function(dict){return dict.key},exports.length=function(dict){return dict.length},exports.removeItem=function(dict){return dict.removeItem},exports.setItem=function(dict){return dict.setItem},exports.storageLocalStorage=storageLocalStorage,exports.storageSessionStorage=storageSessionStorage,exports.localStorage=$foreign.localStorage,exports.sessionStorage=$foreign.sessionStorage}(PS["Browser.WebStorage"]=PS["Browser.WebStorage"]||{}),function(exports){"use strict";exports.foldrArray=function(f){return function(init){return function(xs){for(var acc=init,i=xs.length-1;0<=i;i--)acc=f(xs[i])(acc);return acc}}},exports.foldlArray=function(f){return function(init){return function(xs){for(var acc=init,len=xs.length,i=0;i<len;i++)acc=f(acc)(xs[i]);return acc}}}}(PS["Data.Foldable"]=PS["Data.Foldable"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"],PS["Data.Function"];var Data_Functor=PS["Data.Functor"],wrap=(PS.Prelude,function(dict){return dict.wrap}),unwrap=function(dict){return dict.unwrap};exports.unwrap=unwrap,exports.wrap=wrap,exports.Newtype=function(unwrap,wrap){this.unwrap=unwrap,this.wrap=wrap},exports.un=function(dictNewtype){return function(v){return unwrap(dictNewtype)}},exports.alaF=function(dictFunctor){return function(dictFunctor1){return function(dictNewtype){return function(dictNewtype1){return function(v){return function(f){return function($64){return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)))}}}}}}},exports.over=function(dictNewtype){return function(dictNewtype1){return function(v){return function(f){return function($62){return wrap(dictNewtype1)(f(unwrap(dictNewtype)($62)))}}}}},exports.under=function(dictNewtype){return function(dictNewtype1){return function(v){return function(f){return function($55){return unwrap(dictNewtype1)(f(wrap(dictNewtype)($55)))}}}}},exports.underF=function(dictFunctor){return function(dictFunctor1){return function(dictNewtype){return function(dictNewtype1){return function(v){return function(f){return function($52){return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($52)))}}}}}}}}(PS["Data.Newtype"]=PS["Data.Newtype"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Extend"],PS["Control.Monad"],PS["Data.Bounded"],PS["Data.Eq"],PS["Data.Functor"],PS["Data.Functor.Invariant"];var Data_Maybe=PS["Data.Maybe"],Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Semigroup=(PS["Data.Ord"],PS["Data.Semigroup"]),First=(PS["Data.Show"],PS.Prelude,function(x){return x}),semigroupFirst=new Data_Semigroup.Semigroup(function(v){return function(v1){return v instanceof Data_Maybe.Just?v:v1}}),newtypeFirst=new Data_Newtype.Newtype(function(n){return n},First),monoidFirst=new Data_Monoid.Monoid(function(){return semigroupFirst},Data_Maybe.Nothing.value);exports.First=First,exports.newtypeFirst=newtypeFirst,exports.semigroupFirst=semigroupFirst,exports.monoidFirst=monoidFirst}(PS["Data.Maybe.First"]=PS["Data.Maybe.First"]||{}),function(exports){"use strict";PS["Control.Extend"],PS["Data.Functor"];exports.Comonad=function(Extend0,extract){this.Extend0=Extend0,this.extract=extract},exports.extract=function(dict){return dict.extract}}(PS["Control.Comonad"]=PS["Control.Comonad"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Comonad"],PS["Control.Extend"],PS["Control.Monad"],PS["Data.Bounded"],PS["Data.Eq"],PS["Data.Functor"],PS["Data.Functor.Invariant"];var Data_HeytingAlgebra=PS["Data.HeytingAlgebra"],Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Semigroup=(PS["Data.Ord"],PS["Data.Semigroup"]),Conj=(PS["Data.Semiring"],PS["Data.Show"],PS.Prelude,function(x){return x}),semigroupConj=function(dictHeytingAlgebra){return new Data_Semigroup.Semigroup(function(v){return function(v1){return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1)}})},newtypeConj=new Data_Newtype.Newtype(function(n){return n},Conj);exports.Conj=Conj,exports.newtypeConj=newtypeConj,exports.semigroupConj=semigroupConj,exports.monoidConj=function(dictHeytingAlgebra){return new Data_Monoid.Monoid(function(){return semigroupConj(dictHeytingAlgebra)},Data_HeytingAlgebra.tt(dictHeytingAlgebra))}}(PS["Data.Monoid.Conj"]=PS["Data.Monoid.Conj"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Comonad"],PS["Control.Extend"],PS["Control.Monad"],PS["Data.Bounded"],PS["Data.Eq"],PS["Data.Functor"],PS["Data.Functor.Invariant"];var Data_HeytingAlgebra=PS["Data.HeytingAlgebra"],Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Semigroup=(PS["Data.Ord"],PS["Data.Semigroup"]),Disj=(PS["Data.Semiring"],PS["Data.Show"],PS.Prelude,function(x){return x}),semigroupDisj=function(dictHeytingAlgebra){return new Data_Semigroup.Semigroup(function(v){return function(v1){return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1)}})},newtypeDisj=new Data_Newtype.Newtype(function(n){return n},Disj);exports.Disj=Disj,exports.newtypeDisj=newtypeDisj,exports.semigroupDisj=semigroupDisj,exports.monoidDisj=function(dictHeytingAlgebra){return new Data_Monoid.Monoid(function(){return semigroupDisj(dictHeytingAlgebra)},Data_HeytingAlgebra.ff(dictHeytingAlgebra))}}(PS["Data.Monoid.Disj"]=PS["Data.Monoid.Disj"]||{}),function(exports){"use strict";var Control_Category=PS["Control.Category"],Data_Monoid=(PS["Control.Semigroupoid"],PS["Data.Functor.Invariant"],PS["Data.Monoid"]),Data_Newtype=PS["Data.Newtype"],Data_Semigroup=PS["Data.Semigroup"],Endo=(PS.Prelude,function(x){return x}),semigroupEndo=new Data_Semigroup.Semigroup(function(v){return function(v1){return function($11){return v(v1($11))}}}),newtypeEndo=new Data_Newtype.Newtype(function(n){return n},Endo),monoidEndo=new Data_Monoid.Monoid(function(){return semigroupEndo},Control_Category.id(Control_Category.categoryFn));exports.Endo=Endo,exports.newtypeEndo=newtypeEndo,exports.semigroupEndo=semigroupEndo,exports.monoidEndo=monoidEndo}(PS["Data.Monoid.Endo"]=PS["Data.Monoid.Endo"]||{}),function(exports){"use strict";var $foreign=PS["Data.Foldable"],Control_Applicative=(PS["Control.Alt"],PS["Control.Applicative"]),Control_Apply=PS["Control.Apply"],Control_Category=(PS["Control.Bind"],PS["Control.Category"]),Data_Eq=(PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Eq"]),Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_HeytingAlgebra=PS["Data.HeytingAlgebra"],Data_Maybe=PS["Data.Maybe"],Data_Monoid=(PS["Data.Maybe.First"],PS["Data.Maybe.Last"],PS["Data.Monoid"]),Data_Monoid_Conj=(PS["Data.Monoid.Additive"],PS["Data.Monoid.Conj"]),Data_Monoid_Disj=PS["Data.Monoid.Disj"],Data_Newtype=(PS["Data.Monoid.Dual"],PS["Data.Monoid.Endo"],PS["Data.Monoid.Multiplicative"],PS["Data.Newtype"]),Data_Semigroup=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"]),Data_Unit=(PS["Data.Semiring"],PS["Data.Unit"]),Foldable=(PS.Prelude,function(foldMap,foldl,foldr){this.foldMap=foldMap,this.foldl=foldl,this.foldr=foldr}),foldr=function(dict){return dict.foldr},traverse_=function(dictApplicative){return function(dictFoldable){return function(f){return foldr(dictFoldable)(function($195){return Control_Apply.applySecond(dictApplicative.Apply0())(f($195))})(Control_Applicative.pure(dictApplicative)(Data_Unit.unit))}}},foldl=function(dict){return dict.foldl},foldableMaybe=new Foldable(function(dictMonoid){return function(f){return function(v){if(v instanceof Data_Maybe.Nothing)return Data_Monoid.mempty(dictMonoid);if(v instanceof Data_Maybe.Just)return f(v.value0);throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: "+[f.constructor.name,v.constructor.name])}}},function(v){return function(z){return function(v1){if(v1 instanceof Data_Maybe.Nothing)return z;if(v1 instanceof Data_Maybe.Just)return v(z)(v1.value0);throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: "+[v.constructor.name,z.constructor.name,v1.constructor.name])}}},function(v){return function(z){return function(v1){if(v1 instanceof Data_Maybe.Nothing)return z;if(v1 instanceof Data_Maybe.Just)return v(v1.value0)(z);throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: "+[v.constructor.name,z.constructor.name,v1.constructor.name])}}}),foldMapDefaultR=function(dictFoldable){return function(dictMonoid){return function(f){return foldr(dictFoldable)(function(x){return function(acc){return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc)}})(Data_Monoid.mempty(dictMonoid))}}},foldableArray=new Foldable(function(dictMonoid){return foldMapDefaultR(foldableArray)(dictMonoid)},$foreign.foldlArray,$foreign.foldrArray),foldMap=function(dict){return dict.foldMap},any=function(dictFoldable){return function(dictHeytingAlgebra){return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)))}},elem=function(dictFoldable){return function(dictEq){return function($199){return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199))}}};exports.Foldable=Foldable,exports.foldr=foldr,exports.foldl=foldl,exports.foldMap=foldMap,exports.foldMapDefaultR=foldMapDefaultR,exports.fold=function(dictFoldable){return function(dictMonoid){return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))}},exports.traverse_=traverse_,exports.for_=function(dictApplicative){return function(dictFoldable){return Data_Function.flip(traverse_(dictApplicative)(dictFoldable))}},exports.sequence_=function(dictApplicative){return function(dictFoldable){return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn))}},exports.intercalate=function(dictFoldable){return function(dictMonoid){return function(sep){return function(xs){return foldl(dictFoldable)(function(v){return function(x){return v.init?{init:!1,acc:x}:{init:!1,acc:Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))}}})({init:!0,acc:Data_Monoid.mempty(dictMonoid)})(xs).acc}}}},exports.all=function(dictFoldable){return function(dictHeytingAlgebra){return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)))}},exports.any=any,exports.elem=elem,exports.notElem=function(dictFoldable){return function(dictEq){return function(x){return function($200){return!elem(dictFoldable)(dictEq)(x)($200)}}}},exports.find=function(dictFoldable){return function(p){return foldl(dictFoldable)(function(v){return function(v1){return v instanceof Data_Maybe.Nothing&&p(v1)?new Data_Maybe.Just(v1):v}})(Data_Maybe.Nothing.value)}},exports.null=function(dictFoldable){return foldr(dictFoldable)(function(v){return function(v1){return!1}})(!0)},exports.foldableArray=foldableArray,exports.foldableMaybe=foldableMaybe}(PS["Data.Foldable"]=PS["Data.Foldable"]||{}),function(exports){"use strict";(PS["Data.Traversable"]=PS["Data.Traversable"]||{}).traverseArrayImpl=function(){function Cont(fn){this.fn=fn}var emptyList={},ConsCell=function(head,tail){this.head=head,this.tail=tail};function consList(x){return function(xs){return new ConsCell(x,xs)}}function listToArray(list){for(var arr=[],xs=list;xs!==emptyList;)arr.push(xs.head),xs=xs.tail;return arr}return function(apply){return function(map){return function(pure){return function(f){var go=function(acc,currentLen,xs){if(0===currentLen)return acc;var last=xs[currentLen-1];return new Cont(function(){return go((x=last,ys=acc,apply(map(consList)(f(x)))(ys)),currentLen-1,xs);var x,ys})};return function(array){for(var result=go(pure(emptyList),array.length,array);result instanceof Cont;)result=result.fn();return map(listToArray)(result)}}}}}}()}(),function(exports){"use strict";var $foreign=PS["Data.Traversable"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Category=PS["Control.Category"],Data_Foldable=PS["Data.Foldable"],Data_Functor=PS["Data.Functor"],Traversable=(PS["Data.Maybe"],PS["Data.Maybe.First"],PS["Data.Maybe.Last"],PS["Data.Monoid.Additive"],PS["Data.Monoid.Conj"],PS["Data.Monoid.Disj"],PS["Data.Monoid.Dual"],PS["Data.Monoid.Multiplicative"],PS["Data.Traversable.Accum"],PS["Data.Traversable.Accum.Internal"],PS.Prelude,function(Foldable1,Functor0,sequence,traverse){this.Foldable1=Foldable1,this.Functor0=Functor0,this.sequence=sequence,this.traverse=traverse}),traverse=function(dict){return dict.traverse},sequenceDefault=function(dictTraversable){return function(dictApplicative){return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))}},traversableArray=new Traversable(function(){return Data_Foldable.foldableArray},function(){return Data_Functor.functorArray},function(dictApplicative){return sequenceDefault(traversableArray)(dictApplicative)},function(dictApplicative){return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative))});exports.Traversable=Traversable,exports.traverse=traverse,exports.sequence=function(dict){return dict.sequence},exports.sequenceDefault=sequenceDefault,exports.for=function(dictApplicative){return function(dictTraversable){return function(x){return function(f){return traverse(dictTraversable)(dictApplicative)(f)(x)}}}},exports.traversableArray=traversableArray}(PS["Data.Traversable"]=PS["Data.Traversable"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Data_Functor=(PS["Control.Bind"],PS["Control.Semigroupoid"],PS["Data.BooleanAlgebra"],PS["Data.Bounded"],PS["Data.CommutativeRing"],PS["Data.Eq"],PS["Data.EuclideanRing"],PS["Data.Field"],PS["Data.Foldable"],PS["Data.Functor"]),Data_Monoid=(PS["Data.Functor.Contravariant"],PS["Data.Functor.Invariant"],PS["Data.HeytingAlgebra"],PS["Data.Monoid"]),Data_Newtype=PS["Data.Newtype"],Data_Semigroup=(PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semigroup"]),Const=(PS["Data.Semiring"],PS["Data.Show"],PS["Data.Traversable"],PS.Prelude,function(x){return x}),newtypeConst=new Data_Newtype.Newtype(function(n){return n},Const),functorConst=new Data_Functor.Functor(function(v){return function(v1){return v1}}),applyConst=function(dictSemigroup){return new Control_Apply.Apply(function(){return functorConst},function(v){return function(v1){return Data_Semigroup.append(dictSemigroup)(v)(v1)}})};exports.Const=Const,exports.newtypeConst=newtypeConst,exports.functorConst=functorConst,exports.applyConst=applyConst,exports.applicativeConst=function(dictMonoid){return new Control_Applicative.Applicative(function(){return applyConst(dictMonoid.Semigroup0())},function(v){return Data_Monoid.mempty(dictMonoid)})}}(PS["Data.Const"]=PS["Data.Const"]||{}),function(exports){"use strict";var Control_Category=PS["Control.Category"],bimap=function(dict){return dict.bimap};exports.bimap=bimap,exports.Bifunctor=function(bimap){this.bimap=bimap},exports.lmap=function(dictBifunctor){return function(f){return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn))}},exports.rmap=function(dictBifunctor){return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn))}}(PS["Data.Bifunctor"]=PS["Data.Bifunctor"]||{}),function(exports){"use strict";PS["Control.Alt"];var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad=(PS["Control.Extend"],PS["Control.Monad"]),Data_Bifunctor=(PS["Data.Bifoldable"],PS["Data.Bifunctor"]),Data_Eq=(PS["Data.Bitraversable"],PS["Data.Bounded"],PS["Data.Eq"]),Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Maybe=(PS["Data.Functor.Invariant"],PS["Data.Maybe"]),Data_Monoid=PS["Data.Monoid"],Data_Ord=PS["Data.Ord"],Data_Ordering=PS["Data.Ordering"],Left=(PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.Traversable"],PS.Prelude,function(){function Left(value0){this.value0=value0}return Left.create=function(value0){return new Left(value0)},Left}()),Right=function(){function Right(value0){this.value0=value0}return Right.create=function(value0){return new Right(value0)},Right}(),functorEither=new Data_Functor.Functor(function(v){return function(v1){if(v1 instanceof Left)return new Left(v1.value0);if(v1 instanceof Right)return new Right(v(v1.value0));throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: "+[v.constructor.name,v1.constructor.name])}}),foldableEither=new Data_Foldable.Foldable(function(dictMonoid){return function(f){return function(v){if(v instanceof Left)return Data_Monoid.mempty(dictMonoid);if(v instanceof Right)return f(v.value0);throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: "+[f.constructor.name,v.constructor.name])}}},function(v){return function(z){return function(v1){if(v1 instanceof Left)return z;if(v1 instanceof Right)return v(z)(v1.value0);throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: "+[v.constructor.name,z.constructor.name,v1.constructor.name])}}},function(v){return function(z){return function(v1){if(v1 instanceof Left)return z;if(v1 instanceof Right)return v(v1.value0)(z);throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: "+[v.constructor.name,z.constructor.name,v1.constructor.name])}}}),eqEither=function(dictEq){return function(dictEq1){return new Data_Eq.Eq(function(x){return function(y){return x instanceof Left&&y instanceof Left?Data_Eq.eq(dictEq)(x.value0)(y.value0):x instanceof Right&&y instanceof Right&&Data_Eq.eq(dictEq1)(x.value0)(y.value0)}})}},either=function(v){return function(v1){return function(v2){if(v2 instanceof Left)return v(v2.value0);if(v2 instanceof Right)return v1(v2.value0);throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: "+[v.constructor.name,v1.constructor.name,v2.constructor.name])}}},hush=either(Data_Function.const(Data_Maybe.Nothing.value))(Data_Maybe.Just.create),bifunctorEither=new Data_Bifunctor.Bifunctor(function(v){return function(v1){return function(v2){if(v2 instanceof Left)return new Left(v(v2.value0));if(v2 instanceof Right)return new Right(v1(v2.value0));throw new Error("Failed pattern match at Data.Either line 43, column 1 - line 43, column 45: "+[v.constructor.name,v1.constructor.name,v2.constructor.name])}}}),applyEither=new Control_Apply.Apply(function(){return functorEither},function(v){return function(v1){if(v instanceof Left)return new Left(v.value0);if(v instanceof Right)return Data_Functor.map(functorEither)(v.value0)(v1);throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: "+[v.constructor.name,v1.constructor.name])}}),bindEither=new Control_Bind.Bind(function(){return applyEither},either(function(e){return function(v){return new Left(e)}})(function(a){return function(f){return f(a)}})),applicativeEither=new Control_Applicative.Applicative(function(){return applyEither},Right.create),monadEither=new Control_Monad.Monad(function(){return applicativeEither},function(){return bindEither});exports.Left=Left,exports.Right=Right,exports.either=either,exports.fromRight=function(dictPartial){return function(v){return function(){if(v instanceof Right)return v.value0;throw new Error("Failed pattern match at Data.Either line 252, column 1 - line 252, column 52: "+[v.constructor.name])}()}},exports.note=function(a){return Data_Maybe.maybe(new Left(a))(Right.create)},exports.hush=hush,exports.functorEither=functorEither,exports.bifunctorEither=bifunctorEither,exports.applyEither=applyEither,exports.applicativeEither=applicativeEither,exports.bindEither=bindEither,exports.monadEither=monadEither,exports.eqEither=eqEither,exports.ordEither=function(dictOrd){return function(dictOrd1){return new Data_Ord.Ord(function(){return eqEither(dictOrd.Eq0())(dictOrd1.Eq0())},function(x){return function(y){if(x instanceof Left&&y instanceof Left)return Data_Ord.compare(dictOrd)(x.value0)(y.value0);if(x instanceof Left)return Data_Ordering.LT.value;if(y instanceof Left)return Data_Ordering.GT.value;if(x instanceof Right&&y instanceof Right)return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);throw new Error("Failed pattern match at Data.Either line 176, column 8 - line 176, column 64: "+[x.constructor.name,y.constructor.name])}})}},exports.foldableEither=foldableEither}(PS["Data.Either"]=PS["Data.Either"]||{}),function(exports){"use strict";PS["Data.Unit"];var defer=function(dict){return dict.defer},fix=function(dictLazy){return function(f){return defer(dictLazy)(function(v){return f(fix(dictLazy)(f))})}};exports.defer=defer,exports.Lazy=function(defer){this.defer=defer},exports.fix=fix}(PS["Control.Lazy"]=PS["Control.Lazy"]||{}),function(exports){"use strict";(PS["Control.Monad.Eff.Unsafe"]=PS["Control.Monad.Eff.Unsafe"]||{}).unsafeCoerceEff=function(f){return f}}(),function(exports){"use strict";var $foreign=PS["Control.Monad.Eff.Unsafe"],Control_Monad_Eff=PS["Control.Monad.Eff"];PS["Control.Semigroupoid"];exports.unsafePerformEff=function($0){return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0))},exports.unsafeCoerceEff=$foreign.unsafeCoerceEff}(PS["Control.Monad.Eff.Unsafe"]=PS["Control.Monad.Eff.Unsafe"]||{}),function(exports){"use strict";exports.newSTRef=function(val){return function(){return{value:val}}},exports.readSTRef=function(ref){return function(){return ref.value}}}(PS["Control.Monad.ST"]=PS["Control.Monad.ST"]||{}),function(exports){"use strict";var $foreign=PS["Control.Monad.ST"];PS["Control.Monad.Eff"];exports.newSTRef=$foreign.newSTRef,exports.readSTRef=$foreign.readSTRef}(PS["Control.Monad.ST"]=PS["Control.Monad.ST"]||{}),function(exports){"use strict";PS["Control.Alt"];var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad=(PS["Control.Comonad"],PS["Control.Extend"],PS["Control.Lazy"],PS["Control.Monad"]),Data_Functor=(PS["Data.BooleanAlgebra"],PS["Data.Bounded"],PS["Data.CommutativeRing"],PS["Data.Eq"],PS["Data.EuclideanRing"],PS["Data.Field"],PS["Data.Foldable"],PS["Data.Functor"]),Data_Newtype=(PS["Data.Functor.Invariant"],PS["Data.HeytingAlgebra"],PS["Data.Monoid"],PS["Data.Newtype"]),Identity=(PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.Traversable"],PS.Prelude,function(x){return x}),newtypeIdentity=new Data_Newtype.Newtype(function(n){return n},Identity),functorIdentity=new Data_Functor.Functor(function(f){return function(v){return f(v)}}),applyIdentity=new Control_Apply.Apply(function(){return functorIdentity},function(v){return function(v1){return v(v1)}}),bindIdentity=new Control_Bind.Bind(function(){return applyIdentity},function(v){return function(f){return f(v)}}),applicativeIdentity=new Control_Applicative.Applicative(function(){return applyIdentity},Identity),monadIdentity=new Control_Monad.Monad(function(){return applicativeIdentity},function(){return bindIdentity});exports.Identity=Identity,exports.newtypeIdentity=newtypeIdentity,exports.functorIdentity=functorIdentity,exports.applyIdentity=applyIdentity,exports.applicativeIdentity=applicativeIdentity,exports.bindIdentity=bindIdentity,exports.monadIdentity=monadIdentity}(PS["Data.Identity"]=PS["Data.Identity"]||{}),function(exports){"use strict";(PS["Partial.Unsafe"]=PS["Partial.Unsafe"]||{}).unsafePartial=function(f){return f()}}(),function(exports){"use strict";(PS["Partial"]=PS["Partial"]||{}).crashWith=function(){return function(msg){throw new Error(msg)}}}(),function(exports){"use strict";var $foreign=PS.Partial;exports.crashWith=$foreign.crashWith}(PS.Partial=PS.Partial||{}),function(exports){"use strict";var $foreign=PS["Partial.Unsafe"],Partial=PS.Partial;exports.unsafeCrashWith=function(msg){return $foreign.unsafePartial(function(dictPartial){return Partial.crashWith(dictPartial)(msg)})}}(PS["Partial.Unsafe"]=PS["Partial.Unsafe"]||{}),function(exports){"use strict";PS["Control.Applicative"];var Control_Bind=PS["Control.Bind"],Control_Monad_Eff=(PS["Control.Monad"],PS["Control.Monad.Eff"]),Control_Monad_Eff_Unsafe=PS["Control.Monad.Eff.Unsafe"],Control_Monad_ST=PS["Control.Monad.ST"],Data_Bifunctor=(PS["Control.Semigroupoid"],PS["Data.Bifunctor"]),Data_Either=PS["Data.Either"],Data_Functor=PS["Data.Functor"],Loop=(PS["Data.Identity"],PS["Data.Maybe"],PS["Data.Unit"],PS["Partial.Unsafe"],PS.Prelude,function(){function Loop(value0){this.value0=value0}return Loop.create=function(value0){return new Loop(value0)},Loop}()),Done=function(){function Done(value0){this.value0=value0}return Done.create=function(value0){return new Done(value0)},Done}(),MonadRec=function(Monad0,tailRecM){this.Monad0=Monad0,this.tailRecM=tailRecM},tailRec=function(f){return function($53){return function($copy_v){var $tco_result,$tco_done=!1;function $tco_loop(v){if(!(v instanceof Loop)){if(v instanceof Done)return $tco_done=!0,v.value0;throw new Error("Failed pattern match at Control.Monad.Rec.Class line 96, column 3 - line 96, column 25: "+[v.constructor.name])}$copy_v=f(v.value0)}for(;!$tco_done;)$tco_result=$tco_loop($copy_v);return $tco_result}(f($53))}},monadRecEither=new MonadRec(function(){return Data_Either.monadEither},function(f){return function(a0){return tailRec(function(v){if(v instanceof Data_Either.Left)return new Done(new Data_Either.Left(v.value0));if(v instanceof Data_Either.Right&&v.value0 instanceof Loop)return new Loop(f(v.value0.value0));if(v instanceof Data_Either.Right&&v.value0 instanceof Done)return new Done(new Data_Either.Right(v.value0.value0));throw new Error("Failed pattern match at Control.Monad.Rec.Class line 112, column 7 - line 112, column 33: "+[v.constructor.name])})(f(a0))}}),monadRecEff=new MonadRec(function(){return Control_Monad_Eff.monadEff},function(f){return function(a){var fromDone=function(v){return function(){if(v instanceof Done)return v.value0;throw new Error("Failed pattern match at Control.Monad.Rec.Class line 141, column 28 - line 141, column 42: "+[v.constructor.name])}()},f$prime=function($52){return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($52))};return function(){var v=Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Monad_ST.newSTRef)(f$prime(a))();return function(){for(;!function(){var v1=v.value;if(v1 instanceof Loop){var v2=f$prime(v1.value0)();return v.value=v2,!1}if(v1 instanceof Done)return!0;throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 5 - line 135, column 26: "+[v1.constructor.name])}(););}(),Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v))()}}}),bifunctorStep=new Data_Bifunctor.Bifunctor(function(v){return function(v1){return function(v2){if(v2 instanceof Loop)return new Loop(v(v2.value0));if(v2 instanceof Done)return new Done(v1(v2.value0));throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 1 - line 32, column 41: "+[v.constructor.name,v1.constructor.name,v2.constructor.name])}}});exports.Loop=Loop,exports.Done=Done,exports.MonadRec=MonadRec,exports.tailRec=tailRec,exports.tailRecM=function(dict){return dict.tailRecM},exports.bifunctorStep=bifunctorStep,exports.monadRecEff=monadRecEff,exports.monadRecEither=monadRecEither}(PS["Control.Monad.Rec.Class"]=PS["Control.Monad.Rec.Class"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"],PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Category"];var Control_Plus=PS["Control.Plus"],Data_Functor=(PS["Control.Semigroupoid"],PS["Data.Eq"],PS["Data.Foldable"],PS["Data.FoldableWithIndex"],PS["Data.Functor"]),NonEmpty=(PS["Data.FunctorWithIndex"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"],PS["Data.Semigroup.Foldable"],PS["Data.Show"],PS["Data.Traversable"],PS["Data.TraversableWithIndex"],PS.Prelude,function(){function NonEmpty(value0,value1){this.value0=value0,this.value1=value1}return NonEmpty.create=function(value0){return function(value1){return new NonEmpty(value0,value1)}},NonEmpty}());exports.NonEmpty=NonEmpty,exports.singleton=function(dictPlus){return function(a){return new NonEmpty(a,Control_Plus.empty(dictPlus))}},exports.functorNonEmpty=function(dictFunctor){return new Data_Functor.Functor(function(f){return function(v){return new NonEmpty(f(v.value0),Data_Functor.map(dictFunctor)(f)(v.value1))}})}}(PS["Data.NonEmpty"]=PS["Data.NonEmpty"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Data_Bifunctor=(PS["Control.Biapplicative"],PS["Control.Biapply"],PS["Control.Bind"],PS["Control.Comonad"],PS["Control.Extend"],PS["Control.Lazy"],PS["Control.Monad"],PS["Control.Semigroupoid"],PS["Data.Bifoldable"],PS["Data.Bifunctor"]),Data_Functor=(PS["Data.Bitraversable"],PS["Data.BooleanAlgebra"],PS["Data.Bounded"],PS["Data.CommutativeRing"],PS["Data.Distributive"],PS["Data.Eq"],PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"]),Data_Monoid=(PS["Data.Functor.Invariant"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"],PS["Data.Maybe.First"],PS["Data.Monoid"]),Data_Semigroup=(PS["Data.Newtype"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"]),Tuple=(PS["Data.Semiring"],PS["Data.Show"],PS["Data.Traversable"],PS["Data.Unit"],PS.Prelude,PS["Type.Equality"],function(){function Tuple(value0,value1){this.value0=value0,this.value1=value1}return Tuple.create=function(value0){return function(value1){return new Tuple(value0,value1)}},Tuple}()),functorTuple=new Data_Functor.Functor(function(f){return function(v){return new Tuple(v.value0,f(v.value1))}}),bifunctorTuple=new Data_Bifunctor.Bifunctor(function(f){return function(g){return function(v){return new Tuple(f(v.value0),g(v.value1))}}}),applyTuple=function(dictSemigroup){return new Control_Apply.Apply(function(){return functorTuple},function(v){return function(v1){return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0),v.value1(v1.value1))}})};exports.Tuple=Tuple,exports.fst=function(v){return v.value0},exports.snd=function(v){return v.value1},exports.uncurry=function(f){return function(v){return f(v.value0)(v.value1)}},exports.functorTuple=functorTuple,exports.bifunctorTuple=bifunctorTuple,exports.applyTuple=applyTuple,exports.applicativeTuple=function(dictMonoid){return new Control_Applicative.Applicative(function(){return applyTuple(dictMonoid.Semigroup0())},Tuple.create(Data_Monoid.mempty(dictMonoid)))}}(PS["Data.Tuple"]=PS["Data.Tuple"]||{}),function(exports){"use strict";(PS["Data.Unfoldable"]=PS["Data.Unfoldable"]||{}).unfoldrArrayImpl=function(isNothing){return function(fromJust){return function(fst){return function(snd){return function(f){return function(b){for(var result=[],value=b;;){var maybe=f(value);if(isNothing(maybe))return result;var tuple=fromJust(maybe);result.push(fst(tuple)),value=snd(tuple)}}}}}}}}(),function(exports){"use strict";var $foreign=PS["Data.Unfoldable"],Data_Maybe=(PS["Data.Function"],PS["Data.Functor"],PS["Data.Maybe"]),Data_Traversable=(PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semiring"],PS["Data.Traversable"]),Data_Tuple=PS["Data.Tuple"],Unfoldable=(PS["Data.Unit"],PS["Partial.Unsafe"],PS.Prelude,function(unfoldr){this.unfoldr=unfoldr}),unfoldr=function(dict){return dict.unfoldr},unfoldableArray=new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd)),replicate=function(dictUnfoldable){return function(n){return function(v){return unfoldr(dictUnfoldable)(function(i){return i<=0?Data_Maybe.Nothing.value:new Data_Maybe.Just(new Data_Tuple.Tuple(v,i-1|0))})(n)}}};exports.Unfoldable=Unfoldable,exports.unfoldr=unfoldr,exports.replicate=replicate,exports.replicateA=function(dictApplicative){return function(dictUnfoldable){return function(dictTraversable){return function(n){return function(m){return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m))}}}}},exports.unfoldableArray=unfoldableArray}(PS["Data.Unfoldable"]=PS["Data.Unfoldable"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Control_Applicative=(PS["Control.Alternative"],PS["Control.Applicative"]),Control_Apply=PS["Control.Apply"],Control_Category=(PS["Control.Bind"],PS["Control.Category"]),Control_Plus=(PS["Control.Comonad"],PS["Control.Extend"],PS["Control.Monad"],PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Plus"]),Data_Foldable=(PS["Control.Semigroupoid"],PS["Data.Eq"],PS["Data.Foldable"]),Data_Function=(PS["Data.FoldableWithIndex"],PS["Data.Function"]),Data_Functor=PS["Data.Functor"],Data_Maybe=(PS["Data.FunctorWithIndex"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Monoid=PS["Data.Monoid"],Data_NonEmpty=(PS["Data.Newtype"],PS["Data.NonEmpty"]),Data_Semigroup=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"]),Data_Traversable=(PS["Data.Semigroup.Foldable"],PS["Data.Semigroup.Traversable"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.Traversable"]),Data_Unfoldable=(PS["Data.TraversableWithIndex"],PS["Data.Tuple"],PS["Data.Unfoldable"]),Nil=(PS.Prelude,function(){function Nil(){}return Nil.value=new Nil,Nil}()),Cons=function(){function Cons(value0,value1){this.value0=value0,this.value1=value1}return Cons.create=function(value0){return function(value1){return new Cons(value0,value1)}},Cons}(),NonEmptyList=function(x){return x},foldableList=new Data_Foldable.Foldable(function(dictMonoid){return function(f){return Data_Foldable.foldl(foldableList)(function(acc){return function($158){return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($158))}})(Data_Monoid.mempty(dictMonoid))}},function(f){return function($copy_b){return function($copy_v){var $tco_result,$tco_var_b=$copy_b,$tco_done=!1;function $tco_loop(b,v){if(v instanceof Nil)return $tco_done=!0,b;if(v instanceof Cons)return $tco_var_b=f(b)(v.value0),void($copy_v=v.value1);throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: "+[v.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_b,$copy_v);return $tco_result}}},function(f){return function(b){var rev=Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);return function($159){return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($159))}}}),functorList=new Data_Functor.Functor(function(f){return Data_Foldable.foldr(foldableList)(function(x){return function(acc){return new Cons(f(x),acc)}})(Nil.value)}),functorNonEmptyList=Data_NonEmpty.functorNonEmpty(functorList),semigroupList=new Data_Semigroup.Semigroup(function(xs){return function(ys){return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs)}}),traversableList=new Data_Traversable.Traversable(function(){return foldableList},function(){return functorList},function(dictApplicative){return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))},function(dictApplicative){return function(f){return function($162){return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function(acc){return function($163){return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f($163))}})(Control_Applicative.pure(dictApplicative)(Nil.value))($162))}}}),unfoldableList=new Data_Unfoldable.Unfoldable(function(f){return function(b){var $copy_source;return $copy_source=b,function($copy_memo){var $tco_result,$tco_var_source=$copy_source,$tco_done=!1;function $tco_loop(source,memo){var v=f(source);if(v instanceof Data_Maybe.Nothing)return $tco_done=!0,Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);if(v instanceof Data_Maybe.Just)return $tco_var_source=v.value0.value1,void($copy_memo=new Cons(v.value0.value0,memo));throw new Error("Failed pattern match at Data.List.Types line 105, column 22 - line 107, column 52: "+[v.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_source,$copy_memo);return $tco_result}(Nil.value)}}),applyList=new Control_Apply.Apply(function(){return functorList},function(v){return function(v1){if(v instanceof Nil)return Nil.value;if(v instanceof Cons)return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));throw new Error("Failed pattern match at Data.List.Types line 120, column 1 - line 120, column 33: "+[v.constructor.name,v1.constructor.name])}}),applyNonEmptyList=new Control_Apply.Apply(function(){return functorNonEmptyList},function(v){return function(v1){return new Data_NonEmpty.NonEmpty(v.value0(v1.value0),Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0,Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0,v.value1))(v1.value1)))}}),applicativeList=new Control_Applicative.Applicative(function(){return applyList},function(a){return new Cons(a,Nil.value)}),altList=new Control_Alt.Alt(function(){return functorList},Data_Semigroup.append(semigroupList)),plusList=new Control_Plus.Plus(function(){return altList},Nil.value),applicativeNonEmptyList=new Control_Applicative.Applicative(function(){return applyNonEmptyList},function($168){return NonEmptyList(Data_NonEmpty.singleton(plusList)($168))});exports.Nil=Nil,exports.Cons=Cons,exports.NonEmptyList=NonEmptyList,exports.semigroupList=semigroupList,exports.functorList=functorList,exports.foldableList=foldableList,exports.unfoldableList=unfoldableList,exports.traversableList=traversableList,exports.applyList=applyList,exports.applicativeList=applicativeList,exports.altList=altList,exports.plusList=plusList,exports.functorNonEmptyList=functorNonEmptyList,exports.applyNonEmptyList=applyNonEmptyList,exports.applicativeNonEmptyList=applicativeNonEmptyList}(PS["Data.List.Types"]=PS["Data.List.Types"]||{}),function(exports){"use strict";var $copy_acc,Control_Alt=PS["Control.Alt"],Control_Applicative=(PS["Control.Alternative"],PS["Control.Applicative"]),Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Lazy=(PS["Control.Category"],PS["Control.Lazy"]),Control_Monad_Rec_Class=PS["Control.Monad.Rec.Class"],Data_Bifunctor=(PS["Control.Semigroupoid"],PS["Data.Bifunctor"]),Data_Foldable=(PS["Data.Boolean"],PS["Data.Eq"],PS["Data.Foldable"]),Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_List_Types=(PS["Data.FunctorWithIndex"],PS["Data.HeytingAlgebra"],PS["Data.List.Types"]),Data_Unit=(PS["Data.Maybe"],PS["Data.Newtype"],PS["Data.NonEmpty"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.Traversable"],PS["Data.Tuple"],PS["Data.Unfoldable"],PS["Data.Unit"]),reverse=(PS.Prelude,$copy_acc=Data_List_Types.Nil.value,function($copy_v){var $tco_result,$tco_var_acc=$copy_acc,$tco_done=!1;function $tco_loop(acc,v){if(v instanceof Data_List_Types.Nil)return $tco_done=!0,acc;if(v instanceof Data_List_Types.Cons)return $tco_var_acc=new Data_List_Types.Cons(v.value0,acc),void($copy_v=v.value1);throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: "+[acc.constructor.name,v.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_acc,$copy_v);return $tco_result}),some=function(dictAlternative){return function(dictLazy){return function(v){return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function(v1){return many(dictAlternative)(dictLazy)(v)}))}}},many=function(dictAlternative){return function(dictLazy){return function(v){return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value))}}},length=Data_Foldable.foldl(Data_List_Types.foldableList)(function(acc){return function(v){return acc+1|0}})(0);exports.fromFoldable=function(dictFoldable){return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value)},exports.some=some,exports.many=many,exports.manyRec=function(dictMonadRec){return function(dictAlternative){return function(p){return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function(acc){return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Alt.alt(dictAlternative.Plus1().Alt0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function(v){return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function(v1){return new Data_List_Types.Cons(v1,acc)})(function(v1){return reverse(acc)})(v))})})(Data_List_Types.Nil.value)}}},exports.null=function(v){return v instanceof Data_List_Types.Nil},exports.length=length,exports.reverse=reverse,exports.zipWith=function(f){return function(xs){return function(ys){var $copy_v1,$copy_v;return reverse(($copy_v=xs,$copy_v1=ys,function($copy_acc){var $tco_result,$tco_var_v=$copy_v,$tco_var_v1=$copy_v1,$tco_done=!1;function $tco_loop(v,v1,acc){if(v instanceof Data_List_Types.Nil)return $tco_done=!0,acc;if(v1 instanceof Data_List_Types.Nil)return $tco_done=!0,acc;if(v instanceof Data_List_Types.Cons&&v1 instanceof Data_List_Types.Cons)return $tco_var_v=v.value1,$tco_var_v1=v1.value1,void($copy_acc=new Data_List_Types.Cons(f(v.value0)(v1.value0),acc));throw new Error("Failed pattern match at Data.List line 708, column 3 - line 708, column 21: "+[v.constructor.name,v1.constructor.name,acc.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_v,$tco_var_v1,$copy_acc);return $tco_result}(Data_List_Types.Nil.value)))}}}}(PS["Data.List"]=PS["Data.List"]||{}),function(exports){"use strict";PS["Control.Bind"],PS["Control.Category"],PS["Control.Semigroupoid"],PS["Data.Boolean"],PS["Data.Eq"],PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"],PS["Data.List"];var Data_List_Types=PS["Data.List.Types"],Data_NonEmpty=(PS["Data.Maybe"],PS["Data.NonEmpty"]);PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semigroup.Foldable"],PS["Data.Semigroup.Traversable"],PS["Data.Semiring"],PS["Data.Traversable"],PS["Data.Tuple"],PS["Data.Unfoldable"],PS["Partial.Unsafe"],PS.Prelude;exports.singleton=function($160){return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160))},exports.cons=function(y){return function(v){return new Data_NonEmpty.NonEmpty(y,new Data_List_Types.Cons(v.value0,v.value1))}}}(PS["Data.List.NonEmpty"]=PS["Data.List.NonEmpty"]||{}),function(exports){"use strict";(PS["Unsafe.Coerce"]=PS["Unsafe.Coerce"]||{}).unsafeCoerce=function(x){return x}}(),function(exports){"use strict";var $foreign=PS["Unsafe.Coerce"];exports.unsafeCoerce=$foreign.unsafeCoerce}(PS["Unsafe.Coerce"]=PS["Unsafe.Coerce"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Category=PS["Control.Category"],Data_Either=(PS["Control.Semigroupoid"],PS["Data.Const"],PS["Data.Either"]),Data_Functor=(PS["Data.Eq"],PS["Data.Function"],PS["Data.Functor"]),Data_List_NonEmpty=(PS["Data.List"],PS["Data.List.NonEmpty"]),Data_List_Types=PS["Data.List.Types"],Data_NonEmpty=(PS["Data.Monoid"],PS["Data.Newtype"],PS["Data.NonEmpty"]),Data_Tuple=(PS["Data.Ring"],PS["Data.Semiring"],PS["Data.Tuple"]),Pure=(PS.Prelude,PS["Unsafe.Coerce"],function(){function Pure(value0){this.value0=value0}return Pure.create=function(value0){return new Pure(value0)},Pure}()),Lift=function(){function Lift(value0){this.value0=value0}return Lift.create=function(value0){return new Lift(value0)},Lift}(),Ap=function(){function Ap(value0,value1){this.value0=value0,this.value1=value1}return Ap.create=function(value0){return function(value1){return new Ap(value0,value1)}},Ap}(),mkAp=function(fba){return function(fb){return new Ap(fba,fb)}},liftFreeAp=Lift.create,goApply=function($copy_dictApplicative){return function($copy_fStack){return function($copy_vals){return function($copy_gVal){var $tco_result,$tco_var_dictApplicative=$copy_dictApplicative,$tco_var_fStack=$copy_fStack,$tco_var_vals=$copy_vals,$tco_done=!1;function $tco_loop(dictApplicative,fStack,vals,gVal){if(fStack instanceof Data_List_Types.Nil)return $tco_done=!0,new Data_Either.Left(gVal);if(fStack instanceof Data_List_Types.Cons){var gRes=Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);if(1===fStack.value0.count)return fStack.value1 instanceof Data_List_Types.Nil?($tco_done=!0,new Data_Either.Left(gRes)):($tco_var_dictApplicative=dictApplicative,$tco_var_fStack=fStack.value1,$tco_var_vals=vals,void($copy_gVal=gRes));if(vals instanceof Data_List_Types.Nil)return $tco_done=!0,new Data_Either.Left(gRes);if(vals instanceof Data_List_Types.Cons)return $tco_done=!0,Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({func:gRes,count:fStack.value0.count-1|0},fStack.value1),new Data_NonEmpty.NonEmpty(vals.value0,vals.value1)));throw new Error("Failed pattern match at Control.Applicative.Free line 83, column 11 - line 88, column 50: "+[vals.constructor.name])}throw new Error("Failed pattern match at Control.Applicative.Free line 72, column 3 - line 88, column 50: "+[fStack.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_dictApplicative,$tco_var_fStack,$tco_var_vals,$copy_gVal);return $tco_result}}}},functorFreeAp=new Data_Functor.Functor(function(f){return function(x){return mkAp(new Pure(f))(x)}}),foldFreeAp=function(dictApplicative){return function(nat){return function(z){return function($copy_v){var $tco_result,$tco_done=!1;function $tco_loop(v){if(v.value1.value0 instanceof Pure){if((v1=goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0)))instanceof Data_Either.Left)return $tco_done=!0,v1.value0;if(v1 instanceof Data_Either.Right)return void($copy_v=v1.value0);throw new Error("Failed pattern match at Control.Applicative.Free line 54, column 17 - line 56, column 24: "+[v1.constructor.name])}if(v.value1.value0 instanceof Lift){var v1;if((v1=goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0)))instanceof Data_Either.Left)return $tco_done=!0,v1.value0;if(v1 instanceof Data_Either.Right)return void($copy_v=v1.value0);throw new Error("Failed pattern match at Control.Applicative.Free line 57, column 17 - line 59, column 24: "+[v1.constructor.name])}if(v.value1.value0 instanceof Ap){var nextVals=new Data_NonEmpty.NonEmpty(v.value1.value0.value1,v.value1.value1);return $copy_dictApplicative=dictApplicative,$copy_fStack=v.value0,$copy_valStack=nextVals,$copy_nat=nat,$copy_func=v.value1.value0.value0,void($copy_v=function($copy_count){var $tco_result,$tco_var_dictApplicative=$copy_dictApplicative,$tco_var_fStack=$copy_fStack,$tco_var_valStack=$copy_valStack,$tco_var_nat=$copy_nat,$tco_var_func=$copy_func,$tco_done=!1;function $tco_loop(dictApplicative,fStack,valStack,nat,func,count){if(func instanceof Pure)return $tco_done=!0,new Data_Tuple.Tuple(new Data_List_Types.Cons({func:Control_Applicative.pure(dictApplicative)(func.value0),count:count},fStack),valStack);if(func instanceof Lift)return $tco_done=!0,new Data_Tuple.Tuple(new Data_List_Types.Cons({func:nat(func.value0),count:count},fStack),valStack);if(func instanceof Ap)return $tco_var_dictApplicative=dictApplicative,$tco_var_fStack=fStack,$tco_var_valStack=Data_List_NonEmpty.cons(func.value1)(valStack),$tco_var_nat=nat,$tco_var_func=func.value0,void($copy_count=count+1|0);throw new Error("Failed pattern match at Control.Applicative.Free line 102, column 41 - line 105, column 81: "+[func.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_dictApplicative,$tco_var_fStack,$tco_var_valStack,$tco_var_nat,$tco_var_func,$copy_count);return $tco_result}(1))}var $copy_func,$copy_nat,$copy_valStack,$copy_fStack,$copy_dictApplicative;throw new Error("Failed pattern match at Control.Applicative.Free line 53, column 5 - line 64, column 1: "+[v.value1.value0.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($copy_v);return $tco_result}(new Data_Tuple.Tuple(Data_List_Types.Nil.value,Data_List_NonEmpty.singleton(z)))}}},applyFreeAp=new Control_Apply.Apply(function(){return functorFreeAp},function(fba){return function(fb){return mkAp(fba)(fb)}}),applicativeFreeAp=new Control_Applicative.Applicative(function(){return applyFreeAp},Pure.create);exports.liftFreeAp=liftFreeAp,exports.retractFreeAp=function(dictApplicative){return foldFreeAp(dictApplicative)(Control_Category.id(Control_Category.categoryFn))},exports.foldFreeAp=foldFreeAp,exports.hoistFreeAp=function(f){return foldFreeAp(applicativeFreeAp)(function($37){return liftFreeAp(f($37))})},exports.functorFreeAp=functorFreeAp,exports.applyFreeAp=applyFreeAp,exports.applicativeFreeAp=applicativeFreeAp}(PS["Control.Applicative.Free"]=PS["Control.Applicative.Free"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Data_Either=(PS["Control.Bind"],PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),catchError=(PS["Data.Maybe"],PS["Data.Unit"],PS.Prelude,function(dict){return dict.catchError});exports.catchError=catchError,exports.throwError=function(dict){return dict.throwError},exports.MonadThrow=function(Monad0,throwError){this.Monad0=Monad0,this.throwError=throwError},exports.MonadError=function(MonadThrow0,catchError){this.MonadThrow0=MonadThrow0,this.catchError=catchError},exports.try=function(dictMonadError){return function(a){return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function($21){return Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0())(Data_Either.Left.create($21))})}}}(PS["Control.Monad.Error.Class"]=PS["Control.Monad.Error.Class"]||{}),function(exports){"use strict";var Control_Category=PS["Control.Category"],Control_Monad_Eff=(PS["Control.Monad"],PS["Control.Monad.Eff"]),MonadEff=function(Monad0,liftEff){this.Monad0=Monad0,this.liftEff=liftEff},monadEffEff=new MonadEff(function(){return Control_Monad_Eff.monadEff},Control_Category.id(Control_Category.categoryFn));exports.liftEff=function(dict){return dict.liftEff},exports.MonadEff=MonadEff,exports.monadEffEff=monadEffEff}(PS["Control.Monad.Eff.Class"]=PS["Control.Monad.Eff.Class"]||{}),function(exports){"use strict";PS["Control.Category"],PS["Control.Monad"],PS["Control.Semigroupoid"],PS["Data.Functor"],PS.Prelude;exports.ask=function(dict){return dict.ask},exports.MonadAsk=function(Monad0,ask){this.Monad0=Monad0,this.ask=ask}}(PS["Control.Monad.Reader.Class"]=PS["Control.Monad.Reader.Class"]||{}),function(exports){"use strict";var Data_Tuple=PS["Data.Tuple"],Data_Unit=PS["Data.Unit"],state=(PS.Prelude,function(dict){return dict.state});exports.state=state,exports.MonadState=function(Monad0,state){this.Monad0=Monad0,this.state=state},exports.gets=function(dictMonadState){return function(f){return state(dictMonadState)(function(s){return new Data_Tuple.Tuple(f(s),s)})}},exports.put=function(dictMonadState){return function(s){return state(dictMonadState)(function(v){return new Data_Tuple.Tuple(Data_Unit.unit,s)})}},exports.modify=function(dictMonadState){return function(f){return state(dictMonadState)(function(s){return new Data_Tuple.Tuple(Data_Unit.unit,f(s))})}}}(PS["Control.Monad.State.Class"]=PS["Control.Monad.State.Class"]||{}),function(exports){"use strict";PS.Prelude;exports.lift=function(dict){return dict.lift},exports.MonadTrans=function(lift){this.lift=lift}}(PS["Control.Monad.Trans.Class"]=PS["Control.Monad.Trans.Class"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"];var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad=(PS["Control.Category"],PS["Control.Monad"]),Control_Monad_Eff_Class=(PS["Control.Monad.Cont.Class"],PS["Control.Monad.Eff.Class"]),Control_Monad_Error_Class=PS["Control.Monad.Error.Class"],Control_Monad_Reader_Class=PS["Control.Monad.Reader.Class"],Control_Monad_State_Class=(PS["Control.Monad.Rec.Class"],PS["Control.Monad.State.Class"]),Control_Monad_Trans_Class=PS["Control.Monad.Trans.Class"],Data_Either=(PS["Control.Monad.Writer.Class"],PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),ExceptT=(PS["Data.Monoid"],PS["Data.Newtype"],PS["Data.Semigroup"],PS["Data.Tuple"],PS.Prelude,function(x){return x}),monadTransExceptT=new Control_Monad_Trans_Class.MonadTrans(function(dictMonad){return function(m){return Control_Bind.bind(dictMonad.Bind1())(m)(function(v){return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v))})}}),mapExceptT=function(f){return function(v){return f(v)}},functorExceptT=function(dictFunctor){return new Data_Functor.Functor(function(f){return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)))})},monadExceptT=function(dictMonad){return new Control_Monad.Monad(function(){return applicativeExceptT(dictMonad)},function(){return bindExceptT(dictMonad)})},bindExceptT=function(dictMonad){return new Control_Bind.Bind(function(){return applyExceptT(dictMonad)},function(v){return function(k){return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function($97){return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97))})(function(a){return k(a)}))}})},applyExceptT=function(dictMonad){return new Control_Apply.Apply(function(){return functorExceptT(dictMonad.Bind1().Apply0().Functor0())},Control_Monad.ap(monadExceptT(dictMonad)))},applicativeExceptT=function(dictMonad){return new Control_Applicative.Applicative(function(){return applyExceptT(dictMonad)},function($98){return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)))})},monadThrowExceptT=function(dictMonad){return new Control_Monad_Error_Class.MonadThrow(function(){return monadExceptT(dictMonad)},function($102){return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)))})};exports.ExceptT=ExceptT,exports.runExceptT=function(v){return v},exports.withExceptT=function(dictFunctor){return function(f){return function(v){var v1;return ExceptT(Data_Functor.map(dictFunctor)((v1=f,function(v2){if(v2 instanceof Data_Either.Right)return new Data_Either.Right(v2.value0);if(v2 instanceof Data_Either.Left)return new Data_Either.Left(v1(v2.value0));throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: "+[v1.constructor.name,v2.constructor.name])}))(v))}}},exports.mapExceptT=mapExceptT,exports.except=function(dictApplicative){return function($96){return ExceptT(Control_Applicative.pure(dictApplicative)($96))}},exports.functorExceptT=functorExceptT,exports.applyExceptT=applyExceptT,exports.applicativeExceptT=applicativeExceptT,exports.bindExceptT=bindExceptT,exports.monadExceptT=monadExceptT,exports.monadTransExceptT=monadTransExceptT,exports.monadEffExceptT=function(dictMonadEff){return new Control_Monad_Eff_Class.MonadEff(function(){return monadExceptT(dictMonadEff.Monad0())},function($99){return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($99))})},exports.monadThrowExceptT=monadThrowExceptT,exports.monadErrorExceptT=function(dictMonad){return new Control_Monad_Error_Class.MonadError(function(){return monadThrowExceptT(dictMonad)},function(v){return function(k){return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function(a){return k(a)})(function($103){return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($103))}))}})},exports.monadAskExceptT=function(dictMonadAsk){return new Control_Monad_Reader_Class.MonadAsk(function(){return monadExceptT(dictMonadAsk.Monad0())},Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)))},exports.monadStateExceptT=function(dictMonadState){return new Control_Monad_State_Class.MonadState(function(){return monadExceptT(dictMonadState.Monad0())},function(f){return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f))})}}(PS["Control.Monad.Except.Trans"]=PS["Control.Monad.Except.Trans"]||{}),function(exports){"use strict";PS["Control.Monad.Error.Class"];var Control_Monad_Except_Trans=PS["Control.Monad.Except.Trans"],Data_Identity=(PS["Control.Semigroupoid"],PS["Data.Either"],PS["Data.Identity"]),Data_Newtype=PS["Data.Newtype"],withExcept=(PS.Prelude,Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity));exports.runExcept=function($0){return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0))},exports.withExcept=withExcept}(PS["Control.Monad.Except"]=PS["Control.Monad.Except"]||{}),function(exports){"use strict";var Unsafe_Coerce=PS["Unsafe.Coerce"],runExists=Unsafe_Coerce.unsafeCoerce,mkExists=Unsafe_Coerce.unsafeCoerce;exports.mkExists=mkExists,exports.runExists=runExists}(PS["Data.Exists"]=PS["Data.Exists"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad=PS["Control.Monad"],Control_Monad_Rec_Class=(PS["Control.Monad.Eff.Class"],PS["Control.Monad.Error.Class"],PS["Control.Monad.Reader.Class"],PS["Control.Monad.Rec.Class"]),Control_Monad_Trans_Class=(PS["Control.Monad.State.Class"],PS["Control.Monad.Trans.Class"]),Data_Bifunctor=(PS["Control.Monad.Writer.Class"],PS["Control.Semigroupoid"],PS["Data.Bifunctor"]),Data_Either=PS["Data.Either"],Data_Exists=PS["Data.Exists"],Data_Functor=PS["Data.Functor"],Data_Unit=(PS["Data.Monoid"],PS["Data.Semigroup"],PS["Data.Unit"]),Bound=(PS.Prelude,function(){function Bound(value0,value1){this.value0=value0,this.value1=value1}return Bound.create=function(value0){return function(value1){return new Bound(value0,value1)}},Bound}()),FreeT=function(){function FreeT(value0){this.value0=value0}return FreeT.create=function(value0){return new FreeT(value0)},FreeT}(),Bind=function(){function Bind(value0){this.value0=value0}return Bind.create=function(value0){return new Bind(value0)},Bind}(),freeT=FreeT.create,bound=function(m){return function(f){return new Bind(Data_Exists.mkExists(new Bound(m,f)))}},functorFreeT=function(dictFunctor){return function(dictFunctor1){return new Data_Functor.Functor(function(f){return function(v){if(v instanceof FreeT)return new FreeT(function(v1){return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit))});if(v instanceof Bind)return Data_Exists.runExists(function(v1){return bound(v1.value0)(function($104){return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104))})})(v.value0);throw new Error("Failed pattern match at Control.Monad.Free.Trans line 58, column 1 - line 58, column 71: "+[f.constructor.name,v.constructor.name])}})}},bimapFreeT=function(dictFunctor){return function(dictFunctor1){return function(nf){return function(nm){return function(v){if(v instanceof Bind)return Data_Exists.runExists(function(v1){return bound(function($105){return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value0($105))})(function($106){return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value1($106))})})(v.value0);if(v instanceof FreeT)return new FreeT(function(v1){return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)(function($107){return nf(Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm))($107))}))(nm(v.value0(Data_Unit.unit)))});throw new Error("Failed pattern match at Control.Monad.Free.Trans line 119, column 1 - line 119, column 109: "+[nf.constructor.name,nm.constructor.name,v.constructor.name])}}}}},monadFreeT=function(dictFunctor){return function(dictMonad){return new Control_Monad.Monad(function(){return applicativeFreeT(dictFunctor)(dictMonad)},function(){return bindFreeT(dictFunctor)(dictMonad)})}},bindFreeT=function(dictFunctor){return function(dictMonad){return new Control_Bind.Bind(function(){return applyFreeT(dictFunctor)(dictMonad)},function(v){return function(f){return v instanceof Bind?Data_Exists.runExists(function(v1){return bound(v1.value0)(function(x){return bound(function(v2){return v1.value1(x)})(f)})})(v.value0):bound(function(v1){return v})(f)}})}},applyFreeT=function(dictFunctor){return function(dictMonad){return new Control_Apply.Apply(function(){return functorFreeT(dictFunctor)(dictMonad.Bind1().Apply0().Functor0())},Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)))}},applicativeFreeT=function(dictFunctor){return function(dictMonad){return new Control_Applicative.Applicative(function(){return applyFreeT(dictFunctor)(dictMonad)},function(a){return new FreeT(function(v){return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a))})})}},resume=function(dictFunctor){return function(dictMonadRec){return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function(v){if(v instanceof FreeT)return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));if(v instanceof Bind)return Data_Exists.runExists(function(v1){var v2=v1.value0(Data_Unit.unit);if(v2 instanceof FreeT)return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v2.value0(Data_Unit.unit))(function(v3){if(v3 instanceof Data_Either.Left)return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));if(v3 instanceof Data_Either.Right)return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function(h){return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1)})(v3.value0))));throw new Error("Failed pattern match at Control.Monad.Free.Trans line 53, column 20 - line 55, column 67: "+[v3.constructor.name])});if(v2 instanceof Bind)return Data_Exists.runExists(function(v3){return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function(z){return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1)})))})(v2.value0);throw new Error("Failed pattern match at Control.Monad.Free.Trans line 51, column 5 - line 56, column 98: "+[v2.constructor.name])})(v.value0);throw new Error("Failed pattern match at Control.Monad.Free.Trans line 48, column 3 - line 48, column 75: "+[v.constructor.name])})}};exports.freeT=freeT,exports.liftFreeT=function(dictFunctor){return function(dictMonad){return function(fa){return new FreeT(function(v){return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)))})}}},exports.hoistFreeT=function(dictFunctor){return function(dictFunctor1){return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.id(Control_Category.categoryFn))}},exports.bimapFreeT=bimapFreeT,exports.resume=resume,exports.runFreeT=function(dictFunctor){return function(dictMonadRec){return function(interp){return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped(dictMonadRec.Monad0().Bind1())(function(v){if(v instanceof Data_Either.Left)return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));if(v instanceof Data_Either.Right)return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));throw new Error("Failed pattern match at Control.Monad.Free.Trans line 127, column 3 - line 127, column 63: "+[v.constructor.name])})(resume(dictFunctor)(dictMonadRec)))}}},exports.functorFreeT=functorFreeT,exports.applyFreeT=applyFreeT,exports.applicativeFreeT=applicativeFreeT,exports.bindFreeT=bindFreeT,exports.monadFreeT=monadFreeT,exports.monadTransFreeT=function(dictFunctor){return new Control_Monad_Trans_Class.MonadTrans(function(dictMonad){return function(ma){return new FreeT(function(v){return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Either.Left.create)(ma)})}})},exports.monadRecFreeT=function(dictFunctor){return function(dictMonad){return new Control_Monad_Rec_Class.MonadRec(function(){return monadFreeT(dictFunctor)(dictMonad)},function(f){var go=function(s){return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function(v){if(v instanceof Control_Monad_Rec_Class.Loop)return go(v.value0);if(v instanceof Control_Monad_Rec_Class.Done)return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);throw new Error("Failed pattern match at Control.Monad.Free.Trans line 81, column 15 - line 83, column 25: "+[v.constructor.name])})};return go})}}}(PS["Control.Monad.Free.Trans"]=PS["Control.Monad.Free.Trans"]||{}),function(exports){"use strict";exports.newRef=function(val){return function(){return{value:val}}},exports.readRef=function(ref){return function(){return ref.value}},exports["modifyRef'"]=function(ref){return function(f){return function(){var t=f(ref.value);return ref.value=t.state,t.value}}},exports.writeRef=function(ref){return function(val){return function(){return ref.value=val,{}}}}}(PS["Control.Monad.Eff.Ref"]=PS["Control.Monad.Eff.Ref"]||{}),function(exports){"use strict";var $foreign=PS["Control.Monad.Eff.Ref"],Data_Unit=(PS["Control.Monad.Eff"],PS["Data.Unit"]);PS.Prelude;exports.modifyRef=function(ref){return function(f){return $foreign["modifyRef'"](ref)(function(s){return{state:f(s),value:Data_Unit.unit}})}},exports.newRef=$foreign.newRef,exports.readRef=$foreign.readRef,exports["modifyRef'"]=$foreign["modifyRef'"],exports.writeRef=$foreign.writeRef}(PS["Control.Monad.Eff.Ref"]=PS["Control.Monad.Eff.Ref"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"];var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad=PS["Control.Monad"],Control_Monad_Eff_Class=(PS["Control.Monad.Cont.Class"],PS["Control.Monad.Eff.Class"]),Control_Monad_Reader_Class=(PS["Control.Monad.Error.Class"],PS["Control.Monad.Reader.Class"]),Control_Monad_Rec_Class=PS["Control.Monad.Rec.Class"],Control_Monad_Trans_Class=(PS["Control.Monad.State.Class"],PS["Control.Monad.Trans.Class"]),Data_Function=(PS["Control.Monad.Writer.Class"],PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Distributive"],PS["Data.Function"]),Data_Functor=PS["Data.Functor"],Data_Semigroup=(PS["Data.Monoid"],PS["Data.Newtype"],PS["Data.Semigroup"]),ReaderT=(PS.Prelude,function(x){return x}),monadTransReaderT=new Control_Monad_Trans_Class.MonadTrans(function(dictMonad){return function($67){return ReaderT(Data_Function.const($67))}}),mapReaderT=function(f){return function(v){return function($68){return f(v($68))}}},functorReaderT=function(dictFunctor){return new Data_Functor.Functor(function($69){return mapReaderT(Data_Functor.map(dictFunctor)($69))})},applyReaderT=function(dictApply){return new Control_Apply.Apply(function(){return functorReaderT(dictApply.Functor0())},function(v){return function(v1){return function(r){return Control_Apply.apply(dictApply)(v(r))(v1(r))}}})},bindReaderT=function(dictBind){return new Control_Bind.Bind(function(){return applyReaderT(dictBind.Apply0())},function(v){return function(k){return function(r){return Control_Bind.bind(dictBind)(v(r))(function(a){return k(a)(r)})}}})},applicativeReaderT=function(dictApplicative){return new Control_Applicative.Applicative(function(){return applyReaderT(dictApplicative.Apply0())},function($71){return ReaderT(Data_Function.const(Control_Applicative.pure(dictApplicative)($71)))})},monadReaderT=function(dictMonad){return new Control_Monad.Monad(function(){return applicativeReaderT(dictMonad.Applicative0())},function(){return bindReaderT(dictMonad.Bind1())})};exports.ReaderT=ReaderT,exports.runReaderT=function(v){return v},exports.mapReaderT=mapReaderT,exports.functorReaderT=functorReaderT,exports.applyReaderT=applyReaderT,exports.applicativeReaderT=applicativeReaderT,exports.bindReaderT=bindReaderT,exports.monadReaderT=monadReaderT,exports.semigroupReaderT=function(dictApply){return function(dictSemigroup){return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)))}},exports.monadTransReaderT=monadTransReaderT,exports.monadEffReader=function(dictMonadEff){return new Control_Monad_Eff_Class.MonadEff(function(){return monadReaderT(dictMonadEff.Monad0())},function($73){return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($73))})},exports.monadAskReaderT=function(dictMonad){return new Control_Monad_Reader_Class.MonadAsk(function(){return monadReaderT(dictMonad)},Control_Applicative.pure(dictMonad.Applicative0()))},exports.monadRecReaderT=function(dictMonadRec){return new Control_Monad_Rec_Class.MonadRec(function(){return monadReaderT(dictMonadRec.Monad0())},function(k){return function(a){return function(r){return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function(r){return function(a$prime){var v=k(a$prime);return Control_Bind.bindFlipped(dictMonadRec.Monad0().Bind1())(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0()))(v(r))}}(r))(a)}}})}}(PS["Control.Monad.Reader.Trans"]=PS["Control.Monad.Reader.Trans"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"],PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Monad.Cont.Trans"],PS["Control.Monad.Eff"],PS["Control.Monad.Eff.Class"],PS["Control.Monad.Eff.Ref"],PS["Control.Monad.Eff.Unsafe"],PS["Control.Monad.Except.Trans"],PS["Control.Monad.Maybe.Trans"],PS["Control.Monad.Reader.Trans"],PS["Control.Monad.Writer.Trans"],PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Either"],PS["Data.Function"],PS["Data.Functor"],PS["Data.Functor.Compose"],PS["Data.Maybe"],PS["Data.Monoid"],PS["Data.Newtype"],PS["Data.Unit"],PS.Prelude;exports.Parallel=function(Applicative1,Monad0,parallel,sequential){this.Applicative1=Applicative1,this.Monad0=Monad0,this.parallel=parallel,this.sequential=sequential},exports.parallel=function(dict){return dict.parallel},exports.sequential=function(dict){return dict.sequential}}(PS["Control.Parallel.Class"]=PS["Control.Parallel.Class"]||{}),function(exports){"use strict";PS["Control.Alternative"],PS["Control.Apply"];var Control_Category=PS["Control.Category"],Control_Parallel_Class=PS["Control.Parallel.Class"],Data_Foldable=(PS["Control.Semigroupoid"],PS["Data.Foldable"]),parTraverse_=(PS["Data.Traversable"],PS.Prelude,function(dictParallel){return function(dictFoldable){return function(f){return function($17){return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function($18){return Control_Parallel_Class.parallel(dictParallel)(f($18))})($17))}}}});exports.parTraverse_=parTraverse_,exports.parSequence_=function(dictParallel){return function(dictFoldable){return parTraverse_(dictParallel)(dictFoldable)(Control_Category.id(Control_Category.categoryFn))}}}(PS["Control.Parallel"]=PS["Control.Parallel"]||{}),function(exports){"use strict";var Control_Category=PS["Control.Category"],Profunctor=(PS["Control.Semigroupoid"],PS["Data.Newtype"],PS.Prelude,function(dimap){this.dimap=dimap}),profunctorFn=new Profunctor(function(a2b){return function(c2d){return function(b2c){return function($9){return c2d(b2c(a2b($9)))}}}}),dimap=function(dict){return dict.dimap};exports.dimap=dimap,exports.Profunctor=Profunctor,exports.rmap=function(dictProfunctor){return function(b2c){return dimap(dictProfunctor)(Control_Category.id(Control_Category.categoryFn))(b2c)}},exports.profunctorFn=profunctorFn}(PS["Data.Profunctor"]=PS["Data.Profunctor"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Control_Monad_Free_Trans=PS["Control.Monad.Free.Trans"],Control_Monad_Rec_Class=PS["Control.Monad.Rec.Class"],Control_Monad_Trans_Class=PS["Control.Monad.Trans.Class"],Control_Parallel_Class=(PS["Control.Parallel"],PS["Control.Parallel.Class"]),Data_Bifunctor=(PS["Control.Semigroupoid"],PS["Data.Bifunctor"]),Data_Either=PS["Data.Either"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Identity=PS["Data.Identity"],Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Profunctor=PS["Data.Profunctor"],Data_Tuple=PS["Data.Tuple"],Data_Unit=PS["Data.Unit"],Emit=(PS.Prelude,function(){function Emit(value0,value1){this.value0=value0,this.value1=value1}return Emit.create=function(value0){return function(value1){return new Emit(value0,value1)}},Emit}()),profunctorAwait=new Data_Profunctor.Profunctor(function(f){return function(g){return function(v){return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v)}}}),loop=function(dictFunctor){return function(dictMonad){return function(me){return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function(v){return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(dictMonad.Bind1().Apply0().Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me)})(Data_Unit.unit)}}},fuseWithL=function(dictFunctor){return function(dictFunctor1){return function(dictFunctor2){return function(dictMonadRec){return function(zap){return function(fs){return function(gs){var go=function(v){return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function(v1){return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function(v2){return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function(t){return Control_Monad_Free_Trans.freeT(function(v3){return go(t)})})(zap(Data_Tuple.Tuple.create)(v1)(v2)))})}))};return Control_Monad_Free_Trans.freeT(function(v){return go(new Data_Tuple.Tuple(fs,gs))})}}}}}}},fuseWith=function(dictFunctor){return function(dictFunctor1){return function(dictFunctor2){return function(dictMonadRec){return function(dictParallel){return function(zap){return function(fs){return function(gs){var go=function(v){return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply(dictParallel.Applicative1().Apply0())(Data_Functor.map(dictParallel.Applicative1().Apply0().Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function(v1){if(v1 instanceof Data_Either.Left)return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Data_Either.Left(v1.value0));if(v1 instanceof Data_Either.Right)return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function(t){return Control_Monad_Free_Trans.freeT(function(v2){return go(t)})})(v1.value0)));throw new Error("Failed pattern match at Control.Coroutine line 80, column 5 - line 82, column 63: "+[v1.constructor.name])})};return Control_Monad_Free_Trans.freeT(function(v){return go(new Data_Tuple.Tuple(fs,gs))})}}}}}}}},functorAwait=new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait)),bifunctorEmit=new Data_Bifunctor.Bifunctor(function(f){return function(g){return function(v){return new Emit(f(v.value0),g(v.value1))}}}),functorEmit=new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit)),emit=function(dictMonad){return function(o){return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o,Data_Unit.unit))}},$$await=function(dictMonad){return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.id(Control_Category.categoryFn))};exports.loop=loop,exports.runProcess=function(dictMonadRec){return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function($186){return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($186))})},exports.fuseWith=fuseWith,exports.fuseWithL=fuseWithL,exports.Emit=Emit,exports.emit=emit,exports.producer=function(dictMonad){return function(recv){return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function(v){if(v instanceof Data_Either.Left)return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(dictMonad.Bind1().Apply0().Functor0()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);if(v instanceof Data_Either.Right)return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));throw new Error("Failed pattern match at Control.Coroutine line 126, column 3 - line 128, column 29: "+[v.constructor.name])}))}},exports.await=$$await,exports.consumer=function(dictMonad){return function(send){return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function(v){return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(v))}))}},exports.connect=function(dictMonadRec){return function(dictParallel){return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function(f){return function(v){return function(v1){return f(v.value1)(v1(v.value0))}}})}},exports.pullFrom=function(dictMonadRec){return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function(f){return function(v){return function(v1){return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1))}}})},exports.bifunctorEmit=bifunctorEmit,exports.functorEmit=functorEmit,exports.profunctorAwait=profunctorAwait,exports.functorAwait=functorAwait}(PS["Control.Coroutine"]=PS["Control.Coroutine"]||{}),function(exports){"use strict";var Aff=function(){var EMPTY={},PURE="Pure",THROW="Throw",CATCH="Catch",SYNC="Sync",ASYNC="Async",BIND="Bind",BRACKET="Bracket",FORK="Fork",SEQ="Sequential",MAP="Map",APPLY="Apply",ALT="Alt",CONS="Cons",RESUME="Resume",RELEASE="Release",FINALIZER="Finalizer",FINALIZED="Finalized",FORKED="Forked";function Aff(tag,_1,_2,_3){this.tag=tag,this._1=_1,this._2=_2,this._3=_3}function AffCtr(tag){var fn=function(_1,_2,_3){return new Aff(tag,_1,_2,_3)};return fn.tag=tag,fn}function nonCanceler(error){return new Aff(PURE,void 0)}function runEff(eff){try{eff()}catch(error){setTimeout(function(){throw error},0)}}function runSync(left,right,eff){try{return right(eff())}catch(error){return left(error)}}function runAsync(left,eff,k){try{return eff(k)()}catch(error){return k(left(error))(),nonCanceler}}var Scheduler=function(){var size=0,ix=0,queue=new Array(1024),draining=!1;function drain(){var thunk;for(draining=!0;0!==size;)size--,thunk=queue[ix],queue[ix]=void 0,ix=(ix+1)%1024,thunk();draining=!1}return{isDraining:function(){return draining},enqueue:function(cb){var tmp;1024===size&&(tmp=draining,drain(),draining=tmp),queue[(ix+size)%1024]=cb,size++,draining||drain()}}}();var SUSPENDED=0,CONTINUE=1,STEP_BIND=2,STEP_RESULT=3,PENDING=4,RETURN=5,COMPLETED=6;function Fiber(util,supervisor,aff){var runTick=0,status=SUSPENDED,step=aff,fail=null,interrupt=null,bhead=null,btail=null,attempts=null,bracketCount=0,joinId=0,joins=null,rethrow=!0;function run(localRunTick){for(var tmp,result,attempt;;)switch(attempt=result=tmp=null,status){case STEP_BIND:status=CONTINUE,step=bhead(step),null===btail?bhead=null:(bhead=btail._1,btail=btail._2);break;case STEP_RESULT:util.isLeft(step)?(status=RETURN,fail=step,step=null):null===bhead?status=RETURN:(status=STEP_BIND,step=util.fromRight(step));break;case CONTINUE:switch(step.tag){case BIND:bhead&&(btail=new Aff(CONS,bhead,btail)),bhead=step._2,status=CONTINUE,step=step._1;break;case PURE:null===bhead?(status=RETURN,step=util.right(step._1)):(status=STEP_BIND,step=step._1);break;case SYNC:status=STEP_RESULT,step=runSync(util.left,util.right,step._1);break;case ASYNC:return status=PENDING,void(step=runAsync(util.left,step._1,function(result){return function(){runTick===localRunTick&&(runTick++,Scheduler.enqueue(function(){status=STEP_RESULT,step=result,run(runTick)}))}}));case THROW:status=RETURN,fail=util.left(step._1),step=null;break;case CATCH:attempts=new Aff(CONS,step,null===bhead?attempts:new Aff(CONS,new Aff(RESUME,bhead,btail),attempts,interrupt),interrupt),btail=bhead=null,status=CONTINUE,step=step._1;break;case BRACKET:bracketCount++,attempts=new Aff(CONS,step,null===bhead?attempts:new Aff(CONS,new Aff(RESUME,bhead,btail),attempts,interrupt),interrupt),btail=bhead=null,status=CONTINUE,step=step._1;break;case FORK:status=STEP_BIND,tmp=Fiber(util,supervisor,step._2),supervisor&&supervisor.register(tmp),step._1&&tmp.run(),step=tmp;break;case SEQ:status=CONTINUE,step=sequential(util,supervisor,step._1)}break;case RETURN:if((btail=bhead=null)===attempts)status=COMPLETED,step=interrupt||fail||step;else switch(tmp=attempts._3,attempt=attempts._1,attempts=attempts._2,attempt.tag){case CATCH:interrupt&&interrupt!==tmp?status=RETURN:fail&&(status=CONTINUE,step=attempt._2(util.fromLeft(fail)),fail=null);break;case RESUME:interrupt&&interrupt!==tmp||fail?status=RETURN:(bhead=attempt._1,btail=attempt._2,status=STEP_BIND,step=util.fromRight(step));break;case BRACKET:bracketCount--,null===fail&&(result=util.fromRight(step),attempts=new Aff(CONS,new Aff(RELEASE,attempt._2,result),attempts,tmp),(interrupt===tmp||0<bracketCount)&&(status=CONTINUE,step=attempt._3(result)));break;case RELEASE:bracketCount++,attempts=new Aff(CONS,new Aff(FINALIZED,step),attempts,interrupt),status=CONTINUE,step=interrupt&&interrupt!==tmp?attempt._1.killed(util.fromLeft(interrupt))(attempt._2):fail?attempt._1.failed(util.fromLeft(fail))(attempt._2):attempt._1.completed(util.fromRight(step))(attempt._2);break;case FINALIZER:bracketCount++,attempts=new Aff(CONS,new Aff(FINALIZED,step),attempts,interrupt),status=CONTINUE,step=attempt._1;break;case FINALIZED:bracketCount--,status=RETURN,step=attempt._1}break;case COMPLETED:for(var k in joins)joins.hasOwnProperty(k)&&(rethrow=rethrow&&joins[k].rethrow,runEff(joins[k].handler(step)));return joins=null,void(interrupt&&fail?setTimeout(function(){throw util.fromLeft(fail)},0):util.isLeft(step)&&rethrow&&setTimeout(function(){if(rethrow)throw util.fromLeft(step)},0));case SUSPENDED:status=CONTINUE;break;case PENDING:return}}function onComplete(join){return function(){if(status===COMPLETED)return rethrow=rethrow&&join.rethrow,join.handler(step)(),function(){};var jid=joinId++;return(joins=joins||{})[jid]=join,function(){null!==joins&&delete joins[jid]}}}return{kill:function(error,cb){return function(){if(status===COMPLETED)return cb(util.right(void 0))(),function(){};var canceler=onComplete({rethrow:!1,handler:function(){return cb(util.right(void 0))}})();switch(status){case SUSPENDED:interrupt=util.left(error),status=COMPLETED,step=interrupt,run(runTick);break;case PENDING:null===interrupt&&(interrupt=util.left(error)),0===bracketCount&&(status===PENDING&&(attempts=new Aff(CONS,new Aff(FINALIZER,step(error)),attempts,interrupt)),status=RETURN,fail=step=null,run(++runTick));break;default:null===interrupt&&(interrupt=util.left(error)),0===bracketCount&&(status=RETURN,fail=step=null)}return canceler}},join:function(cb){return function(){var canceler=onComplete({rethrow:!1,handler:cb})();return status===SUSPENDED&&run(runTick),canceler}},onComplete:onComplete,isSuspended:function(){return status===SUSPENDED},run:function(){status===SUSPENDED&&(Scheduler.isDraining()?run(runTick):Scheduler.enqueue(function(){run(runTick)}))}}}function runPar(util,supervisor,par,cb){var fiberId=0,fibers={},killId=0,kills={},early=new Error("[ParAff] Early exit"),interrupt=null,root=EMPTY;function kill(error,par,cb){var tmp,kid,step=par,head=null,tail=null,count=0,kills={};loop:for(;;)switch(tmp=null,step.tag){case FORKED:if(step._3===EMPTY&&(tmp=fibers[step._1],kills[count++]=tmp.kill(error,function(result){return function(){0===--count&&cb(result)()}})),null===head)break loop;step=head._2,null===tail?head=null:(head=tail._1,tail=tail._2);break;case MAP:step=step._2;break;case APPLY:case ALT:head&&(tail=new Aff(CONS,head,tail)),step=(head=step)._1}if(0===count)cb(util.right(void 0))();else for(kid=0,tmp=count;kid<tmp;kid++)kills[kid]=kills[kid]();return kills}function resolve(fiber){return function(result){return function(){delete fibers[fiber._1],function join(result,head,tail){var fail,step,lhs,rhs,tmp,kid;for(util.isLeft(result)?(fail=result,step=null):(step=result,fail=null);;){if((kid=tmp=rhs=lhs=null)!==interrupt)return;if(null===head)return void cb(fail||step)();if(head._3!==EMPTY)return;switch(head.tag){case MAP:null===fail?(head._3=util.right(head._1(util.fromRight(step))),step=head._3):head._3=fail;break;case APPLY:if(lhs=head._1._3,rhs=head._2._3,fail){if(head._3=fail,tmp=!0,kid=killId++,kills[kid]=kill(early,fail===lhs?head._2:head._1,function(){return function(){delete kills[kid],tmp?tmp=!1:null===tail?join(step,null,null):join(step,tail._1,tail._2)}}),tmp)return void(tmp=!1)}else{if(lhs===EMPTY||rhs===EMPTY)return;step=util.right(util.fromRight(lhs)(util.fromRight(rhs))),head._3=step}break;case ALT:if(lhs=head._1._3,rhs=head._2._3,lhs===EMPTY&&util.isLeft(rhs)||rhs===EMPTY&&util.isLeft(lhs))return;if(lhs!==EMPTY&&util.isLeft(lhs)&&rhs!==EMPTY&&util.isLeft(rhs))fail=step===lhs?rhs:lhs,step=null,head._3=fail;else if(head._3=step,tmp=!0,kid=killId++,kills[kid]=kill(early,step===lhs?head._2:head._1,function(){return function(){delete kills[kid],tmp?tmp=!1:null===tail?join(step,null,null):join(step,tail._1,tail._2)}}),tmp)return void(tmp=!1)}null===tail?head=null:(head=tail._1,tail=tail._2)}}(fiber._3=result,fiber._2._1,fiber._2._2)}}}return function(){var tmp,fid,status=CONTINUE,step=par,head=null,tail=null;loop:for(;;)switch(fid=tmp=null,status){case CONTINUE:switch(step.tag){case MAP:head&&(tail=new Aff(CONS,head,tail)),head=new Aff(MAP,step._1,EMPTY,EMPTY),step=step._2;break;case APPLY:head&&(tail=new Aff(CONS,head,tail)),head=new Aff(APPLY,EMPTY,step._2,EMPTY),step=step._1;break;case ALT:head&&(tail=new Aff(CONS,head,tail)),head=new Aff(ALT,EMPTY,step._2,EMPTY),step=step._1;break;default:fid=fiberId++,status=RETURN,tmp=step,step=new Aff(FORKED,fid,new Aff(CONS,head,tail),EMPTY),(tmp=Fiber(util,supervisor,tmp)).onComplete({rethrow:!1,handler:resolve(step)})(),fibers[fid]=tmp,supervisor&&supervisor.register(tmp)}break;case RETURN:if(null===head)break loop;head._1===EMPTY?(head._1=step,status=CONTINUE,step=head._2,head._2=EMPTY):(head._2=step,step=head,null===tail?head=null:(head=tail._1,tail=tail._2))}for(root=step,fid=0;fid<fiberId;fid++)fibers[fid].run()}(),function(killError){return new Aff(ASYNC,function(killCb){return function(){return function(error,cb){var innerKills;for(var kid in interrupt=util.left(error),kills)if(kills.hasOwnProperty(kid))for(kid in innerKills=kills[kid])innerKills.hasOwnProperty(kid)&&innerKills[kid]();kills=null;var newKills=kill(error,root,cb);return function(killError){return new Aff(ASYNC,function(killCb){return function(){for(var kid in newKills)newKills.hasOwnProperty(kid)&&newKills[kid]();return nonCanceler}})}}(killError,killCb)}})}}function sequential(util,supervisor,par){return new Aff(ASYNC,function(cb){return function(){return runPar(util,supervisor,par,cb)}})}return Aff.EMPTY=EMPTY,Aff.Pure=AffCtr(PURE),Aff.Throw=AffCtr(THROW),Aff.Catch=AffCtr(CATCH),Aff.Sync=AffCtr(SYNC),Aff.Async=AffCtr(ASYNC),Aff.Bind=AffCtr(BIND),Aff.Bracket=AffCtr(BRACKET),Aff.Fork=AffCtr(FORK),Aff.Seq=AffCtr(SEQ),Aff.ParMap=AffCtr(MAP),Aff.ParApply=AffCtr(APPLY),Aff.ParAlt=AffCtr(ALT),Aff.Fiber=Fiber,Aff.Supervisor=function(util){var fibers={},fiberId=0,count=0;return{register:function(fiber){var fid=fiberId++;fiber.onComplete({rethrow:!0,handler:function(result){return function(){count--,delete fibers[fid]}}}),fibers[fid]=fiber,count++},isEmpty:function(){return 0===count},killAll:function(killError,cb){return function(){var killCount=0,kills={};function kill(fid){kills[fid]=fibers[fid].kill(killError,function(result){return function(){delete kills[fid],killCount--,util.isLeft(result)&&util.fromLeft(result)&&setTimeout(function(){throw util.fromLeft(result)},0),0===killCount&&cb()}})()}for(var k in fibers)fibers.hasOwnProperty(k)&&(killCount++,kill(k));return fibers={},count=fiberId=0,function(error){return new Aff(SYNC,function(){for(var k in kills)kills.hasOwnProperty(k)&&kills[k]()})}}}}},Aff.Scheduler=Scheduler,Aff.nonCanceler=nonCanceler,Aff}();exports._pure=Aff.Pure,exports._throwError=Aff.Throw,exports._catchError=function(aff){return function(k){return Aff.Catch(aff,k)}},exports._map=function(f){return function(aff){return aff.tag===Aff.Pure.tag?Aff.Pure(f(aff._1)):Aff.Bind(aff,function(value){return Aff.Pure(f(value))})}},exports._bind=function(aff){return function(k){return Aff.Bind(aff,k)}},exports._fork=function(immediate){return function(aff){return Aff.Fork(immediate,aff)}},exports._liftEff=Aff.Sync,exports._parAffMap=function(f){return function(aff){return Aff.ParMap(f,aff)}},exports._parAffApply=function(aff1){return function(aff2){return Aff.ParApply(aff1,aff2)}},exports.makeAff=Aff.Async,exports._makeFiber=function(util,aff){return function(){return Aff.Fiber(util,null,aff)}},exports._sequential=Aff.Seq}(PS["Control.Monad.Aff"]=PS["Control.Monad.Aff"]||{}),function(exports){"use strict";exports.error=function(msg){return new Error(msg)},exports.message=function(e){return e.message},exports.throwException=function(e){return function(){throw e}},exports.catchException=function(c){return function(t){return function(){try{return t()}catch(e){return e instanceof Error||"[object Error]"===Object.prototype.toString.call(e)?c(e)():c(new Error(e.toString()))()}}}}}(PS["Control.Monad.Eff.Exception"]=PS["Control.Monad.Eff.Exception"]||{}),function(exports){"use strict";var $foreign=PS["Control.Monad.Eff.Exception"],Control_Applicative=PS["Control.Applicative"],Control_Monad_Eff=PS["Control.Monad.Eff"],Data_Either=(PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Functor=PS["Data.Functor"];PS["Data.Maybe"],PS["Data.Show"],PS.Prelude;exports.throw=function($1){return $foreign.throwException($foreign.error($1))},exports.try=function(action){return $foreign.catchException(function($0){return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Either.Left.create($0))})(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.Right.create)(action))},exports.error=$foreign.error,exports.message=$foreign.message,exports.throwException=$foreign.throwException}(PS["Control.Monad.Eff.Exception"]=PS["Control.Monad.Eff.Exception"]||{}),function(exports){"use strict";(PS["Data.Generic"]=PS["Data.Generic"]||{}).zipAll=function(f){return function(xs){return function(ys){for(var l=xs.length<ys.length?xs.length:ys.length,i=0;i<l;i++)if(!f(xs[i])(ys[i]))return!1;return!0}}}}(),function(exports){"use strict";exports.range=function(start){return function(end){for(var step=end<start?-1:1,result=new Array(step*(end-start)+1),i=start,n=0;i!==end;)result[n++]=i,i+=step;return result[n]=i,result}};exports.replicate="function"==typeof Array.prototype.fill?function(count){return function(value){return count<1?[]:new Array(count).fill(value)}}:replicatePolyfill,exports.fromFoldableImpl=function(){function Cons(head,tail){this.head=head,this.tail=tail}var emptyList={};function curryCons(head){return function(tail){return new Cons(head,tail)}}return function(foldr){return function(xs){return function(list){for(var result=[],count=0,xs=list;xs!==emptyList;)result[count++]=xs.head,xs=xs.tail;return result}(foldr(curryCons)(emptyList)(xs))}}}(),exports.length=function(xs){return xs.length},exports.cons=function(e){return function(l){return[e].concat(l)}},exports.snoc=function(l){return function(e){var l1=l.slice();return l1.push(e),l1}},exports["uncons'"]=function(empty){return function(next){return function(xs){return 0===xs.length?empty({}):next(xs[0])(xs.slice(1))}}},exports.indexImpl=function(just){return function(nothing){return function(xs){return function(i){return i<0||i>=xs.length?nothing:just(xs[i])}}}},exports._updateAt=function(just){return function(nothing){return function(i){return function(a){return function(l){if(i<0||i>=l.length)return nothing;var l1=l.slice();return l1[i]=a,just(l1)}}}}},exports.reverse=function(l){return l.slice().reverse()},exports.concat=function(xss){if(xss.length<=1e4)return Array.prototype.concat.apply([],xss);for(var result=[],i=0,l=xss.length;i<l;i++)for(var xs=xss[i],j=0,m=xs.length;j<m;j++)result.push(xs[j]);return result},exports.filter=function(f){return function(xs){return xs.filter(f)}},exports.sortImpl=function(f){return function(l){return l.slice().sort(function(x,y){return f(x)(y)})}},exports.slice=function(s){return function(e){return function(l){return l.slice(s,e)}}},exports.zipWith=function(f){return function(xs){return function(ys){for(var l=xs.length<ys.length?xs.length:ys.length,result=new Array(l),i=0;i<l;i++)result[i]=f(xs[i])(ys[i]);return result}}},exports.unsafeIndexImpl=function(xs){return function(n){return xs[n]}}}(PS["Data.Array"]=PS["Data.Array"]||{}),function(exports){"use strict";var $foreign=PS["Data.Array"],Control_Bind=(PS["Control.Alt"],PS["Control.Alternative"],PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"]),Control_Category=PS["Control.Category"],Data_Boolean=(PS["Control.Lazy"],PS["Control.Monad.Eff"],PS["Control.Monad.Rec.Class"],PS["Control.Monad.ST"],PS["Control.Semigroupoid"],PS["Data.Array.ST"],PS["Data.Array.ST.Iterator"],PS["Data.Boolean"]),Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Maybe=(PS["Data.Functor"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Ord=(PS["Data.NonEmpty"],PS["Data.Ord"]),Data_Ordering=PS["Data.Ordering"],Data_Traversable=(PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Traversable"]),Data_Tuple=PS["Data.Tuple"],Data_Unfoldable=PS["Data.Unfoldable"],zip=(PS["Partial.Unsafe"],PS.Prelude,$foreign.zipWith(Data_Tuple.Tuple.create)),updateAt=$foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value),unsafeIndex=function(dictPartial){return $foreign.unsafeIndexImpl},uncons=$foreign["uncons'"](Data_Function.const(Data_Maybe.Nothing.value))(function(x){return function(xs){return new Data_Maybe.Just({head:x,tail:xs})}}),tail=$foreign["uncons'"](Data_Function.const(Data_Maybe.Nothing.value))(function(v){return function(xs){return new Data_Maybe.Just(xs)}}),sortBy=function(comp){return function(xs){return $foreign.sortImpl(function(x){return function(y){var v=comp(x)(y);if(v instanceof Data_Ordering.GT)return 1;if(v instanceof Data_Ordering.EQ)return 0;if(v instanceof Data_Ordering.LT)return-1;throw new Error("Failed pattern match at Data.Array line 698, column 15 - line 703, column 1: "+[v.constructor.name])}})(xs)}},singleton=function(a){return[a]},nubBy=function(eq){return function(xs){var v=uncons(xs);if(v instanceof Data_Maybe.Just)return $foreign.cons(v.value0.head)(nubBy(eq)($foreign.filter(function(y){return!eq(v.value0.head)(y)})(v.value0.tail)));if(v instanceof Data_Maybe.Nothing)return[];throw new Error("Failed pattern match at Data.Array line 888, column 3 - line 890, column 18: "+[v.constructor.name])}},index=$foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value),span=function(p){return function(arr){var breakIndex=function($copy_i){var $tco_result,$tco_done=!1;function $tco_loop(i){var v=index(arr)(i);if(v instanceof Data_Maybe.Just)return p(v.value0)?void($copy_i=i+1|0):($tco_done=!0,new Data_Maybe.Just(i));if(v instanceof Data_Maybe.Nothing)return $tco_done=!0,Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Array line 830, column 5 - line 832, column 25: "+[v.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($copy_i);return $tco_result}(0);if(breakIndex instanceof Data_Maybe.Just&&0===breakIndex.value0)return{init:[],rest:arr};if(breakIndex instanceof Data_Maybe.Just)return{init:$foreign.slice(0)(breakIndex.value0)(arr),rest:$foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)};if(breakIndex instanceof Data_Maybe.Nothing)return{init:arr,rest:[]};throw new Error("Failed pattern match at Data.Array line 817, column 3 - line 823, column 30: "+[breakIndex.constructor.name])}},concatMap=Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray)),mapMaybe=function(f){return concatMap(function($94){return Data_Maybe.maybe([])(singleton)(f($94))})},catMaybes=mapMaybe(Control_Category.id(Control_Category.categoryFn));exports.fromFoldable=function(dictFoldable){return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable))},exports.toUnfoldable=function(dictUnfoldable){return function(xs){var len=$foreign.length(xs);return Data_Unfoldable.unfoldr(dictUnfoldable)(function(i){if(i<len)return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i),i+1|0));if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Array line 139, column 3 - line 141, column 26: "+[i.constructor.name])})(0)}},exports.singleton=singleton,exports.null=function(xs){return 0===$foreign.length(xs)},exports.head=function(xs){return index(xs)(0)},exports.last=function(xs){return index(xs)($foreign.length(xs)-1|0)},exports.tail=tail,exports.uncons=uncons,exports.index=index,exports.updateAt=updateAt,exports.concatMap=concatMap,exports.mapMaybe=mapMaybe,exports.catMaybes=catMaybes,exports.sort=function(dictOrd){return function(xs){return sortBy(Data_Ord.compare(dictOrd))(xs)}},exports.sortBy=sortBy,exports.dropWhile=function(p){return function(xs){return span(p)(xs).rest}},exports.span=span,exports.nub=function(dictEq){return nubBy(Data_Eq.eq(dictEq))},exports.nubBy=nubBy,exports.zipWithA=function(dictApplicative){return function(f){return function(xs){return function(ys){return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys))}}}},exports.zip=zip,exports.unsafeIndex=unsafeIndex,exports.range=$foreign.range,exports.replicate=$foreign.replicate,exports.length=$foreign.length,exports.cons=$foreign.cons,exports.snoc=$foreign.snoc,exports.reverse=$foreign.reverse,exports.concat=$foreign.concat,exports.filter=$foreign.filter,exports.slice=$foreign.slice,exports.zipWith=$foreign.zipWith}(PS["Data.Array"]=PS["Data.Array"]||{}),function(exports){"use strict";exports._charAt=function(just){return function(nothing){return function(i){return function(s){return 0<=i&&i<s.length?just(s.charAt(i)):nothing}}}},exports.singleton=function(c){return c},exports._toChar=function(just){return function(nothing){return function(s){return 1===s.length?just(s):nothing}}},exports.fromCharArray=function(a){return a.join("")},exports._indexOf=function(just){return function(nothing){return function(x){return function(s){var i=s.indexOf(x);return-1===i?nothing:just(i)}}}},exports["_indexOf'"]=function(just){return function(nothing){return function(x){return function(startAt){return function(s){if(startAt<0||startAt>s.length)return nothing;var i=s.indexOf(x,startAt);return-1===i?nothing:just(i)}}}}},exports._lastIndexOf=function(just){return function(nothing){return function(x){return function(s){var i=s.lastIndexOf(x);return-1===i?nothing:just(i)}}}},exports.length=function(s){return s.length},exports.replace=function(s1){return function(s2){return function(s3){return s3.replace(s1,s2)}}},exports.take=function(n){return function(s){return s.substr(0,n)}},exports.drop=function(n){return function(s){return s.substring(n)}},exports.split=function(sep){return function(s){return s.split(sep)}},exports.toCharArray=function(s){return s.split("")},exports.toLower=function(s){return s.toLowerCase()},exports.joinWith=function(s){return function(xs){return xs.join(s)}}}(PS["Data.String"]=PS["Data.String"]||{}),function(exports){"use strict";(PS["Data.String.Unsafe"]=PS["Data.String.Unsafe"]||{}).charAt=function(i){return function(s){if(0<=i&&i<s.length)return s.charAt(i);throw new Error("Data.String.Unsafe.charAt: Invalid index.")}}}(),function(exports){"use strict";var $foreign=PS["Data.String.Unsafe"];exports.charAt=$foreign.charAt}(PS["Data.String.Unsafe"]=PS["Data.String.Unsafe"]||{}),function(exports){"use strict";var $foreign=PS["Data.String"],Data_Maybe=(PS["Control.Semigroupoid"],PS["Data.Eq"],PS["Data.Function"],PS["Data.Maybe"]),Data_Newtype=PS["Data.Newtype"],Data_String_Unsafe=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.String.Unsafe"]),Pattern=(PS.Prelude,function(x){return x}),toChar=$foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value),newtypePattern=new Data_Newtype.Newtype(function(n){return n},Pattern),lastIndexOf=$foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value),indexOf$prime=$foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value),indexOf=$foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value),charAt=$foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);exports.Pattern=Pattern,exports.charAt=charAt,exports.toChar=toChar,exports.indexOf=indexOf,exports["indexOf'"]=indexOf$prime,exports.lastIndexOf=lastIndexOf,exports.null=function(s){return""===s},exports.uncons=function(v){return""===v?Data_Maybe.Nothing.value:new Data_Maybe.Just({head:Data_String_Unsafe.charAt(0)(v),tail:$foreign.drop(1)(v)})},exports.stripSuffix=function(v){return function(str){var v1=lastIndexOf(v)(str);return v1 instanceof Data_Maybe.Just&&v1.value0===($foreign.length(str)-$foreign.length(v)|0)?Data_Maybe.Just.create($foreign.take(v1.value0)(str)):Data_Maybe.Nothing.value}},exports.newtypePattern=newtypePattern,exports.fromCharArray=$foreign.fromCharArray,exports.length=$foreign.length,exports.singleton=$foreign.singleton,exports.replace=$foreign.replace,exports.take=$foreign.take,exports.drop=$foreign.drop,exports.split=$foreign.split,exports.toCharArray=$foreign.toCharArray,exports.toLower=$foreign.toLower,exports.joinWith=$foreign.joinWith}(PS["Data.String"]=PS["Data.String"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Monad"],PS["Data.BooleanAlgebra"],PS["Data.Bounded"],PS["Data.CommutativeRing"],PS["Data.Eq"],PS["Data.Functor"],PS["Data.HeytingAlgebra"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS.Prelude;var $$Proxy=function(){function $$Proxy(){}return $$Proxy.value=new $$Proxy,$$Proxy}();exports.Proxy=$$Proxy}(PS["Type.Proxy"]=PS["Type.Proxy"]||{}),function(exports){"use strict";var $foreign=PS["Data.Generic"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Either=(PS["Data.Boolean"],PS["Data.Either"]),Data_Eq=PS["Data.Eq"],Data_Functor=(PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"]),Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Identity"],PS["Data.List.Types"],PS["Data.Maybe"]),Data_Ord=(PS["Data.Monoid"],PS["Data.NonEmpty"],PS["Data.Ord"]),Data_Traversable=(PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.String"],PS["Data.Traversable"]),Data_Tuple=PS["Data.Tuple"],Data_Unit=PS["Data.Unit"],Type_Proxy=(PS["Data.Void"],PS.Prelude,PS["Type.Proxy"]),SProd=function(){function SProd(value0,value1){this.value0=value0,this.value1=value1}return SProd.create=function(value0){return function(value1){return new SProd(value0,value1)}},SProd}(),SRecord=function(){function SRecord(value0){this.value0=value0}return SRecord.create=function(value0){return new SRecord(value0)},SRecord}(),SNumber=function(){function SNumber(value0){this.value0=value0}return SNumber.create=function(value0){return new SNumber(value0)},SNumber}(),SBoolean=function(){function SBoolean(value0){this.value0=value0}return SBoolean.create=function(value0){return new SBoolean(value0)},SBoolean}(),SInt=function(){function SInt(value0){this.value0=value0}return SInt.create=function(value0){return new SInt(value0)},SInt}(),SString=function(){function SString(value0){this.value0=value0}return SString.create=function(value0){return new SString(value0)},SString}(),SChar=function(){function SChar(value0){this.value0=value0}return SChar.create=function(value0){return new SChar(value0)},SChar}(),SArray=function(){function SArray(value0){this.value0=value0}return SArray.create=function(value0){return new SArray(value0)},SArray}(),SUnit=function(){function SUnit(){}return SUnit.value=new SUnit,SUnit}(),SigProd=function(){function SigProd(value0,value1){this.value0=value0,this.value1=value1}return SigProd.create=function(value0){return function(value1){return new SigProd(value0,value1)}},SigProd}(),SigRecord=function(){function SigRecord(value0){this.value0=value0}return SigRecord.create=function(value0){return new SigRecord(value0)},SigRecord}(),SigNumber=function(){function SigNumber(){}return SigNumber.value=new SigNumber,SigNumber}(),SigBoolean=function(){function SigBoolean(){}return SigBoolean.value=new SigBoolean,SigBoolean}(),SigInt=function(){function SigInt(){}return SigInt.value=new SigInt,SigInt}(),SigString=function(){function SigString(){}return SigString.value=new SigString,SigString}(),SigChar=function(){function SigChar(){}return SigChar.value=new SigChar,SigChar}(),SigArray=function(){function SigArray(value0){this.value0=value0}return SigArray.create=function(value0){return new SigArray(value0)},SigArray}(),SigUnit=function(){function SigUnit(){}return SigUnit.value=new SigUnit,SigUnit}(),Generic=function(fromSpine,toSignature,toSpine){this.fromSpine=fromSpine,this.toSignature=toSignature,this.toSpine=toSpine},toSpine=function(dict){return dict.toSpine},toSignature=function(dict){return dict.toSignature},genericUnit=new Generic(function(v){return v instanceof SUnit?new Data_Maybe.Just(Data_Unit.unit):Data_Maybe.Nothing.value},function(v){return SigUnit.value},function(v){return SUnit.value}),genericString=new Generic(function(v){return v instanceof SString?new Data_Maybe.Just(v.value0):Data_Maybe.Nothing.value},function(v){return SigString.value},SString.create),genericNumber=new Generic(function(v){return v instanceof SNumber?new Data_Maybe.Just(v.value0):Data_Maybe.Nothing.value},function(v){return SigNumber.value},SNumber.create),genericInt=new Generic(function(v){return v instanceof SInt?new Data_Maybe.Just(v.value0):Data_Maybe.Nothing.value},function(v){return SigInt.value},SInt.create),genericBool=new Generic(function(v){return v instanceof SBoolean?new Data_Maybe.Just(v.value0):Data_Maybe.Nothing.value},function(v){return SigBoolean.value},SBoolean.create),fromSpine=function(dict){return dict.fromSpine},force=function(f){return f(Data_Unit.unit)},eqThunk=function(dictEq){return function(x){return function(y){return Data_Eq.eq(dictEq)(force(x))(force(y))}}},eqGenericSpine=new Data_Eq.Eq(function(v){return function(v1){return v instanceof SProd&&v1 instanceof SProd?v.value0===v1.value0&&Data_Array.length(v.value1)===Data_Array.length(v1.value1)&&$foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1):v instanceof SRecord&&v1 instanceof SRecord?(dictEq=eqGenericSpine,arr1=v.value0,arr2=v1.value0,labelCompare=function(r1){return function(r2){return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel)}},sorted1=Data_Array.sortBy(labelCompare)(arr1),sorted2=Data_Array.sortBy(labelCompare)(arr2),Data_Array.length(arr1)===Data_Array.length(arr2)&&$foreign.zipAll(function(x){return function(y){return x.recLabel===y.recLabel&&Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue))}})(sorted1)(sorted2)):v instanceof SNumber&&v1 instanceof SNumber?v.value0===v1.value0:v instanceof SBoolean&&v1 instanceof SBoolean?v.value0===v1.value0:v instanceof SInt&&v1 instanceof SInt?v.value0===v1.value0:v instanceof SString&&v1 instanceof SString?v.value0===v1.value0:v instanceof SChar&&v1 instanceof SChar?v.value0===v1.value0:v instanceof SArray&&v1 instanceof SArray?Data_Array.length(v.value0)===Data_Array.length(v1.value0)&&$foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0):v instanceof SUnit&&v1 instanceof SUnit;var arr2,labelCompare,sorted1,sorted2,arr1,dictEq}});exports.Generic=Generic,exports.toSpine=toSpine,exports.toSignature=toSignature,exports.fromSpine=fromSpine,exports.SProd=SProd,exports.SRecord=SRecord,exports.SNumber=SNumber,exports.SBoolean=SBoolean,exports.SInt=SInt,exports.SString=SString,exports.SChar=SChar,exports.SArray=SArray,exports.SUnit=SUnit,exports.SigProd=SigProd,exports.SigRecord=SigRecord,exports.SigNumber=SigNumber,exports.SigBoolean=SigBoolean,exports.SigInt=SigInt,exports.SigString=SigString,exports.SigChar=SigChar,exports.SigArray=SigArray,exports.SigUnit=SigUnit,exports.genericNumber=genericNumber,exports.genericInt=genericInt,exports.genericString=genericString,exports.genericBool=genericBool,exports.genericArray=function(dictGeneric){return new Generic(function(v){return v instanceof SArray?Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function($310){return fromSpine(dictGeneric)(force($310))})(v.value0):Data_Maybe.Nothing.value},function(x){return new SigArray(function(v){return toSignature(dictGeneric)(Type_Proxy.Proxy.value)})},function($311){return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function(x){return function(v){return toSpine(dictGeneric)(x)}})($311))})},exports.genericUnit=genericUnit,exports.genericTuple=function(dictGeneric){return function(dictGeneric1){return new Generic(function(v){return v instanceof SProd&&"Data.Tuple.Tuple"===v.value0&&2===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v.value1[0]))))(fromSpine(dictGeneric1)(force(v.value1[1]))):Data_Maybe.Nothing.value},function(x){return new SigProd("Data.Tuple.Tuple",[{sigConstructor:"Data.Tuple.Tuple",sigValues:[function(v){return toSignature(dictGeneric)(Type_Proxy.Proxy.value)},function(v){return toSignature(dictGeneric1)(Type_Proxy.Proxy.value)}]}])},function(v){return new SProd("Data.Tuple.Tuple",[function(v1){return toSpine(dictGeneric)(v.value0)},function(v1){return toSpine(dictGeneric1)(v.value1)}])})}},exports.genericMaybe=function(dictGeneric){return new Generic(function(v){return v instanceof SProd&&"Data.Maybe.Just"===v.value0&&1===v.value1.length?Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v.value1[0]))):v instanceof SProd&&"Data.Maybe.Nothing"===v.value0&&0===v.value1.length?Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value):Data_Maybe.Nothing.value},function(x){return new SigProd("Data.Maybe.Maybe",[{sigConstructor:"Data.Maybe.Just",sigValues:[function(v){return toSignature(dictGeneric)(Type_Proxy.Proxy.value)}]},{sigConstructor:"Data.Maybe.Nothing",sigValues:[]}])},function(v){if(v instanceof Data_Maybe.Just)return new SProd("Data.Maybe.Just",[function(v1){return toSpine(dictGeneric)(v.value0)}]);if(v instanceof Data_Maybe.Nothing)return new SProd("Data.Maybe.Nothing",[]);throw new Error("Failed pattern match at Data.Generic line 160, column 1 - line 160, column 56: "+[v.constructor.name])})},exports.genericEither=function(dictGeneric){return function(dictGeneric1){return new Generic(function(v){return v instanceof SProd&&"Data.Either.Left"===v.value0&&1===v.value1.length?Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v.value1[0]))):v instanceof SProd&&"Data.Either.Right"===v.value0&&1===v.value1.length?Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v.value1[0]))):Data_Maybe.Nothing.value},function(x){return new SigProd("Data.Either.Either",[{sigConstructor:"Data.Either.Left",sigValues:[function(v){return toSignature(dictGeneric)(Type_Proxy.Proxy.value)}]},{sigConstructor:"Data.Either.Right",sigValues:[function(v){return toSignature(dictGeneric1)(Type_Proxy.Proxy.value)}]}])},function(v){if(v instanceof Data_Either.Left)return new SProd("Data.Either.Left",[function(v1){return toSpine(dictGeneric)(v.value0)}]);if(v instanceof Data_Either.Right)return new SProd("Data.Either.Right",[function(v1){return toSpine(dictGeneric1)(v.value0)}]);throw new Error("Failed pattern match at Data.Generic line 180, column 1 - line 180, column 73: "+[v.constructor.name])})}},exports.eqGenericSpine=eqGenericSpine}(PS["Data.Generic"]=PS["Data.Generic"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_Eq=(PS["Control.Category"],PS["Control.Semigroupoid"],PS["Data.Eq"]),Data_Generic=(PS["Data.EuclideanRing"],PS["Data.Generic"]),Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Ord=PS["Data.Ord"],Data_Ring=PS["Data.Ring"],Data_Semiring=(PS["Data.Semigroup"],PS["Data.Semiring"]),Data_Unit=(PS["Data.Show"],PS["Data.Unit"]),Seconds=(PS.Prelude,function(x){return x}),Minutes=function(x){return x},Milliseconds=function(x){return x},Hours=function(x){return x},Days=function(x){return x},Duration=function(fromDuration,toDuration){this.fromDuration=fromDuration,this.toDuration=toDuration},toDuration=function(dict){return dict.toDuration},semiringMinutes=Data_Semiring.semiringNumber,ringMinutes=Data_Ring.ringNumber,ordMinutes=Data_Ord.ordNumber,newtypeMinutes=new Data_Newtype.Newtype(function(n){return n},Minutes),newtypeMilliseconds=new Data_Newtype.Newtype(function(n){return n},Milliseconds),newtypeHours=new Data_Newtype.Newtype(function(n){return n},Hours),newtypeDays=new Data_Newtype.Newtype(function(n){return n},Days),genericSeconds=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Time.Duration.Seconds"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Seconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Time.Duration.Seconds",[{sigConstructor:"Data.Time.Duration.Seconds",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Time.Duration.Seconds",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericNumber)(v)}])}),genericMinutes=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Time.Duration.Minutes"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minutes))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Time.Duration.Minutes",[{sigConstructor:"Data.Time.Duration.Minutes",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Time.Duration.Minutes",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericNumber)(v)}])}),fromDuration=function(dict){return dict.fromDuration},eqSeconds=Data_Eq.eqNumber,durationMinutes=new Duration(Data_Newtype.over(newtypeMinutes)(newtypeMilliseconds)(Minutes)(function(v){return 6e4*v}),Data_Newtype.over(newtypeMilliseconds)(newtypeMinutes)(Milliseconds)(function(v){return v/6e4})),durationHours=new Duration(Data_Newtype.over(newtypeHours)(newtypeMilliseconds)(Hours)(function(v){return 36e5*v}),Data_Newtype.over(newtypeMilliseconds)(newtypeHours)(Milliseconds)(function(v){return v/36e5})),durationDays=new Duration(Data_Newtype.over(newtypeDays)(newtypeMilliseconds)(Days)(function(v){return 864e5*v}),Data_Newtype.over(newtypeMilliseconds)(newtypeDays)(Milliseconds)(function(v){return v/864e5}));exports.fromDuration=fromDuration,exports.toDuration=toDuration,exports.Milliseconds=Milliseconds,exports.Seconds=Seconds,exports.Minutes=Minutes,exports.Hours=Hours,exports.Days=Days,exports.Duration=Duration,exports.convertDuration=function(dictDuration){return function(dictDuration1){return function($80){return toDuration(dictDuration1)(fromDuration(dictDuration)($80))}}},exports.newtypeMilliseconds=newtypeMilliseconds,exports.genericSeconds=genericSeconds,exports.eqSeconds=eqSeconds,exports.newtypeMinutes=newtypeMinutes,exports.genericMinutes=genericMinutes,exports.ordMinutes=ordMinutes,exports.semiringMinutes=semiringMinutes,exports.ringMinutes=ringMinutes,exports.newtypeHours=newtypeHours,exports.newtypeDays=newtypeDays,exports.durationMinutes=durationMinutes,exports.durationHours=durationHours,exports.durationDays=durationDays}(PS["Data.Time.Duration"]=PS["Data.Time.Duration"]||{}),function(exports){"use strict";var $foreign=PS["Control.Monad.Aff"],Control_Alt=PS["Control.Alt"],Control_Applicative=(PS["Control.Alternative"],PS["Control.Applicative"]),Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad=PS["Control.Monad"],Control_Monad_Eff=PS["Control.Monad.Eff"],Control_Monad_Eff_Class=PS["Control.Monad.Eff.Class"],Control_Monad_Eff_Unsafe=(PS["Control.Monad.Eff.Exception"],PS["Control.Monad.Eff.Unsafe"]),Control_Monad_Error_Class=PS["Control.Monad.Error.Class"],Control_Monad_Rec_Class=PS["Control.Monad.Rec.Class"],Control_Parallel=PS["Control.Parallel"],Control_Parallel_Class=PS["Control.Parallel.Class"],Data_Either=(PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=(PS["Data.Function.Uncurried"],PS["Data.Functor"]),Data_Monoid=PS["Data.Monoid"],Data_Semigroup=(PS["Data.Newtype"],PS["Data.Semigroup"]),Data_Unit=(PS["Data.Time.Duration"],PS["Data.Unit"]),Partial_Unsafe=PS["Partial.Unsafe"],Unsafe_Coerce=(PS.Prelude,PS["Unsafe.Coerce"]),Canceler=function(x){return x},suspendAff=$foreign._fork(!1),functorParAff=new Data_Functor.Functor($foreign._parAffMap),functorAff=new Data_Functor.Functor($foreign._map),forkAff=$foreign._fork(!0),ffiUtil={isLeft:function(v){if(v instanceof Data_Either.Left)return!0;if(v instanceof Data_Either.Right)return!1;throw new Error("Failed pattern match at Control.Monad.Aff line 388, column 12 - line 390, column 20: "+[v.constructor.name])},fromLeft:function(v){if(v instanceof Data_Either.Left)return v.value0;if(v instanceof Data_Either.Right)return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");throw new Error("Failed pattern match at Control.Monad.Aff line 393, column 20 - line 397, column 3: "+[v.constructor.name])},fromRight:function(v){if(v instanceof Data_Either.Right)return v.value0;if(v instanceof Data_Either.Left)return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");throw new Error("Failed pattern match at Control.Monad.Aff line 398, column 21 - line 400, column 31: "+[v.constructor.name])},left:Data_Either.Left.create,right:Data_Either.Right.create},makeFiber=function(aff){return $foreign._makeFiber(ffiUtil,aff)},launchAff=function(aff){return function(){var v=makeFiber(aff)();return v.run(),v}},applyParAff=new Control_Apply.Apply(function(){return functorParAff},$foreign._parAffApply),monadAff=new Control_Monad.Monad(function(){return applicativeAff},function(){return bindAff}),bindAff=new Control_Bind.Bind(function(){return applyAff},$foreign._bind),applyAff=new Control_Apply.Apply(function(){return functorAff},Control_Monad.ap(monadAff)),applicativeAff=new Control_Applicative.Applicative(function(){return applyAff},$foreign._pure),monadEffAff=new Control_Monad_Eff_Class.MonadEff(function(){return monadAff},$foreign._liftEff),effCanceler=function($50){return Canceler(Data_Function.const(Control_Monad_Eff_Class.liftEff(monadEffAff)($50)))},joinFiber=function(v){return $foreign.makeAff(function(k){return Data_Functor.map(Control_Monad_Eff.functorEff)(effCanceler)(v.join(k))})},functorFiber=new Data_Functor.Functor(function(f){return function(t){return Control_Monad_Eff_Unsafe.unsafePerformEff(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))))}}),monadThrowAff=new Control_Monad_Error_Class.MonadThrow(function(){return monadAff},$foreign._throwError),monadErrorAff=new Control_Monad_Error_Class.MonadError(function(){return monadThrowAff},$foreign._catchError),runAff=function(k){return function(aff){return launchAff(Control_Bind.bindFlipped(bindAff)(function($52){return Control_Monad_Eff_Class.liftEff(monadEffAff)(k($52))})(Control_Monad_Error_Class.try(monadErrorAff)(aff)))}},parallelAff=new Control_Parallel_Class.Parallel(function(){return applicativeParAff},function(){return monadAff},Unsafe_Coerce.unsafeCoerce,$foreign._sequential),applicativeParAff=new Control_Applicative.Applicative(function(){return applyParAff},function($54){return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($54))}),semigroupCanceler=new Data_Semigroup.Semigroup(function(v){return function(v1){return function(err){return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([v(err),v1(err)])}}}),monadRecAff=new Control_Monad_Rec_Class.MonadRec(function(){return monadAff},function(k){var go=function(a){return Control_Bind.bind(bindAff)(k(a))(function(v){if(v instanceof Control_Monad_Rec_Class.Done)return Control_Applicative.pure(applicativeAff)(v.value0);if(v instanceof Control_Monad_Rec_Class.Loop)return go(v.value0);throw new Error("Failed pattern match at Control.Monad.Aff line 100, column 7 - line 102, column 22: "+[v.constructor.name])})};return go}),nonCanceler=Data_Function.const(Control_Applicative.pure(applicativeAff)(Data_Unit.unit)),monoidCanceler=new Data_Monoid.Monoid(function(){return semigroupCanceler},nonCanceler),altAff=new Control_Alt.Alt(function(){return functorAff},function(a1){return function(a2){return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function.const(a2))}});exports.Canceler=Canceler,exports.launchAff=launchAff,exports.runAff=runAff,exports.runAff_=function(k){return function(aff){return Data_Functor.void(Control_Monad_Eff.functorEff)(runAff(k)(aff))}},exports.forkAff=forkAff,exports.suspendAff=suspendAff,exports["liftEff'"]=function($51){return Control_Monad_Eff_Class.liftEff(monadEffAff)(Control_Monad_Eff_Unsafe.unsafeCoerceEff($51))},exports.killFiber=function(e){return function(v){return Control_Bind.bind(bindAff)(Control_Monad_Eff_Class.liftEff(monadEffAff)(v.isSuspended))(function(v1){return v1?Control_Monad_Eff_Class.liftEff(monadEffAff)(Data_Functor.void(Control_Monad_Eff.functorEff)(v.kill(e,Data_Function.const(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))))):$foreign.makeAff(function(k){return Data_Functor.map(Control_Monad_Eff.functorEff)(effCanceler)(v.kill(e,k))})})}},exports.joinFiber=joinFiber,exports.nonCanceler=nonCanceler,exports.effCanceler=effCanceler,exports.functorAff=functorAff,exports.applyAff=applyAff,exports.applicativeAff=applicativeAff,exports.bindAff=bindAff,exports.monadAff=monadAff,exports.altAff=altAff,exports.monadRecAff=monadRecAff,exports.monadThrowAff=monadThrowAff,exports.monadErrorAff=monadErrorAff,exports.monadEffAff=monadEffAff,exports.functorParAff=functorParAff,exports.applyParAff=applyParAff,exports.applicativeParAff=applicativeParAff,exports.parallelAff=parallelAff,exports.functorFiber=functorFiber,exports.semigroupCanceler=semigroupCanceler,exports.monoidCanceler=monoidCanceler,exports.makeAff=$foreign.makeAff}(PS["Control.Monad.Aff"]=PS["Control.Monad.Aff"]||{}),function(exports){"use strict";var AVar=function(){function MutableQueue(){this.head=null,this.last=null,this.size=0}function MutableCell(queue,value){this.queue=queue,this.value=value,this.next=null,this.prev=null}function AVar(value){this.draining=!1,this.error=null,this.value=value,this.takes=new MutableQueue,this.reads=new MutableQueue,this.puts=new MutableQueue}var EMPTY={};function takeLast(queue){var cell;switch(queue.size){case 0:return null;case 1:cell=queue.head,queue.head=null;break;case 2:cell=queue.last,queue.head.next=null,queue.last=null;break;default:cell=queue.last,queue.last=cell.prev,queue.last.next=null}return cell.prev=null,cell.queue=null,queue.size--,cell.value}function takeHead(queue){var cell;switch(queue.size){case 0:return null;case 1:cell=queue.head,queue.head=null;break;case 2:cell=queue.head,queue.last.prev=null,queue.head=queue.last,queue.last=null;break;default:cell=queue.head,queue.head=cell.next,queue.head.prev=null}return cell.next=null,cell.queue=null,queue.size--,cell.value}function runEff(eff){try{eff()}catch(error){setTimeout(function(){throw error},0)}}return AVar.EMPTY=EMPTY,AVar.putLast=function(queue,value){var cell=new MutableCell(queue,value);switch(queue.size){case 0:queue.head=cell;break;case 1:cell.prev=queue.head,queue.head.next=cell,queue.last=cell;break;default:cell.prev=queue.last,queue.last.next=cell,queue.last=cell}return queue.size++,cell},AVar.takeLast=takeLast,AVar.takeHead=takeHead,AVar.deleteCell=function(cell){null!==cell.queue&&(cell.queue.last!==cell?cell.queue.head!==cell?(cell.prev&&(cell.prev.next=cell.next),cell.next&&(cell.next.prev=cell.prev),cell.queue.size--,cell.queue=null,cell.value=null,cell.next=null,cell.prev=null):takeHead(cell.queue):takeLast(cell.queue))},AVar.drainVar=function(util,avar){if(!avar.draining){var p,r,t,value,rsize,ps=avar.puts,ts=avar.takes,rs=avar.reads;for(avar.draining=!0;;){if(t=r=p=null,value=avar.value,rsize=rs.size,null!==avar.error){for(value=util.left(avar.error);p=takeHead(ps);)runEff(p.cb(value));for(;r=takeHead(rs);)runEff(r(value));for(;t=takeHead(ts);)runEff(t(value));break}if(value===EMPTY&&(p=takeHead(ps))&&(avar.value=value=p.value),value!==EMPTY){for(t=takeHead(ts);rsize--&&(r=takeHead(rs));)runEff(r(util.right(value)));null!==t&&(avar.value=EMPTY,runEff(t(util.right(value))))}if(null!==p&&runEff(p.cb(util.right(void 0))),avar.value===EMPTY&&0===ps.size||avar.value!==EMPTY&&0===ts.size)break}avar.draining=!1}},AVar}();exports.makeEmptyVar=function(){return new AVar(AVar.EMPTY)},exports._killVar=function(util,error,avar){return function(){null===avar.error&&(avar.error=error,avar.value=AVar.EMPTY,AVar.drainVar(util,avar))}},exports._putVar=function(util,value,avar,cb){return function(){var cell=AVar.putLast(avar.puts,{cb:cb,value:value});return AVar.drainVar(util,avar),function(){AVar.deleteCell(cell)}}},exports._takeVar=function(util,avar,cb){return function(){var cell=AVar.putLast(avar.takes,cb);return AVar.drainVar(util,avar),function(){AVar.deleteCell(cell)}}}}(PS["Control.Monad.Eff.AVar"]=PS["Control.Monad.Eff.AVar"]||{}),function(exports){"use strict";var $foreign=PS["Control.Monad.Eff.AVar"],Data_Either=(PS["Control.Monad.Eff"],PS["Control.Monad.Eff.Exception"],PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Maybe=(PS["Data.Function.Uncurried"],PS["Data.Functor"],PS["Data.Maybe"]),Killed=(PS.Prelude,function(){function Killed(value0){this.value0=value0}return Killed.create=function(value0){return new Killed(value0)},Killed}()),Filled=function(){function Filled(value0){this.value0=value0}return Filled.create=function(value0){return new Filled(value0)},Filled}(),Empty=function(){function Empty(){}return Empty.value=new Empty,Empty}(),ffiUtil={left:Data_Either.Left.create,right:Data_Either.Right.create,nothing:Data_Maybe.Nothing.value,just:Data_Maybe.Just.create,killed:Killed.create,filled:Filled.create,empty:Empty.value};exports.Killed=Killed,exports.Filled=Filled,exports.Empty=Empty,exports.takeVar=function(avar){return function(cb){return $foreign._takeVar(ffiUtil,avar,cb)}},exports.putVar=function(value){return function(avar){return function(cb){return $foreign._putVar(ffiUtil,value,avar,cb)}}},exports.killVar=function(err){return function(avar){return $foreign._killVar(ffiUtil,err,avar)}},exports.makeEmptyVar=$foreign.makeEmptyVar}(PS["Control.Monad.Eff.AVar"]=PS["Control.Monad.Eff.AVar"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Bind"];var Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Eff_AVar=(PS["Control.Monad.Eff"],PS["Control.Monad.Eff.AVar"]),Control_Monad_Eff_Class=PS["Control.Monad.Eff.Class"],makeEmptyVar=(PS["Control.Monad.Eff.Exception"],PS["Control.Semigroupoid"],PS["Data.Maybe"],PS.Prelude,Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.makeEmptyVar));exports.makeEmptyVar=makeEmptyVar,exports.takeVar=function(avar){return Control_Monad_Aff.makeAff(function(k){return function(){var v=Control_Monad_Eff_AVar.takeVar(avar)(k)();return Control_Monad_Aff.effCanceler(v)}})},exports.putVar=function(value){return function(avar){return Control_Monad_Aff.makeAff(function(k){return function(){var v=Control_Monad_Eff_AVar.putVar(value)(avar)(k)();return Control_Monad_Aff.effCanceler(v)}})}},exports.killVar=function(error){return function($11){return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_AVar.killVar(error)($11))}}}(PS["Control.Monad.Aff.AVar"]=PS["Control.Monad.Aff.AVar"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"];var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Lazy=PS["Control.Lazy"],Control_Monad=PS["Control.Monad"],Control_Monad_State_Class=(PS["Control.Monad.Cont.Class"],PS["Control.Monad.Eff.Class"],PS["Control.Monad.Error.Class"],PS["Control.Monad.Reader.Class"],PS["Control.Monad.Rec.Class"],PS["Control.Monad.State.Class"]),Control_Monad_Trans_Class=PS["Control.Monad.Trans.Class"],Data_Functor=(PS["Control.Monad.Writer.Class"],PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Function"],PS["Data.Functor"]),Data_Tuple=(PS["Data.Newtype"],PS["Data.Tuple"]),Data_Unit=PS["Data.Unit"],StateT=(PS.Prelude,function(x){return x}),monadTransStateT=new Control_Monad_Trans_Class.MonadTrans(function(dictMonad){return function(m){return function(s){return Control_Bind.bind(dictMonad.Bind1())(m)(function(v){return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v,s))})}}}),lazyStateT=new Control_Lazy.Lazy(function(f){return function(s){return f(Data_Unit.unit)(s)}}),functorStateT=function(dictFunctor){return new Data_Functor.Functor(function(f){return function(v){return function(s){return Data_Functor.map(dictFunctor)(function(v1){return new Data_Tuple.Tuple(f(v1.value0),v1.value1)})(v(s))}}})},monadStateT=function(dictMonad){return new Control_Monad.Monad(function(){return applicativeStateT(dictMonad)},function(){return bindStateT(dictMonad)})},bindStateT=function(dictMonad){return new Control_Bind.Bind(function(){return applyStateT(dictMonad)},function(v){return function(f){return function(s){return Control_Bind.bind(dictMonad.Bind1())(v(s))(function(v1){return f(v1.value0)(v1.value1)})}}})},applyStateT=function(dictMonad){return new Control_Apply.Apply(function(){return functorStateT(dictMonad.Bind1().Apply0().Functor0())},Control_Monad.ap(monadStateT(dictMonad)))},applicativeStateT=function(dictMonad){return new Control_Applicative.Applicative(function(){return applyStateT(dictMonad)},function(a){return function(s){return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a,s))}})};exports.StateT=StateT,exports.runStateT=function(v){return v},exports.evalStateT=function(dictFunctor){return function(v){return function(s){return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s))}}},exports.mapStateT=function(f){return function(v){return function($108){return f(v($108))}}},exports.functorStateT=functorStateT,exports.applyStateT=applyStateT,exports.applicativeStateT=applicativeStateT,exports.bindStateT=bindStateT,exports.monadStateT=monadStateT,exports.monadTransStateT=monadTransStateT,exports.lazyStateT=lazyStateT,exports.monadStateStateT=function(dictMonad){return new Control_Monad_State_Class.MonadState(function(){return monadStateT(dictMonad)},function(f){return StateT(function($111){return Control_Applicative.pure(dictMonad.Applicative0())(f($111))})})}}(PS["Control.Monad.State.Trans"]=PS["Control.Monad.State.Trans"]||{}),function(exports){"use strict";var Control_Category=PS["Control.Category"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Except_Trans=(PS["Control.Monad.Cont.Trans"],PS["Control.Monad.Eff.Class"],PS["Control.Monad.Except.Trans"]),Control_Monad_Reader_Trans=(PS["Control.Monad.List.Trans"],PS["Control.Monad.Maybe.Trans"],PS["Control.Monad.RWS.Trans"],PS["Control.Monad.Reader.Trans"]),Control_Monad_Trans_Class=(PS["Control.Monad.State.Trans"],PS["Control.Monad.Trans.Class"]),MonadAff=(PS["Control.Monad.Writer.Trans"],PS["Control.Semigroupoid"],PS["Data.Monoid"],PS.Prelude,function(MonadEff0,liftAff){this.MonadEff0=MonadEff0,this.liftAff=liftAff}),monadAffAff=new MonadAff(function(){return Control_Monad_Aff.monadEffAff},Control_Category.id(Control_Category.categoryFn)),liftAff=function(dict){return dict.liftAff};exports.liftAff=liftAff,exports.MonadAff=MonadAff,exports.monadAffAff=monadAffAff,exports.monadAffExceptT=function(dictMonadAff){return new MonadAff(function(){return Control_Monad_Except_Trans.monadEffExceptT(dictMonadAff.MonadEff0())},function($11){return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonadAff.MonadEff0().Monad0())(liftAff(dictMonadAff)($11))})},exports.monadAffReader=function(dictMonadAff){return new MonadAff(function(){return Control_Monad_Reader_Trans.monadEffReader(dictMonadAff.MonadEff0())},function($15){return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadAff.MonadEff0().Monad0())(liftAff(dictMonadAff)($15))})}}(PS["Control.Monad.Aff.Class"]=PS["Control.Monad.Aff.Class"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Coroutine=PS["Control.Coroutine"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Aff_AVar=PS["Control.Monad.Aff.AVar"],Control_Monad_Aff_Class=PS["Control.Monad.Aff.Class"],Control_Monad_Eff=PS["Control.Monad.Eff"],Control_Monad_Eff_Class=PS["Control.Monad.Eff.Class"],Control_Monad_Free_Trans=PS["Control.Monad.Free.Trans"],Control_Monad_Trans_Class=PS["Control.Monad.Trans.Class"],Data_Function=(PS["Control.Semigroupoid"],PS["Data.Either"],PS["Data.Function"]),Data_Functor=PS["Data.Functor"],Data_Unit=PS["Data.Unit"],produceAff=(PS.Prelude,function(recv){return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.makeEmptyVar))(function(v){return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Monad_Aff.forkAff(recv(Data_Function.flip(Control_Monad_Aff_AVar.putVar)(v)))))(function(v2){return Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.takeVar(v))})})}),produce=function(recv){return produceAff(function(send){return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(recv(function($4){return Data_Functor.void(Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Data_Function.const(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(send($4)))}))})};exports.produce=produce,exports["produce'"]=function(dictMonadAff){return function($5){return Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictMonadAff.MonadEff0().Monad0().Bind1().Apply0().Functor0())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(produce($5))}},exports.produceAff=produceAff}(PS["Control.Coroutine.Aff"]=PS["Control.Coroutine.Aff"]||{}),function(exports){"use strict";PS["Control.Monad.Aff"];var unsafeCoerceAff=PS["Unsafe.Coerce"].unsafeCoerce;exports.unsafeCoerceAff=unsafeCoerceAff}(PS["Control.Monad.Aff.Unsafe"]=PS["Control.Monad.Aff.Unsafe"]||{}),function(exports){"use strict";(PS["Control.Monad.Eff.Console"]=PS["Control.Monad.Eff.Console"]||{}).warn=function(s){return function(){return console.warn(s),{}}}}(),function(exports){"use strict";var $foreign=PS["Control.Monad.Eff.Console"];PS["Control.Monad.Eff"],PS["Data.Show"],PS["Data.Unit"];exports.warn=$foreign.warn}(PS["Control.Monad.Eff.Console"]=PS["Control.Monad.Eff.Console"]||{}),function(exports){"use strict";exports.now=function(){return Date.now()},exports.nowOffset=function(){return(new Date).getTimezoneOffset()}}(PS["Control.Monad.Eff.Now"]=PS["Control.Monad.Eff.Now"]||{}),function(exports){"use strict";exports.adjustImpl=function(just){return function(nothing){return function(offset){return function(rec){var y,mo,d,h,m,s,ms,date,msUTC=(y=rec.year,mo=rec.month-1,d=rec.day,h=rec.hour,m=rec.minute,s=rec.second,ms=rec.millisecond,date=new Date(Date.UTC(y,mo,d,h,m,s,ms)),0<=y&&y<100&&date.setUTCFullYear(y),date.getTime()),dt=new Date(msUTC+offset);return isNaN(dt.getTime())?nothing:just({year:dt.getUTCFullYear(),month:dt.getUTCMonth()+1,day:dt.getUTCDate(),hour:dt.getUTCHours(),minute:dt.getUTCMinutes(),second:dt.getUTCSeconds(),millisecond:dt.getUTCMilliseconds()})}}}}}(PS["Data.DateTime"]=PS["Data.DateTime"]||{}),function(exports){"use strict";var createDate=function(y,m,d){var date=new Date(Date.UTC(y,m,d));return 0<=y&&y<100&&date.setUTCFullYear(y),date};exports.canonicalDateImpl=function(ctor,y,m,d){var date=createDate(y,m-1,d);return ctor(date.getUTCFullYear())(date.getUTCMonth()+1)(date.getUTCDate())},exports.calcWeekday=function(y,m,d){return createDate(y,m-1,d).getUTCDay()}}(PS["Data.Date"]=PS["Data.Date"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=(PS["Control.Apply"],PS["Control.Bind"]),Control_MonadZero=(PS["Control.MonadPlus"],PS["Control.MonadZero"]),Data_Functor=(PS["Control.Semigroupoid"],PS["Data.Boolean"],PS["Data.Bounded"],PS["Data.Char"],PS["Data.Either"],PS["Data.Eq"],PS["Data.EuclideanRing"],PS["Data.Function"],PS["Data.Functor"]),Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Ord=(PS["Data.Newtype"],PS["Data.NonEmpty"],PS["Data.Ord"]),Data_Tuple=(PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semiring"],PS["Data.Tuple"]),Data_Unfoldable=PS["Data.Unfoldable"],succ=(PS["Data.Unit"],PS["Partial.Unsafe"],PS.Prelude,function(dict){return dict.succ}),diag=function(a){return new Data_Tuple.Tuple(a,a)};exports.Enum=function(Ord0,pred,succ){this.Ord0=Ord0,this.pred=pred,this.succ=succ},exports.succ=succ,exports.pred=function(dict){return dict.pred},exports.enumFromTo=function(dictEnum){return function(dictUnfoldable){return function(from){return function(to){return Data_Unfoldable.unfoldr(dictUnfoldable)(function(mx){return Control_Bind.bind(Data_Maybe.bindMaybe)(mx)(function(v){return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Ord.lessThanOrEq(dictEnum.Ord0())(v)(to)))(function(){return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(v,succ(dictEnum)(v)))})})})(new Data_Maybe.Just(from))}}}},exports.upFrom=function(dictEnum){return function(dictUnfoldable){return Data_Unfoldable.unfoldr(dictUnfoldable)(function($109){return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($109))})}},exports.BoundedEnum=function(Bounded0,Enum1,cardinality,fromEnum,toEnum){this.Bounded0=Bounded0,this.Enum1=Enum1,this.cardinality=cardinality,this.fromEnum=fromEnum,this.toEnum=toEnum},exports.cardinality=function(dict){return dict.cardinality},exports.toEnum=function(dict){return dict.toEnum},exports.fromEnum=function(dict){return dict.fromEnum}}(PS["Data.Enum"]=PS["Data.Enum"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_Boolean=(PS["Control.Semigroupoid"],PS["Data.Boolean"]),Data_Bounded=PS["Data.Bounded"],Data_Enum=PS["Data.Enum"],Data_Eq=PS["Data.Eq"],Data_Generic=PS["Data.Generic"],Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Ord=PS["Data.Ord"],Data_Ordering=PS["Data.Ordering"],Data_Show=(PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"]),Data_Unit=PS["Data.Unit"],Year=(PS.Prelude,function(x){return x}),Monday=function(){function Monday(){}return Monday.value=new Monday,Monday}(),Tuesday=function(){function Tuesday(){}return Tuesday.value=new Tuesday,Tuesday}(),Wednesday=function(){function Wednesday(){}return Wednesday.value=new Wednesday,Wednesday}(),Thursday=function(){function Thursday(){}return Thursday.value=new Thursday,Thursday}(),Friday=function(){function Friday(){}return Friday.value=new Friday,Friday}(),Saturday=function(){function Saturday(){}return Saturday.value=new Saturday,Saturday}(),Sunday=function(){function Sunday(){}return Sunday.value=new Sunday,Sunday}(),January=function(){function January(){}return January.value=new January,January}(),February=function(){function February(){}return February.value=new February,February}(),March=function(){function March(){}return March.value=new March,March}(),April=function(){function April(){}return April.value=new April,April}(),May=function(){function May(){}return May.value=new May,May}(),June=function(){function June(){}return June.value=new June,June}(),July=function(){function July(){}return July.value=new July,July}(),August=function(){function August(){}return August.value=new August,August}(),September=function(){function September(){}return September.value=new September,September}(),October=function(){function October(){}return October.value=new October,October}(),November=function(){function November(){}return November.value=new November,November}(),December=function(){function December(){}return December.value=new December,December}(),Day=function(x){return x},showWeekday=new Data_Show.Show(function(v){if(v instanceof Monday)return"Monday";if(v instanceof Tuesday)return"Tuesday";if(v instanceof Wednesday)return"Wednesday";if(v instanceof Thursday)return"Thursday";if(v instanceof Friday)return"Friday";if(v instanceof Saturday)return"Saturday";if(v instanceof Sunday)return"Sunday";throw new Error("Failed pattern match at Data.Date.Component line 189, column 1 - line 189, column 37: "+[v.constructor.name])}),showMonth=new Data_Show.Show(function(v){if(v instanceof January)return"January";if(v instanceof February)return"February";if(v instanceof March)return"March";if(v instanceof April)return"April";if(v instanceof May)return"May";if(v instanceof June)return"June";if(v instanceof July)return"July";if(v instanceof August)return"August";if(v instanceof September)return"September";if(v instanceof October)return"October";if(v instanceof November)return"November";if(v instanceof December)return"December";throw new Error("Failed pattern match at Data.Date.Component line 104, column 1 - line 104, column 33: "+[v.constructor.name])}),ordYear=Data_Ord.ordInt,ordDay=Data_Ord.ordInt,genericYear=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Date.Component.Year"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Year))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Date.Component.Year",[{sigConstructor:"Data.Date.Component.Year",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Date.Component.Year",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericInt)(v)}])}),genericMonth=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Date.Component.January"===v.value0&&0===v.value1.length?new Data_Maybe.Just(January.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.February"===v.value0&&0===v.value1.length?new Data_Maybe.Just(February.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.March"===v.value0&&0===v.value1.length?new Data_Maybe.Just(March.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.April"===v.value0&&0===v.value1.length?new Data_Maybe.Just(April.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.May"===v.value0&&0===v.value1.length?new Data_Maybe.Just(May.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.June"===v.value0&&0===v.value1.length?new Data_Maybe.Just(June.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.July"===v.value0&&0===v.value1.length?new Data_Maybe.Just(July.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.August"===v.value0&&0===v.value1.length?new Data_Maybe.Just(August.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.September"===v.value0&&0===v.value1.length?new Data_Maybe.Just(September.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.October"===v.value0&&0===v.value1.length?new Data_Maybe.Just(October.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.November"===v.value0&&0===v.value1.length?new Data_Maybe.Just(November.value):v instanceof Data_Generic.SProd&&"Data.Date.Component.December"===v.value0&&0===v.value1.length?new Data_Maybe.Just(December.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Date.Component.Month",[{sigConstructor:"Data.Date.Component.January",sigValues:[]},{sigConstructor:"Data.Date.Component.February",sigValues:[]},{sigConstructor:"Data.Date.Component.March",sigValues:[]},{sigConstructor:"Data.Date.Component.April",sigValues:[]},{sigConstructor:"Data.Date.Component.May",sigValues:[]},{sigConstructor:"Data.Date.Component.June",sigValues:[]},{sigConstructor:"Data.Date.Component.July",sigValues:[]},{sigConstructor:"Data.Date.Component.August",sigValues:[]},{sigConstructor:"Data.Date.Component.September",sigValues:[]},{sigConstructor:"Data.Date.Component.October",sigValues:[]},{sigConstructor:"Data.Date.Component.November",sigValues:[]},{sigConstructor:"Data.Date.Component.December",sigValues:[]}])},function(v){if(v instanceof January)return new Data_Generic.SProd("Data.Date.Component.January",[]);if(v instanceof February)return new Data_Generic.SProd("Data.Date.Component.February",[]);if(v instanceof March)return new Data_Generic.SProd("Data.Date.Component.March",[]);if(v instanceof April)return new Data_Generic.SProd("Data.Date.Component.April",[]);if(v instanceof May)return new Data_Generic.SProd("Data.Date.Component.May",[]);if(v instanceof June)return new Data_Generic.SProd("Data.Date.Component.June",[]);if(v instanceof July)return new Data_Generic.SProd("Data.Date.Component.July",[]);if(v instanceof August)return new Data_Generic.SProd("Data.Date.Component.August",[]);if(v instanceof September)return new Data_Generic.SProd("Data.Date.Component.September",[]);if(v instanceof October)return new Data_Generic.SProd("Data.Date.Component.October",[]);if(v instanceof November)return new Data_Generic.SProd("Data.Date.Component.November",[]);if(v instanceof December)return new Data_Generic.SProd("Data.Date.Component.December",[]);throw new Error("Failed pattern match at Data.Date.Component line 64, column 8 - line 64, column 46: "+[v.constructor.name])}),genericDay=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Date.Component.Day"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Day))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Date.Component.Day",[{sigConstructor:"Data.Date.Component.Day",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Date.Component.Day",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericInt)(v)}])}),eqYear=Data_Eq.eqInt,eqWeekday=new Data_Eq.Eq(function(x){return function(y){return x instanceof Monday&&y instanceof Monday||(x instanceof Tuesday&&y instanceof Tuesday||(x instanceof Wednesday&&y instanceof Wednesday||(x instanceof Thursday&&y instanceof Thursday||(x instanceof Friday&&y instanceof Friday||(x instanceof Saturday&&y instanceof Saturday||x instanceof Sunday&&y instanceof Sunday)))))}}),ordWeekday=new Data_Ord.Ord(function(){return eqWeekday},function(x){return function(y){if(x instanceof Monday&&y instanceof Monday)return Data_Ordering.EQ.value;if(x instanceof Monday)return Data_Ordering.LT.value;if(y instanceof Monday)return Data_Ordering.GT.value;if(x instanceof Tuesday&&y instanceof Tuesday)return Data_Ordering.EQ.value;if(x instanceof Tuesday)return Data_Ordering.LT.value;if(y instanceof Tuesday)return Data_Ordering.GT.value;if(x instanceof Wednesday&&y instanceof Wednesday)return Data_Ordering.EQ.value;if(x instanceof Wednesday)return Data_Ordering.LT.value;if(y instanceof Wednesday)return Data_Ordering.GT.value;if(x instanceof Thursday&&y instanceof Thursday)return Data_Ordering.EQ.value;if(x instanceof Thursday)return Data_Ordering.LT.value;if(y instanceof Thursday)return Data_Ordering.GT.value;if(x instanceof Friday&&y instanceof Friday)return Data_Ordering.EQ.value;if(x instanceof Friday)return Data_Ordering.LT.value;if(y instanceof Friday)return Data_Ordering.GT.value;if(x instanceof Saturday&&y instanceof Saturday)return Data_Ordering.EQ.value;if(x instanceof Saturday)return Data_Ordering.LT.value;if(y instanceof Saturday)return Data_Ordering.GT.value;if(x instanceof Sunday&&y instanceof Sunday)return Data_Ordering.EQ.value;throw new Error("Failed pattern match at Data.Date.Component line 158, column 8 - line 158, column 42: "+[x.constructor.name,y.constructor.name])}}),eqMonth=new Data_Eq.Eq(function(x){return function(y){return x instanceof January&&y instanceof January||(x instanceof February&&y instanceof February||(x instanceof March&&y instanceof March||(x instanceof April&&y instanceof April||(x instanceof May&&y instanceof May||(x instanceof June&&y instanceof June||(x instanceof July&&y instanceof July||(x instanceof August&&y instanceof August||(x instanceof September&&y instanceof September||(x instanceof October&&y instanceof October||(x instanceof November&&y instanceof November||x instanceof December&&y instanceof December))))))))))}}),ordMonth=new Data_Ord.Ord(function(){return eqMonth},function(x){return function(y){if(x instanceof January&&y instanceof January)return Data_Ordering.EQ.value;if(x instanceof January)return Data_Ordering.LT.value;if(y instanceof January)return Data_Ordering.GT.value;if(x instanceof February&&y instanceof February)return Data_Ordering.EQ.value;if(x instanceof February)return Data_Ordering.LT.value;if(y instanceof February)return Data_Ordering.GT.value;if(x instanceof March&&y instanceof March)return Data_Ordering.EQ.value;if(x instanceof March)return Data_Ordering.LT.value;if(y instanceof March)return Data_Ordering.GT.value;if(x instanceof April&&y instanceof April)return Data_Ordering.EQ.value;if(x instanceof April)return Data_Ordering.LT.value;if(y instanceof April)return Data_Ordering.GT.value;if(x instanceof May&&y instanceof May)return Data_Ordering.EQ.value;if(x instanceof May)return Data_Ordering.LT.value;if(y instanceof May)return Data_Ordering.GT.value;if(x instanceof June&&y instanceof June)return Data_Ordering.EQ.value;if(x instanceof June)return Data_Ordering.LT.value;if(y instanceof June)return Data_Ordering.GT.value;if(x instanceof July&&y instanceof July)return Data_Ordering.EQ.value;if(x instanceof July)return Data_Ordering.LT.value;if(y instanceof July)return Data_Ordering.GT.value;if(x instanceof August&&y instanceof August)return Data_Ordering.EQ.value;if(x instanceof August)return Data_Ordering.LT.value;if(y instanceof August)return Data_Ordering.GT.value;if(x instanceof September&&y instanceof September)return Data_Ordering.EQ.value;if(x instanceof September)return Data_Ordering.LT.value;if(y instanceof September)return Data_Ordering.GT.value;if(x instanceof October&&y instanceof October)return Data_Ordering.EQ.value;if(x instanceof October)return Data_Ordering.LT.value;if(y instanceof October)return Data_Ordering.GT.value;if(x instanceof November&&y instanceof November)return Data_Ordering.EQ.value;if(x instanceof November)return Data_Ordering.LT.value;if(y instanceof November)return Data_Ordering.GT.value;if(x instanceof December&&y instanceof December)return Data_Ordering.EQ.value;throw new Error("Failed pattern match at Data.Date.Component line 63, column 8 - line 63, column 38: "+[x.constructor.name,y.constructor.name])}}),eqDay=Data_Eq.eqInt,boundedYear=new Data_Bounded.Bounded(function(){return ordYear},-271820,275759),boundedWeekday=new Data_Bounded.Bounded(function(){return ordWeekday},Monday.value,Sunday.value),boundedMonth=new Data_Bounded.Bounded(function(){return ordMonth},January.value,December.value),boundedEnumYear=new Data_Enum.BoundedEnum(function(){return boundedYear},function(){return enumYear},547580,function(v){return v},function(n){if(-271821<=n&&n<=275759)return new Data_Maybe.Just(n);if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Date.Component line 37, column 1 - line 37, column 45: "+[n.constructor.name])}),enumYear=new Data_Enum.Enum(function(){return ordYear},function($110){return Data_Enum.toEnum(boundedEnumYear)(Data_Enum.fromEnum(boundedEnumYear)($110)-1|0)},function($111){return Data_Enum.toEnum(boundedEnumYear)(Data_Enum.fromEnum(boundedEnumYear)($111)+1|0)}),boundedEnumWeekday=new Data_Enum.BoundedEnum(function(){return boundedWeekday},function(){return enumWeekday},7,function(v){if(v instanceof Monday)return 1;if(v instanceof Tuesday)return 2;if(v instanceof Wednesday)return 3;if(v instanceof Thursday)return 4;if(v instanceof Friday)return 5;if(v instanceof Saturday)return 6;if(v instanceof Sunday)return 7;throw new Error("Failed pattern match at Data.Date.Component line 180, column 14 - line 189, column 1: "+[v.constructor.name])},function(v){return 1===v?new Data_Maybe.Just(Monday.value):2===v?new Data_Maybe.Just(Tuesday.value):3===v?new Data_Maybe.Just(Wednesday.value):4===v?new Data_Maybe.Just(Thursday.value):5===v?new Data_Maybe.Just(Friday.value):6===v?new Data_Maybe.Just(Saturday.value):7===v?new Data_Maybe.Just(Sunday.value):Data_Maybe.Nothing.value}),enumWeekday=new Data_Enum.Enum(function(){return ordWeekday},function($112){return Data_Enum.toEnum(boundedEnumWeekday)(Data_Enum.fromEnum(boundedEnumWeekday)($112)-1|0)},function($113){return Data_Enum.toEnum(boundedEnumWeekday)(Data_Enum.fromEnum(boundedEnumWeekday)($113)+1|0)}),boundedEnumMonth=new Data_Enum.BoundedEnum(function(){return boundedMonth},function(){return enumMonth},12,function(v){if(v instanceof January)return 1;if(v instanceof February)return 2;if(v instanceof March)return 3;if(v instanceof April)return 4;if(v instanceof May)return 5;if(v instanceof June)return 6;if(v instanceof July)return 7;if(v instanceof August)return 8;if(v instanceof September)return 9;if(v instanceof October)return 10;if(v instanceof November)return 11;if(v instanceof December)return 12;throw new Error("Failed pattern match at Data.Date.Component line 90, column 14 - line 104, column 1: "+[v.constructor.name])},function(v){return 1===v?new Data_Maybe.Just(January.value):2===v?new Data_Maybe.Just(February.value):3===v?new Data_Maybe.Just(March.value):4===v?new Data_Maybe.Just(April.value):5===v?new Data_Maybe.Just(May.value):6===v?new Data_Maybe.Just(June.value):7===v?new Data_Maybe.Just(July.value):8===v?new Data_Maybe.Just(August.value):9===v?new Data_Maybe.Just(September.value):10===v?new Data_Maybe.Just(October.value):11===v?new Data_Maybe.Just(November.value):12===v?new Data_Maybe.Just(December.value):Data_Maybe.Nothing.value}),enumMonth=new Data_Enum.Enum(function(){return ordMonth},function($114){return Data_Enum.toEnum(boundedEnumMonth)(Data_Enum.fromEnum(boundedEnumMonth)($114)-1|0)},function($115){return Data_Enum.toEnum(boundedEnumMonth)(Data_Enum.fromEnum(boundedEnumMonth)($115)+1|0)}),boundedDay=new Data_Bounded.Bounded(function(){return ordDay},1,31),boundedEnumDay=new Data_Enum.BoundedEnum(function(){return boundedDay},function(){return enumDay},31,function(v){return v},function(n){if(1<=n&&n<=31)return new Data_Maybe.Just(n);if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Date.Component line 137, column 1 - line 137, column 43: "+[n.constructor.name])}),enumDay=new Data_Enum.Enum(function(){return ordDay},function($116){return Data_Enum.toEnum(boundedEnumDay)(Data_Enum.fromEnum(boundedEnumDay)($116)-1|0)},function($117){return Data_Enum.toEnum(boundedEnumDay)(Data_Enum.fromEnum(boundedEnumDay)($117)+1|0)});exports.January=January,exports.February=February,exports.March=March,exports.April=April,exports.May=May,exports.June=June,exports.July=July,exports.August=August,exports.September=September,exports.October=October,exports.November=November,exports.December=December,exports.Monday=Monday,exports.Tuesday=Tuesday,exports.Wednesday=Wednesday,exports.Thursday=Thursday,exports.Friday=Friday,exports.Saturday=Saturday,exports.Sunday=Sunday,exports.eqYear=eqYear,exports.ordYear=ordYear,exports.genericYear=genericYear,exports.boundedYear=boundedYear,exports.enumYear=enumYear,exports.boundedEnumYear=boundedEnumYear,exports.eqMonth=eqMonth,exports.ordMonth=ordMonth,exports.genericMonth=genericMonth,exports.boundedMonth=boundedMonth,exports.enumMonth=enumMonth,exports.boundedEnumMonth=boundedEnumMonth,exports.showMonth=showMonth,exports.eqDay=eqDay,exports.ordDay=ordDay,exports.genericDay=genericDay,exports.boundedDay=boundedDay,exports.enumDay=enumDay,exports.boundedEnumDay=boundedEnumDay,exports.eqWeekday=eqWeekday,exports.ordWeekday=ordWeekday,exports.boundedWeekday=boundedWeekday,exports.enumWeekday=enumWeekday,exports.boundedEnumWeekday=boundedEnumWeekday,exports.showWeekday=showWeekday}(PS["Data.Date.Component"]=PS["Data.Date.Component"]||{}),function(exports){"use strict";var $foreign=PS["Data.Date"],Control_Apply=PS["Control.Apply"],Data_Boolean=(PS["Control.Semigroupoid"],PS["Data.Boolean"]),Data_Date_Component=(PS["Data.Bounded"],PS["Data.Date.Component"]),Data_Enum=PS["Data.Enum"],Data_Eq=PS["Data.Eq"],Data_Generic=(PS["Data.EuclideanRing"],PS["Data.Function"],PS["Data.Function.Uncurried"],PS["Data.Generic"]),Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Ord=PS["Data.Ord"],Data_Ordering=PS["Data.Ordering"],Data_Unit=(PS["Data.Semigroup"],PS["Data.Show"],PS["Data.Time.Duration"],PS["Data.Unit"]),$$Date=(PS["Partial.Unsafe"],PS.Prelude,function(){function $$Date(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return $$Date.create=function(value0){return function(value1){return function(value2){return new $$Date(value0,value1,value2)}}},$$Date}()),isLeapYear=function(y){var y$prime=Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(y);return!(y$prime%4!=0||y$prime%400!=0&&y$prime%100==0)},genericDate=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Date.Date"===v.value0&&3===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just($$Date.create))(Data_Generic.fromSpine(Data_Date_Component.genericYear)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Date_Component.genericMonth)(v.value1[1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Date_Component.genericDay)(v.value1[2](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Date.Date",[{sigConstructor:"Data.Date.Date",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Date_Component.genericYear)(Data_Generic.anyProxy)},function($dollarq1){return Data_Generic.toSignature(Data_Date_Component.genericMonth)(Data_Generic.anyProxy)},function($dollarq1){return Data_Generic.toSignature(Data_Date_Component.genericDay)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Date.Date",[function($dollarq){return Data_Generic.toSpine(Data_Date_Component.genericYear)(v.value0)},function($dollarq){return Data_Generic.toSpine(Data_Date_Component.genericMonth)(v.value1)},function($dollarq){return Data_Generic.toSpine(Data_Date_Component.genericDay)(v.value2)}])}),eqDate=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Date_Component.eqYear)(x.value0)(y.value0)&&Data_Eq.eq(Data_Date_Component.eqMonth)(x.value1)(y.value1)&&Data_Eq.eq(Data_Date_Component.eqDay)(x.value2)(y.value2)}}),ordDate=new Data_Ord.Ord(function(){return eqDate},function(x){return function(y){var v=Data_Ord.compare(Data_Date_Component.ordYear)(x.value0)(y.value0);if(v instanceof Data_Ordering.LT)return Data_Ordering.LT.value;if(v instanceof Data_Ordering.GT)return Data_Ordering.GT.value;var v1=Data_Ord.compare(Data_Date_Component.ordMonth)(x.value1)(y.value1);return v1 instanceof Data_Ordering.LT?Data_Ordering.LT.value:v1 instanceof Data_Ordering.GT?Data_Ordering.GT.value:Data_Ord.compare(Data_Date_Component.ordDay)(x.value2)(y.value2)}}),canonicalDate=function(y){return function(m){return function(d){return $foreign.canonicalDateImpl(function(y$prime){return function(m$prime){return function(d$prime){return new $$Date(y$prime,Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)),d$prime)}}},y,Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m),d)}}};exports.canonicalDate=canonicalDate,exports.exactDate=function(y){return function(m){return function(d){var dt=new $$Date(y,m,d);return Data_Eq.eq(eqDate)(canonicalDate(y)(m)(d))(dt)?new Data_Maybe.Just(dt):Data_Maybe.Nothing.value}}},exports.year=function(v){return v.value0},exports.month=function(v){return v.value1},exports.day=function(v){return v.value2},exports.weekday=function(v){var n=$foreign.calcWeekday(v.value0,Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1),v.value2);return 0===n?Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(7)):Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(n))},exports.isLeapYear=isLeapYear,exports.lastDayOfMonth=function(y){return function(m){var unsafeDay=function($98){return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)($98))};if(m instanceof Data_Date_Component.January)return unsafeDay(31);if(m instanceof Data_Date_Component.February){if(isLeapYear(y))return unsafeDay(29);if(Data_Boolean.otherwise)return unsafeDay(28)}if(m instanceof Data_Date_Component.March)return unsafeDay(31);if(m instanceof Data_Date_Component.April)return unsafeDay(30);if(m instanceof Data_Date_Component.May)return unsafeDay(31);if(m instanceof Data_Date_Component.June)return unsafeDay(30);if(m instanceof Data_Date_Component.July)return unsafeDay(31);if(m instanceof Data_Date_Component.August)return unsafeDay(31);if(m instanceof Data_Date_Component.September)return unsafeDay(30);if(m instanceof Data_Date_Component.October)return unsafeDay(31);if(m instanceof Data_Date_Component.November)return unsafeDay(30);if(m instanceof Data_Date_Component.December)return unsafeDay(31);throw new Error("Failed pattern match at Data.Date line 89, column 22 - line 104, column 3: "+[m.constructor.name])}},exports.eqDate=eqDate,exports.ordDate=ordDate,exports.genericDate=genericDate}(PS["Data.Date"]=PS["Data.Date"]||{}),function(exports){"use strict";exports.fromNumberImpl=function(just){return function(nothing){return function(n){return(0|n)===n?just(n):nothing}}},exports.toNumber=function(n){return n},exports.fromStringAsImpl=function(just){return function(nothing){return function(radix){var digits;digits=radix<11?"[0-"+(radix-1).toString()+"]":11===radix?"[0-9a]":"[0-9a-"+String.fromCharCode(86+radix)+"]";var pattern=new RegExp("^[\\+\\-]?"+digits+"+$","i");return function(s){if(pattern.test(s)){var i=parseInt(s,radix);return(0|i)===i?just(i):nothing}return nothing}}}},exports.pow=function(x){return function(y){return 0|Math.pow(x,y)}}}(PS["Data.Int"]=PS["Data.Int"]||{}),function(exports){"use strict";exports.infinity=1/0,exports.isFinite=isFinite,exports.readFloat=parseFloat}(PS.Global=PS.Global||{}),function(exports){"use strict";var $foreign=PS.Global;exports.infinity=$foreign.infinity,exports.isFinite=$foreign.isFinite,exports.readFloat=$foreign.readFloat}(PS.Global=PS.Global||{}),function(exports){"use strict";exports.abs=Math.abs,exports.ceil=Math.ceil,exports.floor=Math.floor,exports.trunc=Math.trunc||function(n){return n<0?Math.ceil(n):Math.floor(n)},exports.log=Math.log,exports.pow=function(n){return function(p){return Math.pow(n,p)}},exports.round=Math.round,exports.ln10=Math.LN10}(PS.Math=PS.Math||{}),function(exports){"use strict";var $foreign=PS.Math;exports.abs=$foreign.abs,exports.floor=$foreign.floor,exports.log=$foreign.log,exports.pow=$foreign.pow,exports.round=$foreign.round,exports.trunc=$foreign.trunc,exports.ln10=$foreign.ln10}(PS.Math=PS.Math||{}),function(exports){"use strict";var $foreign=PS["Data.Int"],Data_Boolean=(PS["Control.Category"],PS["Control.Semigroupoid"],PS["Data.Boolean"]),Data_Bounded=PS["Data.Bounded"],Data_Maybe=(PS["Data.CommutativeRing"],PS["Data.DivisionRing"],PS["Data.Eq"],PS["Data.EuclideanRing"],PS["Data.Field"],PS["Data.HeytingAlgebra"],PS["Data.Int.Bits"],PS["Data.Maybe"]),Global=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semiring"],PS["Data.Show"],PS.Global),$$Math=PS.Math,fromStringAs=(PS.Prelude,$foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)),fromString=fromStringAs(10),fromNumber=$foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value),unsafeClamp=function(x){if(x===Global.infinity)return 0;if(x===-Global.infinity)return 0;if(x>=$foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt)))return Data_Bounded.top(Data_Bounded.boundedInt);if(x<=$foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt)))return Data_Bounded.bottom(Data_Bounded.boundedInt);if(Data_Boolean.otherwise)return Data_Maybe.fromMaybe(0)(fromNumber(x));throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 64, column 29: "+[x.constructor.name])};exports.fromNumber=fromNumber,exports.floor=function($24){return unsafeClamp($$Math.floor($24))},exports.round=function($23){return unsafeClamp($$Math.round($23))},exports.fromString=fromString,exports.fromStringAs=fromStringAs,exports.odd=function(x){return 0!=(1&x)},exports.toNumber=$foreign.toNumber,exports.pow=$foreign.pow}(PS["Data.Int"]=PS["Data.Int"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_Boolean=(PS["Control.Semigroupoid"],PS["Data.Boolean"]),Data_Bounded=PS["Data.Bounded"],Data_Enum=PS["Data.Enum"],Data_Eq=PS["Data.Eq"],Data_Generic=PS["Data.Generic"],Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Ord=PS["Data.Ord"],Data_Unit=(PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.Unit"]),Second=(PS.Prelude,function(x){return x}),Minute=function(x){return x},Millisecond=function(x){return x},Hour=function(x){return x},ordSecond=Data_Ord.ordInt,ordMinute=Data_Ord.ordInt,ordMillisecond=Data_Ord.ordInt,ordHour=Data_Ord.ordInt,genericSecond=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Time.Component.Second"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Second))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Time.Component.Second",[{sigConstructor:"Data.Time.Component.Second",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Time.Component.Second",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericInt)(v)}])}),genericMinute=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Time.Component.Minute"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minute))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Time.Component.Minute",[{sigConstructor:"Data.Time.Component.Minute",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Time.Component.Minute",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericInt)(v)}])}),genericMillisecond=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Time.Component.Millisecond"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Millisecond))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Time.Component.Millisecond",[{sigConstructor:"Data.Time.Component.Millisecond",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Time.Component.Millisecond",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericInt)(v)}])}),genericHour=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Time.Component.Hour"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hour))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Time.Component.Hour",[{sigConstructor:"Data.Time.Component.Hour",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Time.Component.Hour",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericInt)(v)}])}),eqSecond=Data_Eq.eqInt,eqMinute=Data_Eq.eqInt,eqMillisecond=Data_Eq.eqInt,eqHour=Data_Eq.eqInt,boundedSecond=new Data_Bounded.Bounded(function(){return ordSecond},0,59),boundedMinute=new Data_Bounded.Bounded(function(){return ordMinute},0,59),boundedMillisecond=new Data_Bounded.Bounded(function(){return ordMillisecond},0,999),boundedHour=new Data_Bounded.Bounded(function(){return ordHour},0,23),boundedEnumSecond=new Data_Enum.BoundedEnum(function(){return boundedSecond},function(){return enumSecond},60,function(v){return v},function(n){if(0<=n&&n<=59)return new Data_Maybe.Just(n);if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Time.Component line 94, column 1 - line 94, column 49: "+[n.constructor.name])}),enumSecond=new Data_Enum.Enum(function(){return ordSecond},function($64){return Data_Enum.toEnum(boundedEnumSecond)(Data_Enum.fromEnum(boundedEnumSecond)($64)-1|0)},function($65){return Data_Enum.toEnum(boundedEnumSecond)(Data_Enum.fromEnum(boundedEnumSecond)($65)+1|0)}),boundedEnumMinute=new Data_Enum.BoundedEnum(function(){return boundedMinute},function(){return enumMinute},60,function(v){return v},function(n){if(0<=n&&n<=59)return new Data_Maybe.Just(n);if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Time.Component line 64, column 1 - line 64, column 49: "+[n.constructor.name])}),enumMinute=new Data_Enum.Enum(function(){return ordMinute},function($66){return Data_Enum.toEnum(boundedEnumMinute)(Data_Enum.fromEnum(boundedEnumMinute)($66)-1|0)},function($67){return Data_Enum.toEnum(boundedEnumMinute)(Data_Enum.fromEnum(boundedEnumMinute)($67)+1|0)}),boundedEnumMillisecond=new Data_Enum.BoundedEnum(function(){return boundedMillisecond},function(){return enumMillisecond},1e3,function(v){return v},function(n){if(0<=n&&n<=999)return new Data_Maybe.Just(n);if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Time.Component line 125, column 1 - line 125, column 59: "+[n.constructor.name])}),enumMillisecond=new Data_Enum.Enum(function(){return ordMillisecond},function($68){return Data_Enum.toEnum(boundedEnumMillisecond)(Data_Enum.fromEnum(boundedEnumMillisecond)($68)-1|0)},function($69){return Data_Enum.toEnum(boundedEnumMillisecond)(Data_Enum.fromEnum(boundedEnumMillisecond)($69)+1|0)}),boundedEnumHour=new Data_Enum.BoundedEnum(function(){return boundedHour},function(){return enumHour},24,function(v){return v},function(n){if(0<=n&&n<=23)return new Data_Maybe.Just(n);if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Time.Component line 34, column 1 - line 34, column 45: "+[n.constructor.name])}),enumHour=new Data_Enum.Enum(function(){return ordHour},function($70){return Data_Enum.toEnum(boundedEnumHour)(Data_Enum.fromEnum(boundedEnumHour)($70)-1|0)},function($71){return Data_Enum.toEnum(boundedEnumHour)(Data_Enum.fromEnum(boundedEnumHour)($71)+1|0)});exports.eqHour=eqHour,exports.ordHour=ordHour,exports.genericHour=genericHour,exports.boundedHour=boundedHour,exports.enumHour=enumHour,exports.boundedEnumHour=boundedEnumHour,exports.eqMinute=eqMinute,exports.ordMinute=ordMinute,exports.genericMinute=genericMinute,exports.boundedMinute=boundedMinute,exports.enumMinute=enumMinute,exports.boundedEnumMinute=boundedEnumMinute,exports.eqSecond=eqSecond,exports.ordSecond=ordSecond,exports.genericSecond=genericSecond,exports.boundedSecond=boundedSecond,exports.enumSecond=enumSecond,exports.boundedEnumSecond=boundedEnumSecond,exports.eqMillisecond=eqMillisecond,exports.ordMillisecond=ordMillisecond,exports.genericMillisecond=genericMillisecond,exports.boundedMillisecond=boundedMillisecond,exports.enumMillisecond=enumMillisecond,exports.boundedEnumMillisecond=boundedEnumMillisecond}(PS["Data.Time.Component"]=PS["Data.Time.Component"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_Bounded=PS["Data.Bounded"],Data_Eq=(PS["Data.Enum"],PS["Data.Eq"]),Data_Generic=(PS["Data.EuclideanRing"],PS["Data.Function"],PS["Data.Functor"],PS["Data.Generic"]),Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Int"],PS["Data.Maybe"]),Data_Ord=(PS["Data.Newtype"],PS["Data.Ord"]),Data_Ordering=PS["Data.Ordering"],Data_Time_Component=(PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.Time.Component"]),Data_Unit=(PS["Data.Time.Duration"],PS["Data.Tuple"],PS["Data.Unit"]),Time=(PS.Math,PS["Partial.Unsafe"],PS.Prelude,function(){function Time(value0,value1,value2,value3){this.value0=value0,this.value1=value1,this.value2=value2,this.value3=value3}return Time.create=function(value0){return function(value1){return function(value2){return function(value3){return new Time(value0,value1,value2,value3)}}}},Time}()),genericTime=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.Time.Time"===v.value0&&4===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Time.create))(Data_Generic.fromSpine(Data_Time_Component.genericHour)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericMinute)(v.value1[1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericSecond)(v.value1[2](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericMillisecond)(v.value1[3](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.Time.Time",[{sigConstructor:"Data.Time.Time",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Time_Component.genericHour)(Data_Generic.anyProxy)},function($dollarq1){return Data_Generic.toSignature(Data_Time_Component.genericMinute)(Data_Generic.anyProxy)},function($dollarq1){return Data_Generic.toSignature(Data_Time_Component.genericSecond)(Data_Generic.anyProxy)},function($dollarq1){return Data_Generic.toSignature(Data_Time_Component.genericMillisecond)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.Time.Time",[function($dollarq){return Data_Generic.toSpine(Data_Time_Component.genericHour)(v.value0)},function($dollarq){return Data_Generic.toSpine(Data_Time_Component.genericMinute)(v.value1)},function($dollarq){return Data_Generic.toSpine(Data_Time_Component.genericSecond)(v.value2)},function($dollarq){return Data_Generic.toSpine(Data_Time_Component.genericMillisecond)(v.value3)}])}),eqTime=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Time_Component.eqHour)(x.value0)(y.value0)&&Data_Eq.eq(Data_Time_Component.eqMinute)(x.value1)(y.value1)&&Data_Eq.eq(Data_Time_Component.eqSecond)(x.value2)(y.value2)&&Data_Eq.eq(Data_Time_Component.eqMillisecond)(x.value3)(y.value3)}}),ordTime=new Data_Ord.Ord(function(){return eqTime},function(x){return function(y){var v=Data_Ord.compare(Data_Time_Component.ordHour)(x.value0)(y.value0);if(v instanceof Data_Ordering.LT)return Data_Ordering.LT.value;if(v instanceof Data_Ordering.GT)return Data_Ordering.GT.value;var v1=Data_Ord.compare(Data_Time_Component.ordMinute)(x.value1)(y.value1);if(v1 instanceof Data_Ordering.LT)return Data_Ordering.LT.value;if(v1 instanceof Data_Ordering.GT)return Data_Ordering.GT.value;var v2=Data_Ord.compare(Data_Time_Component.ordSecond)(x.value2)(y.value2);return v2 instanceof Data_Ordering.LT?Data_Ordering.LT.value:v2 instanceof Data_Ordering.GT?Data_Ordering.GT.value:Data_Ord.compare(Data_Time_Component.ordMillisecond)(x.value3)(y.value3)}}),boundedTime=new Data_Bounded.Bounded(function(){return ordTime},new Time(Data_Bounded.bottom(Data_Time_Component.boundedHour),Data_Bounded.bottom(Data_Time_Component.boundedMinute),Data_Bounded.bottom(Data_Time_Component.boundedSecond),Data_Bounded.bottom(Data_Time_Component.boundedMillisecond)),new Time(Data_Bounded.top(Data_Time_Component.boundedHour),Data_Bounded.top(Data_Time_Component.boundedMinute),Data_Bounded.top(Data_Time_Component.boundedSecond),Data_Bounded.top(Data_Time_Component.boundedMillisecond)));exports.Time=Time,exports.hour=function(v){return v.value0},exports.minute=function(v){return v.value1},exports.second=function(v){return v.value2},exports.millisecond=function(v){return v.value3},exports.eqTime=eqTime,exports.ordTime=ordTime,exports.genericTime=genericTime,exports.boundedTime=boundedTime}(PS["Data.Time"]=PS["Data.Time"]||{}),function(exports){"use strict";var $foreign=PS["Data.DateTime"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Data_Date=(PS["Data.Bounded"],PS["Data.Date"]),Data_Date_Component=PS["Data.Date.Component"],Data_Enum=PS["Data.Enum"],Data_Eq=PS["Data.Eq"],Data_Functor=(PS["Data.Function"],PS["Data.Function.Uncurried"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Ord=PS["Data.Ord"],Data_Ordering=PS["Data.Ordering"],Data_Time=(PS["Data.Semigroup"],PS["Data.Show"],PS["Data.Time"]),Data_Time_Component=PS["Data.Time.Component"],Data_Time_Duration=PS["Data.Time.Duration"],Data_Unit=PS["Data.Unit"],DateTime=(PS.Prelude,function(){function DateTime(value0,value1){this.value0=value0,this.value1=value1}return DateTime.create=function(value0){return function(value1){return new DateTime(value0,value1)}},DateTime}()),genericDateTime=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.DateTime.DateTime"===v.value0&&2===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DateTime.create))(Data_Generic.fromSpine(Data_Date.genericDate)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time.genericTime)(v.value1[1](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.DateTime.DateTime",[{sigConstructor:"Data.DateTime.DateTime",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Date.genericDate)(Data_Generic.anyProxy)},function($dollarq1){return Data_Generic.toSignature(Data_Time.genericTime)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.DateTime.DateTime",[function($dollarq){return Data_Generic.toSpine(Data_Date.genericDate)(v.value0)},function($dollarq){return Data_Generic.toSpine(Data_Time.genericTime)(v.value1)}])}),eqDateTime=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Date.eqDate)(x.value0)(y.value0)&&Data_Eq.eq(Data_Time.eqTime)(x.value1)(y.value1)}}),ordDateTime=new Data_Ord.Ord(function(){return eqDateTime},function(x){return function(y){var v=Data_Ord.compare(Data_Date.ordDate)(x.value0)(y.value0);return v instanceof Data_Ordering.LT?Data_Ordering.LT.value:v instanceof Data_Ordering.GT?Data_Ordering.GT.value:Data_Ord.compare(Data_Time.ordTime)(x.value1)(y.value1)}});exports.DateTime=DateTime,exports.date=function(v){return v.value0},exports.modifyDate=function(f){return function(v){return new DateTime(f(v.value0),v.value1)}},exports.time=function(v){return v.value1},exports.modifyTime=function(f){return function(v){return new DateTime(v.value0,f(v.value1))}},exports.adjust=function(dictDuration){return function(d){return function(dt){return Control_Bind.bind(Data_Maybe.bindMaybe)($foreign.adjustImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(Data_Time_Duration.fromDuration(dictDuration)(d))((v=dt,{year:Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)),month:Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)),day:Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)),hour:Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)),minute:Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)),second:Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)),millisecond:Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))})))(function(rec){return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(DateTime.create)(Control_Bind.join(Data_Maybe.bindMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Date.exactDate)(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(rec.year)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(rec.month)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(rec.day)))))(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Time.Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(rec.hour)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(rec.minute)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(rec.second)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(rec.millisecond)))});var v}}},exports.eqDateTime=eqDateTime,exports.ordDateTime=ordDateTime,exports.genericDateTime=genericDateTime}(PS["Data.DateTime"]=PS["Data.DateTime"]||{}),function(exports){"use strict";exports.fromDateTimeImpl=function(y,mo,d,h,mi,s,ms){return function(y,m,d,h,mi,s,ms){var dateTime=new Date(Date.UTC(y,m,d,h,mi,s,ms));return 0<=y&&y<100&&dateTime.setUTCFullYear(y),dateTime}(y,mo-1,d,h,mi,s,ms).getTime()},exports.toDateTimeImpl=function(ctor){return function(instant){var dt=new Date(instant);return ctor(dt.getUTCFullYear())(dt.getUTCMonth()+1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds())}}}(PS["Data.DateTime.Instant"]=PS["Data.DateTime.Instant"]||{}),function(exports){"use strict";var $foreign=PS["Data.DateTime.Instant"],Data_Boolean=(PS["Control.Apply"],PS["Data.Boolean"]),Data_Date=(PS["Data.Bounded"],PS["Data.Date"]),Data_Date_Component=PS["Data.Date.Component"],Data_DateTime=PS["Data.DateTime"],Data_Enum=PS["Data.Enum"],Data_Maybe=(PS["Data.Eq"],PS["Data.Function.Uncurried"],PS["Data.Generic"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Time=(PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.Time"]),toDateTime=(PS["Data.Time.Component"],PS["Data.Time.Duration"],PS["Data.Unit"],PS["Partial.Unsafe"],PS.Prelude,$foreign.toDateTimeImpl(function(y){return function(mo){return function(d){return function(h){return function(mi){return function(s){return function(ms){return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d),new Data_Time.Time(h,mi,s,ms))}}}}}}}));exports.instant=function(v){if(-86399778816e5<=v&&v<=8639977881599999)return new Data_Maybe.Just(v);if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.DateTime.Instant line 46, column 1 - line 46, column 41: "+[v.constructor.name])},exports.unInstant=function(v){return v},exports.fromDateTime=function(v){return $foreign.fromDateTimeImpl(Data_Date.year(v.value0),Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)),Data_Date.day(v.value0),Data_Time.hour(v.value1),Data_Time.minute(v.value1),Data_Time.second(v.value1),Data_Time.millisecond(v.value1))},exports.toDateTime=toDateTime}(PS["Data.DateTime.Instant"]=PS["Data.DateTime.Instant"]||{}),function(exports){"use strict";PS["Control.Applicative"];var Control_Apply=PS["Control.Apply"],Control_Comonad=(PS["Control.Category"],PS["Control.Comonad"]),Control_Extend=PS["Control.Extend"],Data_Functor=(PS["Data.DateTime"],PS["Data.Eq"],PS["Data.Foldable"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Time_Duration=(PS["Data.Newtype"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.Time.Duration"]),Data_Unit=(PS["Data.Traversable"],PS["Data.Unit"]),LocaleName=(PS.Prelude,function(x){return x}),Locale=function(){function Locale(value0,value1){this.value0=value0,this.value1=value1}return Locale.create=function(value0){return function(value1){return new Locale(value0,value1)}},Locale}(),LocalValue=function(){function LocalValue(value0,value1){this.value0=value0,this.value1=value1}return LocalValue.create=function(value0){return function(value1){return new LocalValue(value0,value1)}},LocalValue}(),genericLocaleName=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.DateTime.Locale.LocaleName"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(LocaleName))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.DateTime.Locale.LocaleName",[{sigConstructor:"Data.DateTime.Locale.LocaleName",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.DateTime.Locale.LocaleName",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericString)(v)}])}),genericLocale=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.DateTime.Locale.Locale"===v.value0&&2===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Locale.create))(Data_Generic.fromSpine(Data_Generic.genericMaybe(genericLocaleName))(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Duration.genericMinutes)(v.value1[1](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.DateTime.Locale.Locale",[{sigConstructor:"Data.DateTime.Locale.Locale",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericMaybe(genericLocaleName))(Data_Generic.anyProxy)},function($dollarq1){return Data_Generic.toSignature(Data_Time_Duration.genericMinutes)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.DateTime.Locale.Locale",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericMaybe(genericLocaleName))(v.value0)},function($dollarq){return Data_Generic.toSpine(Data_Time_Duration.genericMinutes)(v.value1)}])}),functorLocalValue=new Data_Functor.Functor(function(f){return function(v){return new LocalValue(v.value0,f(v.value1))}}),extendLocalValue=new Control_Extend.Extend(function(){return functorLocalValue},function(f){return function(v){return new LocalValue(v.value0,f(v))}}),comonadLocalValue=new Control_Comonad.Comonad(function(){return extendLocalValue},function(v){return v.value1});exports.Locale=Locale,exports.LocaleName=LocaleName,exports.LocalValue=LocalValue,exports.genericLocale=genericLocale,exports.genericLocaleName=genericLocaleName,exports.genericLocalValue=function(dictGeneric){return new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"Data.DateTime.Locale.LocalValue"===v.value0&&2===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(LocalValue.create))(Data_Generic.fromSpine(genericLocale)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(dictGeneric)(v.value1[1](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("Data.DateTime.Locale.LocalValue",[{sigConstructor:"Data.DateTime.Locale.LocalValue",sigValues:[function($dollarq1){return Data_Generic.toSignature(genericLocale)(Data_Generic.anyProxy)},function($dollarq1){return Data_Generic.toSignature(dictGeneric)(Data_Generic.anyProxy)}]}])},function(v){return new Data_Generic.SProd("Data.DateTime.Locale.LocalValue",[function($dollarq){return Data_Generic.toSpine(genericLocale)(v.value0)},function($dollarq){return Data_Generic.toSpine(dictGeneric)(v.value1)}])})},exports.functorLocalValue=functorLocalValue,exports.extendLocalValue=extendLocalValue,exports.comonadLocalValue=comonadLocalValue}(PS["Data.DateTime.Locale"]=PS["Data.DateTime.Locale"]||{}),function(exports){"use strict";var $foreign=PS["Control.Monad.Eff.Now"],Control_Apply=PS["Control.Apply"],Control_Monad_Eff=PS["Control.Monad.Eff"],Data_DateTime=(PS["Control.Semigroupoid"],PS["Data.DateTime"]),Data_DateTime_Instant=PS["Data.DateTime.Instant"],Data_DateTime_Locale=PS["Data.DateTime.Locale"],Data_Functor=PS["Data.Functor"],Data_Maybe=PS["Data.Maybe"],locale=(PS["Data.Time.Duration"],PS.Prelude,Data_Functor.map(Control_Monad_Eff.functorEff)(Data_DateTime_Locale.Locale.create(Data_Maybe.Nothing.value))($foreign.nowOffset)),nowDate=Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_DateTime_Locale.LocalValue.create)(locale))(Data_Functor.map(Control_Monad_Eff.functorEff)(function($0){return Data_DateTime.date(Data_DateTime_Instant.toDateTime($0))})($foreign.now)),nowDateTime=Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_DateTime_Locale.LocalValue.create)(locale))(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_DateTime_Instant.toDateTime)($foreign.now));exports.nowDateTime=nowDateTime,exports.nowDate=nowDate,exports.locale=locale}(PS["Control.Monad.Eff.Now"]=PS["Control.Monad.Eff.Now"]||{}),function(exports){"use strict";(PS["Control.Monad.Eff.Uncurried"]=PS["Control.Monad.Eff.Uncurried"]||{}).runEffFn1=function(fn){return function(a){return function(){return fn(a)}}}}(),function(exports){"use strict";var $foreign=PS["Control.Monad.Eff.Uncurried"];PS["Control.Monad.Eff"];exports.runEffFn1=$foreign.runEffFn1}(PS["Control.Monad.Eff.Uncurried"]=PS["Control.Monad.Eff.Uncurried"]||{}),function(exports){"use strict";var Control_Monad_Aff=PS["Control.Monad.Aff"],MonadFork=(PS["Control.Monad.Error.Class"],PS["Control.Monad.Reader.Trans"],PS["Control.Monad.Trans.Class"],PS["Control.Semigroupoid"],PS.Prelude,function(Functor1,Monad0,fork,join,suspend){this.Functor1=Functor1,this.Monad0=Monad0,this.fork=fork,this.join=join,this.suspend=suspend}),monadForkAff=new MonadFork(function(){return Control_Monad_Aff.functorFiber},function(){return Control_Monad_Aff.monadAff},Control_Monad_Aff.forkAff,Control_Monad_Aff.joinFiber,Control_Monad_Aff.suspendAff);exports.fork=function(dict){return dict.fork},exports.join=function(dict){return dict.join},exports.suspend=function(dict){return dict.suspend},exports.MonadFork=MonadFork,exports.monadForkAff=monadForkAff}(PS["Control.Monad.Fork.Class"]=PS["Control.Monad.Fork.Class"]||{}),function(exports){"use strict";var Data_List=PS["Data.List"],Data_List_Types=PS["Data.List.Types"],Data_Maybe=PS["Data.Maybe"],Data_Tuple=(PS["Data.Semigroup"],PS["Data.Show"],PS["Data.Tuple"]),CatQueue=function(){function CatQueue(value0,value1){this.value0=value0,this.value1=value1}return CatQueue.create=function(value0){return function(value1){return new CatQueue(value0,value1)}},CatQueue}(),empty=new CatQueue(Data_List_Types.Nil.value,Data_List_Types.Nil.value);exports.CatQueue=CatQueue,exports.empty=empty,exports.null=function(v){return v.value0 instanceof Data_List_Types.Nil&&v.value1 instanceof Data_List_Types.Nil},exports.snoc=function(v){return function(a){return new CatQueue(v.value0,new Data_List_Types.Cons(a,v.value1))}},exports.uncons=function($copy_v){var $tco_result,$tco_done=!1;function $tco_loop(v){if(v.value0 instanceof Data_List_Types.Nil&&v.value1 instanceof Data_List_Types.Nil)return $tco_done=!0,Data_Maybe.Nothing.value;if(!(v.value0 instanceof Data_List_Types.Nil)){if(v.value0 instanceof Data_List_Types.Cons)return $tco_done=!0,new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0,new CatQueue(v.value0.value1,v.value1)));throw new Error("Failed pattern match at Data.CatQueue line 50, column 1 - line 50, column 63: "+[v.constructor.name])}$copy_v=new CatQueue(Data_List.reverse(v.value1),Data_List_Types.Nil.value)}for(;!$tco_done;)$tco_result=$tco_loop($copy_v);return $tco_result}}(PS["Data.CatQueue"]=PS["Data.CatQueue"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"],PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Monad"],PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Plus"];var Data_CatQueue=PS["Data.CatQueue"],Data_List_Types=(PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"],PS["Data.List"],PS["Data.List.Types"]),Data_Maybe=PS["Data.Maybe"],Data_Semigroup=(PS["Data.Monoid"],PS["Data.NaturalTransformation"],PS["Data.Semigroup"]),Data_Tuple=(PS["Data.Show"],PS["Data.Traversable"],PS["Data.Tuple"]),CatNil=(PS["Data.Unfoldable"],function(){function CatNil(){}return CatNil.value=new CatNil,CatNil}()),CatCons=function(){function CatCons(value0,value1){this.value0=value0,this.value1=value1}return CatCons.create=function(value0){return function(value1){return new CatCons(value0,value1)}},CatCons}(),link=function(v){return function(cat){if(v instanceof CatNil)return cat;if(v instanceof CatCons)return new CatCons(v.value0,Data_CatQueue.snoc(v.value1)(cat));throw new Error("Failed pattern match at Data.CatList line 110, column 1 - line 110, column 54: "+[v.constructor.name,cat.constructor.name])}},foldr=function(k){return function(b){return function(q){var $copy_xs;return $copy_xs=q,function($copy_ys){var $tco_result,$tco_var_xs=$copy_xs,$tco_done=!1;function $tco_loop(xs,ys){var $copy_c,$copy_v,v=Data_CatQueue.uncons(xs);if(v instanceof Data_Maybe.Nothing)return $tco_done=!0,$copy_v=function(x){return function(i){return i(x)}},$copy_c=b,function($copy_v1){var $tco_result,$tco_var_v=$copy_v,$tco_var_c=$copy_c,$tco_done=!1;function $tco_loop(v,c,v1){if(v1 instanceof Data_List_Types.Nil)return $tco_done=!0,c;if(v1 instanceof Data_List_Types.Cons)return $tco_var_c=($tco_var_v=v)(c)(v1.value0),void($copy_v1=v1.value1);throw new Error("Failed pattern match at Data.CatList line 125, column 3 - line 125, column 59: "+[v.constructor.name,c.constructor.name,v1.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_v,$tco_var_c,$copy_v1);return $tco_result}(ys);if(v instanceof Data_Maybe.Just)return $tco_var_xs=v.value0.value1,void($copy_ys=new Data_List_Types.Cons(k(v.value0.value0),ys));throw new Error("Failed pattern match at Data.CatList line 121, column 14 - line 123, column 67: "+[v.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_xs,$copy_ys);return $tco_result}(Data_List_Types.Nil.value)}}},empty=CatNil.value,append=function(v){return function(v1){return v1 instanceof CatNil?v:v instanceof CatNil?v1:link(v)(v1)}},semigroupCatList=new Data_Semigroup.Semigroup(append);exports.CatNil=CatNil,exports.CatCons=CatCons,exports.empty=empty,exports.append=append,exports.snoc=function(cat){return function(a){return append(cat)(new CatCons(a,Data_CatQueue.empty))}},exports.uncons=function(v){if(v instanceof CatNil)return Data_Maybe.Nothing.value;if(v instanceof CatCons)return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0,Data_CatQueue.null(v.value1)?CatNil.value:foldr(link)(CatNil.value)(v.value1)));throw new Error("Failed pattern match at Data.CatList line 101, column 1 - line 101, column 61: "+[v.constructor.name])},exports.semigroupCatList=semigroupCatList}(PS["Data.CatList"]=PS["Data.CatList"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad=(PS["Control.Category"],PS["Control.Monad"]),Control_Monad_Rec_Class=PS["Control.Monad.Rec.Class"],Data_CatList=(PS["Control.Monad.Trans.Class"],PS["Control.Semigroupoid"],PS["Data.CatList"]),Data_Functor=(PS["Data.Either"],PS["Data.Eq"],PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"]),Data_Maybe=PS["Data.Maybe"],Data_Semigroup=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"]),Free=(PS["Data.Traversable"],PS["Data.Tuple"],PS.Prelude,PS["Unsafe.Coerce"],function(){function Free(value0,value1){this.value0=value0,this.value1=value1}return Free.create=function(value0){return function(value1){return new Free(value0,value1)}},Free}()),Return=function(){function Return(value0){this.value0=value0}return Return.create=function(value0){return new Return(value0)},Return}(),Bind=function(){function Bind(value0,value1){this.value0=value0,this.value1=value1}return Bind.create=function(value0){return function(value1){return new Bind(value0,value1)}},Bind}(),toView=function($copy_v){var $tco_result,$tco_done=!1;function $tco_loop(v){var concatF=function(v2){return function(r){return new Free(v2.value0,Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r))}};if(v.value0 instanceof Return){var v2=Data_CatList.uncons(v.value1);if(v2 instanceof Data_Maybe.Nothing)return $tco_done=!0,new Return(v.value0.value0);if(v2 instanceof Data_Maybe.Just)return void($copy_v=concatF(function(v2){return v2}(v2.value0.value0)(v.value0.value0))(v2.value0.value1));throw new Error("Failed pattern match at Control.Monad.Free line 215, column 7 - line 219, column 64: "+[v2.constructor.name])}if(v.value0 instanceof Bind)return $tco_done=!0,new Bind(v.value0.value0,function(a){return concatF(v.value0.value1(a))(v.value1)});throw new Error("Failed pattern match at Control.Monad.Free line 213, column 3 - line 221, column 56: "+[v.value0.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($copy_v);return $tco_result},fromView=function(f){return new Free(f,Data_CatList.empty)},freeMonad=new Control_Monad.Monad(function(){return freeApplicative},function(){return freeBind}),freeFunctor=new Data_Functor.Functor(function(k){return function(f){return Control_Bind.bindFlipped(freeBind)(function($118){return Control_Applicative.pure(freeApplicative)(k($118))})(f)}}),freeBind=new Control_Bind.Bind(function(){return freeApply},function(v){return function(k){return new Free(v.value0,Data_CatList.snoc(v.value1)(k))}}),freeApply=new Control_Apply.Apply(function(){return freeFunctor},Control_Monad.ap(freeMonad)),freeApplicative=new Control_Applicative.Applicative(function(){return freeApply},function($119){return fromView(Return.create($119))}),liftF=function(f){return fromView(new Bind(f,function($120){return Control_Applicative.pure(freeApplicative)($120)}))},substFree=function(k){var go=function(f){var v=toView(f);if(v instanceof Return)return Control_Applicative.pure(freeApplicative)(v.value0);if(v instanceof Bind)return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));throw new Error("Failed pattern match at Control.Monad.Free line 156, column 10 - line 158, column 33: "+[v.constructor.name])};return go};exports.liftF=liftF,exports.hoistFree=function(k){return substFree(function($121){return liftF(k($121))})},exports.foldFree=function(dictMonadRec){return function(k){return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function(f){var v=toView(f);if(v instanceof Return)return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));if(v instanceof Bind)return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(function($127){return Control_Monad_Rec_Class.Loop.create(v.value1($127))})(k(v.value0));throw new Error("Failed pattern match at Control.Monad.Free line 146, column 10 - line 148, column 37: "+[v.constructor.name])})}},exports.substFree=substFree,exports.freeFunctor=freeFunctor,exports.freeBind=freeBind,exports.freeApplicative=freeApplicative,exports.freeApply=freeApply,exports.freeMonad=freeMonad}(PS["Control.Monad.Free"]=PS["Control.Monad.Free"]||{}),function(exports){"use strict";PS["Control.Monad.State.Class"],PS["Control.Monad.State.Trans"],PS["Control.Semigroupoid"];var Data_Identity=PS["Data.Identity"],Data_Newtype=PS["Data.Newtype"];PS["Data.Tuple"],PS.Prelude;exports.runState=function(v){return function($16){return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(v($16))}},exports.execState=function(v){return function(s){return v(s).value1}}}(PS["Control.Monad.State"]=PS["Control.Monad.State"]||{}),function(exports){"use strict";(PS["DOM.Event.Event"]=PS["DOM.Event.Event"]||{}).currentTarget=function(e){return e.currentTarget}}(),function(exports){"use strict";exports.toForeign=function(value){return value},exports.unsafeFromForeign=function(value){return value},exports.typeOf=function(value){return typeof value},exports.tagOf=function(value){return Object.prototype.toString.call(value).slice(8,-1)},exports.isNull=function(value){return null===value},exports.isUndefined=function(value){return void 0===value}}(PS["Data.Foreign"]=PS["Data.Foreign"]||{}),function(exports){"use strict";var $foreign=PS["Data.Foreign"],Control_Applicative=PS["Control.Applicative"],Control_Monad_Error_Class=PS["Control.Monad.Error.Class"],Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Data_Boolean=(PS["Control.Semigroupoid"],PS["Data.Boolean"]),Data_Identity=(PS["Data.Either"],PS["Data.Eq"],PS["Data.Function"],PS["Data.HeytingAlgebra"],PS["Data.Identity"]),Data_List_NonEmpty=(PS["Data.Int"],PS["Data.List.NonEmpty"]),TypeMismatch=(PS["Data.Maybe"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.String"],PS.Prelude,function(){function TypeMismatch(value0,value1){this.value0=value0,this.value1=value1}return TypeMismatch.create=function(value0){return function(value1){return new TypeMismatch(value0,value1)}},TypeMismatch}()),ErrorAtProperty=function(){function ErrorAtProperty(value0,value1){this.value0=value0,this.value1=value1}return ErrorAtProperty.create=function(value0){return function(value1){return new ErrorAtProperty(value0,value1)}},ErrorAtProperty}(),JSONError=function(){function JSONError(value0){this.value0=value0}return JSONError.create=function(value0){return new JSONError(value0)},JSONError}(),fail=function($121){return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121))},unsafeReadTagged=function(tag){return function(value){if($foreign.tagOf(value)===tag)return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));if(Data_Boolean.otherwise)return fail(new TypeMismatch(tag,$foreign.tagOf(value)));throw new Error("Failed pattern match at Data.Foreign line 104, column 1 - line 104, column 55: "+[tag.constructor.name,value.constructor.name])}},readString=unsafeReadTagged("String");exports.TypeMismatch=TypeMismatch,exports.ErrorAtProperty=ErrorAtProperty,exports.JSONError=JSONError,exports.unsafeReadTagged=unsafeReadTagged,exports.readString=readString,exports.fail=fail,exports.toForeign=$foreign.toForeign,exports.typeOf=$foreign.typeOf,exports.isNull=$foreign.isNull,exports.isUndefined=$foreign.isUndefined}(PS["Data.Foreign"]=PS["Data.Foreign"]||{}),function(exports){"use strict";PS["DOM.Event.Types"],PS["DOM.Util.FFI"],PS["Data.Eq"],PS["Data.Foreign"],PS["Data.Newtype"],PS["Data.Ord"],PS.Prelude;var elementToNode=PS["Unsafe.Coerce"].unsafeCoerce;exports.elementToNode=elementToNode}(PS["DOM.Node.Types"]=PS["DOM.Node.Types"]||{}),function(exports){"use strict";var $foreign=PS["DOM.Event.Event"];PS["Control.Monad.Eff"],PS["Control.Semigroupoid"],PS.DOM,PS["DOM.Event.EventPhase"],PS["DOM.Event.Types"],PS["DOM.Node.Types"],PS["Data.Enum"],PS["Data.Maybe"],PS.Prelude;exports.currentTarget=$foreign.currentTarget}(PS["DOM.Event.Event"]=PS["DOM.Event.Event"]||{}),function(exports){"use strict";exports.eventListener=function(fn){return function(event){return fn(event)()}},exports.addEventListener=function(type){return function(listener){return function(useCapture){return function(target){return function(){return target.addEventListener(type,listener,useCapture),{}}}}}},exports.removeEventListener=function(type){return function(listener){return function(useCapture){return function(target){return function(){return target.removeEventListener(type,listener,useCapture),{}}}}}}}(PS["DOM.Event.EventTarget"]=PS["DOM.Event.EventTarget"]||{}),function(exports){"use strict";var $foreign=PS["DOM.Event.EventTarget"];PS["Control.Monad.Eff"],PS["Control.Monad.Eff.Exception"],PS.DOM,PS["DOM.Event.Types"],PS.Prelude;exports.eventListener=$foreign.eventListener,exports.addEventListener=$foreign.addEventListener,exports.removeEventListener=$foreign.removeEventListener}(PS["DOM.Event.EventTarget"]=PS["DOM.Event.EventTarget"]||{}),function(exports){"use strict";(PS["DOM.HTML"]=PS["DOM.HTML"]||{}).window=function(){return window}}(),function(exports){"use strict";(PS["DOM.HTML.Types"]=PS["DOM.HTML.Types"]||{})._readHTMLElement=function(failure){return function(success){return function(value){var tag=Object.prototype.toString.call(value);return 0===tag.indexOf("[object HTML")&&tag.indexOf("Element]")===tag.length-8?success(value):failure(tag)}}}}(),function(exports){"use strict";var $foreign=PS["DOM.HTML.Types"],Control_Applicative=PS["Control.Applicative"],Control_Monad_Except_Trans=(PS["Control.Monad.Eff"],PS["Control.Monad.Except.Trans"]),Data_Either=(PS["Control.Semigroupoid"],PS["DOM.Event.Types"],PS["DOM.Node.Types"],PS["Data.Either"]),Data_Foreign=PS["Data.Foreign"],Data_Identity=PS["Data.Identity"],Data_List_Types=PS["Data.List.Types"],Unsafe_Coerce=(PS.Prelude,PS["Unsafe.Coerce"]),windowToEventTarget=Unsafe_Coerce.unsafeCoerce,readHTMLElement=$foreign._readHTMLElement(function($0){return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create("HTMLElement")($0))))})(function($1){return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1))}),htmlElementToNode=Unsafe_Coerce.unsafeCoerce,htmlDocumentToParentNode=Unsafe_Coerce.unsafeCoerce,htmlDocumentToDocument=Unsafe_Coerce.unsafeCoerce;exports.windowToEventTarget=windowToEventTarget,exports.htmlDocumentToDocument=htmlDocumentToDocument,exports.htmlDocumentToParentNode=htmlDocumentToParentNode,exports.htmlElementToNode=htmlElementToNode,exports.readHTMLElement=readHTMLElement}(PS["DOM.HTML.Types"]=PS["DOM.HTML.Types"]||{}),function(exports){"use strict";var $foreign=PS["DOM.HTML"];PS["Control.Monad.Eff"],PS.DOM,PS["DOM.HTML.Types"];exports.window=$foreign.window}(PS["DOM.HTML"]=PS["DOM.HTML"]||{}),function(exports){"use strict";(PS["DOM.HTML.Document"]=PS["DOM.HTML.Document"]||{})._readyState=function(doc){return function(){return doc.readyState}}}(),function(exports){"use strict";PS["Data.Bounded"],PS["Data.Enum"],PS["Data.Eq"];var Data_Maybe=PS["Data.Maybe"],Loading=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Show"],PS.Prelude,function(){function Loading(){}return Loading.value=new Loading,Loading}()),Interactive=function(){function Interactive(){}return Interactive.value=new Interactive,Interactive}(),Complete=function(){function Complete(){}return Complete.value=new Complete,Complete}();exports.Loading=Loading,exports.Interactive=Interactive,exports.Complete=Complete,exports.parseReadyState=function(v){return"loading"===v?new Data_Maybe.Just(Loading.value):"interactive"===v?new Data_Maybe.Just(Interactive.value):"complete"===v?new Data_Maybe.Just(Complete.value):Data_Maybe.Nothing.value}}(PS["DOM.HTML.Document.ReadyState"]=PS["DOM.HTML.Document.ReadyState"]||{}),function(exports){"use strict";exports.null=null,exports.nullable=function(a,r,f){return null==a?r:f(a)},exports.notNull=function(x){return x}}(PS["Data.Nullable"]=PS["Data.Nullable"]||{}),function(exports){"use strict";var $foreign=PS["Data.Nullable"],Data_Maybe=(PS["Control.Semigroupoid"],PS["Data.Eq"],PS["Data.Function"],PS["Data.Function.Uncurried"],PS["Data.Maybe"]),toNullable=(PS["Data.Ord"],PS["Data.Show"],PS.Prelude,Data_Maybe.maybe($foreign.null)($foreign.notNull));exports.toMaybe=function(n){return $foreign.nullable(n,Data_Maybe.Nothing.value,Data_Maybe.Just.create)},exports.toNullable=toNullable}(PS["Data.Nullable"]=PS["Data.Nullable"]||{}),function(exports){"use strict";var $foreign=PS["DOM.HTML.Document"],Control_Monad_Eff=PS["Control.Monad.Eff"],DOM_HTML_Document_ReadyState=(PS["Control.Semigroupoid"],PS.DOM,PS["DOM.HTML.Document.ReadyState"]),Data_Functor=(PS["DOM.HTML.Types"],PS["Data.Functor"]),Data_Maybe=PS["Data.Maybe"];PS["Data.Nullable"],PS["Partial.Unsafe"],PS.Prelude;exports.readyState=function($1){return Data_Functor.map(Control_Monad_Eff.functorEff)(function($2){return Data_Maybe.fromJust()(DOM_HTML_Document_ReadyState.parseReadyState($2))})($foreign._readyState($1))}}(PS["DOM.HTML.Document"]=PS["DOM.HTML.Document"]||{}),function(exports){"use strict";PS["DOM.Event.Types"];exports.click="click",exports.input="input",exports.load="load",exports.message="message"}(PS["DOM.HTML.Event.EventTypes"]=PS["DOM.HTML.Event.EventTypes"]||{}),function(exports){"use strict";(PS["DOM.HTML.Extras"]=PS["DOM.HTML.Extras"]||{}).messageDataImpl=function(evt){return function(){return evt.data}}}(),function(exports){"use strict";var $foreign=PS["DOM.HTML.Extras"],Control_Monad_Eff=(PS["Control.Applicative"],PS["Control.Bind"],PS["Control.Monad.Eff"]),Data_Functor=(PS["Control.Monad.Eff.Exception"],PS["Control.Semigroupoid"],PS["DOM.Event.Types"],PS["DOM.HTML.Types"],PS["Data.Eq"],PS["Data.Function"],PS["Data.Functor"]),Data_Nullable=(PS["Data.Maybe"],PS["Data.Nullable"]);PS["Data.Traversable"],PS.Prelude;exports.messageData=function($6){return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign.messageDataImpl($6))}}(PS["DOM.HTML.Extras"]=PS["DOM.HTML.Extras"]||{}),function(exports){"use strict";var InputButton=function(){function InputButton(){}return InputButton.value=new InputButton,InputButton}(),InputCheckbox=function(){function InputCheckbox(){}return InputCheckbox.value=new InputCheckbox,InputCheckbox}(),InputColor=function(){function InputColor(){}return InputColor.value=new InputColor,InputColor}(),InputDate=function(){function InputDate(){}return InputDate.value=new InputDate,InputDate}(),InputDatetimeLocal=function(){function InputDatetimeLocal(){}return InputDatetimeLocal.value=new InputDatetimeLocal,InputDatetimeLocal}(),InputEmail=function(){function InputEmail(){}return InputEmail.value=new InputEmail,InputEmail}(),InputFile=function(){function InputFile(){}return InputFile.value=new InputFile,InputFile}(),InputHidden=function(){function InputHidden(){}return InputHidden.value=new InputHidden,InputHidden}(),InputImage=function(){function InputImage(){}return InputImage.value=new InputImage,InputImage}(),InputMonth=function(){function InputMonth(){}return InputMonth.value=new InputMonth,InputMonth}(),InputNumber=function(){function InputNumber(){}return InputNumber.value=new InputNumber,InputNumber}(),InputPassword=function(){function InputPassword(){}return InputPassword.value=new InputPassword,InputPassword}(),InputRadio=function(){function InputRadio(){}return InputRadio.value=new InputRadio,InputRadio}(),InputRange=function(){function InputRange(){}return InputRange.value=new InputRange,InputRange}(),InputReset=function(){function InputReset(){}return InputReset.value=new InputReset,InputReset}(),InputSearch=function(){function InputSearch(){}return InputSearch.value=new InputSearch,InputSearch}(),InputSubmit=function(){function InputSubmit(){}return InputSubmit.value=new InputSubmit,InputSubmit}(),InputTel=function(){function InputTel(){}return InputTel.value=new InputTel,InputTel}(),InputText=function(){function InputText(){}return InputText.value=new InputText,InputText}(),InputTime=function(){function InputTime(){}return InputTime.value=new InputTime,InputTime}(),InputUrl=function(){function InputUrl(){}return InputUrl.value=new InputUrl,InputUrl}(),InputWeek=function(){function InputWeek(){}return InputWeek.value=new InputWeek,InputWeek}();exports.InputButton=InputButton,exports.InputCheckbox=InputCheckbox,exports.InputColor=InputColor,exports.InputDate=InputDate,exports.InputDatetimeLocal=InputDatetimeLocal,exports.InputEmail=InputEmail,exports.InputFile=InputFile,exports.InputHidden=InputHidden,exports.InputImage=InputImage,exports.InputMonth=InputMonth,exports.InputNumber=InputNumber,exports.InputPassword=InputPassword,exports.InputRadio=InputRadio,exports.InputRange=InputRange,exports.InputReset=InputReset,exports.InputSearch=InputSearch,exports.InputSubmit=InputSubmit,exports.InputTel=InputTel,exports.InputText=InputText,exports.InputTime=InputTime,exports.InputUrl=InputUrl,exports.InputWeek=InputWeek,exports.renderInputType=function(v){if(v instanceof InputButton)return"button";if(v instanceof InputCheckbox)return"checkbox";if(v instanceof InputColor)return"color";if(v instanceof InputDate)return"date";if(v instanceof InputDatetimeLocal)return"datetime-local";if(v instanceof InputEmail)return"email";if(v instanceof InputFile)return"file";if(v instanceof InputHidden)return"hidden";if(v instanceof InputImage)return"image";if(v instanceof InputMonth)return"month";if(v instanceof InputNumber)return"number";if(v instanceof InputPassword)return"password";if(v instanceof InputRadio)return"radio";if(v instanceof InputRange)return"range";if(v instanceof InputReset)return"reset";if(v instanceof InputSearch)return"search";if(v instanceof InputSubmit)return"submit";if(v instanceof InputTel)return"tel";if(v instanceof InputText)return"text";if(v instanceof InputTime)return"time";if(v instanceof InputUrl)return"url";if(v instanceof InputWeek)return"week";throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType line 28, column 19 - line 50, column 16: "+[v.constructor.name])}}(PS["DOM.HTML.Indexed.InputType"]=PS["DOM.HTML.Indexed.InputType"]||{}),function(exports){"use strict";var Data_Show=PS["Data.Show"],Any=(PS.Prelude,function(){function Any(){}return Any.value=new Any,Any}()),Step=function(){function Step(value0){this.value0=value0}return Step.create=function(value0){return new Step(value0)},Step}();exports.Any=Any,exports.Step=Step,exports.renderStepValue=function(v){if(v instanceof Any)return"any";if(v instanceof Step)return Data_Show.show(Data_Show.showNumber)(v.value0);throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue line 10, column 19 - line 12, column 18: "+[v.constructor.name])}}(PS["DOM.HTML.Indexed.StepValue"]=PS["DOM.HTML.Indexed.StepValue"]||{}),function(exports){"use strict";exports.document=function(window){return function(){return window.document}},exports._open=function(url){return function(name){return function(features){return function(window){return function(){return window.open(url,name,features)}}}}},exports.url=function(window){return function(){return window.URL}}}(PS["DOM.HTML.Window"]=PS["DOM.HTML.Window"]||{}),function(exports){"use strict";var $foreign=PS["DOM.HTML.Window"],Control_Monad_Eff=PS["Control.Monad.Eff"],Data_Functor=(PS["Control.Semigroupoid"],PS.DOM,PS["DOM.HTML.Types"],PS["DOM.WebStorage.Types"],PS["Data.Eq"],PS["Data.Functor"]),Data_Nullable=(PS["Data.Maybe"],PS["Data.Newtype"],PS["Data.Nullable"]);PS["Data.Ord"],PS.Prelude;exports.open=function(url$prime){return function(name){return function(features){return function(window){return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._open(url$prime)(name)(features)(window))}}}},exports.document=$foreign.document}(PS["DOM.HTML.Window"]=PS["DOM.HTML.Window"]||{}),function(exports){"use strict";var getEffProp=function(name){return function(node){return function(){return node[name]}}};exports._parentNode=getEffProp("parentNode"),exports._nextSibling=getEffProp("nextSibling"),exports.insertBefore=function(node1){return function(node2){return function(parent){return function(){return parent.insertBefore(node1,node2)}}}},exports.appendChild=function(node){return function(parent){return function(){return parent.appendChild(node)}}},exports.removeChild=function(node){return function(parent){return function(){return parent.removeChild(node)}}}}(PS["DOM.Node.Node"]=PS["DOM.Node.Node"]||{}),function(exports){"use strict";var $foreign=PS["DOM.Node.Node"],Control_Monad_Eff=PS["Control.Monad.Eff"],Data_Functor=(PS["Control.Semigroupoid"],PS.DOM,PS["DOM.Node.NodeType"],PS["DOM.Node.Types"],PS["Data.Enum"],PS["Data.Functor"]),Data_Nullable=(PS["Data.Maybe"],PS["Data.Nullable"]);PS.Prelude;exports.parentNode=function($2){return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._parentNode($2))},exports.nextSibling=function($6){return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._nextSibling($6))},exports.insertBefore=$foreign.insertBefore,exports.appendChild=$foreign.appendChild,exports.removeChild=$foreign.removeChild}(PS["DOM.Node.Node"]=PS["DOM.Node.Node"]||{}),function(exports){"use strict";(PS["DOM.Node.ParentNode"]=PS["DOM.Node.ParentNode"]||{})._querySelector=function(selector){return function(node){return function(){return node.querySelector(selector)}}}}(),function(exports){"use strict";var $foreign=PS["DOM.Node.ParentNode"],Control_Monad_Eff=PS["Control.Monad.Eff"],Data_Functor=(PS["Control.Semigroupoid"],PS.DOM,PS["DOM.Node.Types"],PS["Data.Eq"],PS["Data.Functor"]),Data_Nullable=(PS["Data.Maybe"],PS["Data.Newtype"],PS["Data.Nullable"]);PS["Data.Ord"],PS.Prelude;exports.querySelector=function(qs){return function($3){return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._querySelector(qs)($3))}}}(PS["DOM.Node.ParentNode"]=PS["DOM.Node.ParentNode"]||{}),function(exports){"use strict";function id(x){return x}exports.fromBoolean=id,exports.fromNumber=id,exports.fromString=id,exports.fromArray=id,exports.fromObject=id,exports.jsonNull=null,exports.stringify=function(j){return JSON.stringify(j)};var objToString=Object.prototype.toString;exports._foldJson=function(isNull,isBool,isNum,isStr,isArr,isObj,j){return null==j?isNull(null):"boolean"==typeof j?isBool(j):"number"==typeof j?isNum(j):"string"==typeof j?isStr(j):"[object Array]"===objToString.call(j)?isArr(j):isObj(j)}}(PS["Data.Argonaut.Core"]=PS["Data.Argonaut.Core"]||{}),function(exports){"use strict";exports._copyEff=function(m){return function(){var r={};for(var k in m)hasOwnProperty.call(m,k)&&(r[k]=m[k]);return r}},exports.empty={},exports.runST=function(f){return f},exports._lookup=function(no,yes,k,m){return k in m?yes(m[k]):no}}(PS["Data.StrMap"]=PS["Data.StrMap"]||{}),function(exports){"use strict";exports.new=function(){return{}},exports.poke=function(m){return function(k){return function(v){return function(){return m[k]=v,m}}}},exports.delete=function(m){return function(k){return function(){return delete m[k],m}}}}(PS["Data.StrMap.ST"]=PS["Data.StrMap.ST"]||{}),function(exports){"use strict";var $foreign=PS["Data.StrMap.ST"];PS["Control.Monad.Eff"],PS["Control.Monad.ST"],PS["Data.Maybe"];exports.new=$foreign.new,exports.poke=$foreign.poke,exports.delete=$foreign.delete}(PS["Data.StrMap.ST"]=PS["Data.StrMap.ST"]||{}),function(exports){"use strict";var $foreign=PS["Data.StrMap"],Control_Monad_Eff=(PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Category"],PS["Control.Monad.Eff"]),Data_Function_Uncurried=(PS["Control.Monad.ST"],PS["Control.Semigroupoid"],PS["Data.Array"],PS["Data.Eq"],PS["Data.Foldable"],PS["Data.FoldableWithIndex"],PS["Data.Function"],PS["Data.Function.Uncurried"]),Data_Functor=PS["Data.Functor"],Data_Maybe=(PS["Data.FunctorWithIndex"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_StrMap_ST=(PS["Data.Monoid"],PS["Data.Ord"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.StrMap.ST"]),thawST=(PS["Data.Traversable"],PS["Data.TraversableWithIndex"],PS["Data.Tuple"],PS["Data.Unfoldable"],PS.Prelude,$foreign._copyEff),pureST=function(f){return Control_Monad_Eff.runPure($foreign.runST(f))},mutate=function(f){return function(m){return pureST(function(){var v=thawST(m)();f(v)();return v})}},lookup=Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create),insert=function(k){return function(v){return mutate(function(s){return Data_Functor.void(Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v))})}},$$delete=function(k){return mutate(function(s){return Data_Functor.void(Control_Monad_Eff.functorEff)(Data_StrMap_ST.delete(s)(k))})};exports.singleton=function(k){return function(v){return pureST(function(){var v1=Data_StrMap_ST.new();return Data_StrMap_ST.poke(v1)(k)(v)()})}},exports.insert=insert,exports.lookup=lookup,exports.delete=$$delete,exports.alter=function(f){return function(k){return function(m){var v=f(lookup(k)(m));if(v instanceof Data_Maybe.Nothing)return $$delete(k)(m);if(v instanceof Data_Maybe.Just)return insert(k)(v.value0)(m);throw new Error("Failed pattern match at Data.StrMap line 213, column 15 - line 215, column 25: "+[v.constructor.name])}}},exports.thawST=thawST,exports.pureST=pureST,exports.empty=$foreign.empty}(PS["Data.StrMap"]=PS["Data.StrMap"]||{}),function(exports){"use strict";var $foreign=PS["Data.Argonaut.Core"],Data_Function=(PS["Data.Eq"],PS["Data.Function"]),Data_Maybe=(PS["Data.Function.Uncurried"],PS["Data.Maybe"]),Data_Show=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Show"]),verbJsonType=(PS["Data.StrMap"],PS["Data.Tuple"],PS.Prelude,PS["Unsafe.Coerce"],function(def){return function(f){return function(fold){return fold(def)(f)}}}),toJsonType=verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create),showJson=new Data_Show.Show($foreign.stringify),isJsonType=verbJsonType(!1)(Data_Function.const(!0)),foldJsonString=function(d){return function(f){return function(j){return $foreign._foldJson(Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),f,Data_Function.const(d),Data_Function.const(d),j)}}},toString=toJsonType(foldJsonString),foldJsonObject=function(d){return function(f){return function(j){return $foreign._foldJson(Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),f,j)}}},toObject=toJsonType(foldJsonObject),foldJsonNumber=function(d){return function(f){return function(j){return $foreign._foldJson(Data_Function.const(d),Data_Function.const(d),f,Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),j)}}},toNumber=toJsonType(foldJsonNumber),foldJsonNull=function(d){return function(f){return function(j){return $foreign._foldJson(f,Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),j)}}},isNull=isJsonType(foldJsonNull),foldJsonBoolean=function(d){return function(f){return function(j){return $foreign._foldJson(Data_Function.const(d),f,Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),j)}}},toBoolean=toJsonType(foldJsonBoolean),foldJsonArray=function(d){return function(f){return function(j){return $foreign._foldJson(Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),Data_Function.const(d),f,Data_Function.const(d),j)}}},toArray=toJsonType(foldJsonArray);exports.foldJsonNull=foldJsonNull,exports.foldJsonBoolean=foldJsonBoolean,exports.foldJsonNumber=foldJsonNumber,exports.foldJsonString=foldJsonString,exports.foldJsonArray=foldJsonArray,exports.foldJsonObject=foldJsonObject,exports.isNull=isNull,exports.toBoolean=toBoolean,exports.toNumber=toNumber,exports.toString=toString,exports.toArray=toArray,exports.toObject=toObject,exports.showJson=showJson,exports.fromBoolean=$foreign.fromBoolean,exports.fromNumber=$foreign.fromNumber,exports.fromString=$foreign.fromString,exports.fromArray=$foreign.fromArray,exports.fromObject=$foreign.fromObject,exports.jsonNull=$foreign.jsonNull,exports.stringify=$foreign.stringify}(PS["Data.Argonaut.Core"]=PS["Data.Argonaut.Core"]||{}),function(exports){"use strict";PS["Data.Argonaut.Core"],PS["Data.Either"],PS["Data.Generic"],PS["Data.Maybe"];var TaggedObject=function(){function TaggedObject(value0){this.value0=value0}return TaggedObject.create=function(value0){return new TaggedObject(value0)},TaggedObject}();exports.Options=function(x){return x},exports.TaggedObject=TaggedObject}(PS["Data.Argonaut.Generic.Options"]=PS["Data.Argonaut.Generic.Options"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Foldable=(PS["Data.Eq"],PS["Data.Foldable"]),Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_HeytingAlgebra=PS["Data.HeytingAlgebra"],Data_Maybe=PS["Data.Maybe"],Data_String=(PS["Data.Semiring"],PS["Data.String"]),Data_Unit=PS["Data.Unit"],Type_Proxy=(PS.Prelude,PS["Type.Proxy"]),allConstructorsNullary=Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function($18){return Data_Array.null($18.sigValues)});exports.allConstructorsNullary=allConstructorsNullary,exports.isUnaryRecord=function(constrSigns){return 1===Data_Array.length(constrSigns)},exports.stripModulePath=function(constr){var v=Data_String.lastIndexOf(".")(constr);if(v instanceof Data_Maybe.Nothing)return constr;if(v instanceof Data_Maybe.Just)return Data_String.drop(v.value0+1|0)(constr);throw new Error("Failed pattern match at Data.Argonaut.Generic.Util line 21, column 26 - line 23, column 48: "+[v.constructor.name])},exports.spineIsRecord=function(r){return r instanceof Data_Generic.SRecord},exports.constructorIsRecord=function(constr){return Data_Maybe.fromMaybe(!1)(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function(v){return v(Data_Unit.unit)})(Data_Array.head(constr.sigValues)))(function(v){return v instanceof Data_Generic.SigRecord?Control_Applicative.pure(Data_Maybe.applicativeMaybe)(!0):Control_Applicative.pure(Data_Maybe.applicativeMaybe)(!1)}))},exports.sigIsMaybe=function(sig){var v,maybeConstructor=(v=Data_Generic.toSignature(Data_Generic.genericMaybe(Data_Generic.genericInt))(Type_Proxy.Proxy.value))instanceof Data_Generic.SigProd?v.value0:"";return sig instanceof Data_Generic.SigProd&&sig.value0===maybeConstructor}}(PS["Data.Argonaut.Generic.Util"]=PS["Data.Argonaut.Generic.Util"]||{}),function(exports){"use strict";var Data_Array=PS["Data.Array"];PS["Data.Ring"],PS.Prelude;exports.head=function(dictPartial){return function(xs){return xs[0]}},exports.tail=function(dictPartial){return function(xs){return Data_Array.slice(1)(Data_Array.length(xs))(xs)}}}(PS["Data.Array.Partial"]=PS["Data.Array.Partial"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Data_Argonaut_Core=(PS["Control.Semigroupoid"],PS["Data.Argonaut.Core"]),Data_Argonaut_Generic_Util=(PS["Data.Argonaut.Generic.Options"],PS["Data.Argonaut.Generic.Util"]),Data_Array=PS["Data.Array"],Data_Array_Partial=PS["Data.Array.Partial"],Data_Either=PS["Data.Either"],Data_Foldable=(PS["Data.Eq"],PS["Data.Foldable"]),Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Generic=PS["Data.Generic"],Data_Int=(PS["Data.HeytingAlgebra"],PS["Data.Int"]),Data_Maybe=PS["Data.Maybe"],Data_StrMap=(PS["Data.Semigroup"],PS["Data.StrMap"]),Data_String=PS["Data.String"],Data_Traversable=PS["Data.Traversable"],Data_Unit=PS["Data.Unit"],Type_Proxy=(PS["Partial.Unsafe"],PS.Prelude,PS["Type.Proxy"]),mFail=function(msg){return Data_Maybe.maybe(new Data_Either.Left("Generic json decoding failed: "+msg))(Data_Either.Right.create)},mFail$prime=function(msg){return function(json){return mFail(msg+": '"+Data_Argonaut_Core.stringify(json)+"'")}},genericUserDecodeJson$prime=function(v){return function(sign){return function(json){return Data_Maybe.fromMaybe(genericDecodeJson$prime(v)(sign)(json))(v.userDecoding(v)(sign)(json))}}},genericDecodeProdJson$prime=function(v){return function(tname){return function(constrSigns){return function(json){var decodingErr=function(msg){return"When decoding a "+tname+": "+msg},findConstrFail=function(tag){return mFail(decodingErr("'"+tag+"' isn't a valid constructor"))(function(tag){return Data_Foldable.find(Data_Foldable.foldableArray)(function($63){return v1=v.constructorTagModifier($63.sigConstructor),tag===v1;var v1})(constrSigns)}(tag))},decodeFromString=Control_Bind.bind(Data_Either.bindEither)(mFail$prime(decodingErr("Constructor name as string expected"))(json)(Data_Argonaut_Core.toString(json)))(function(v1){return Control_Bind.bind(Data_Either.bindEither)(findConstrFail(v1))(function(v2){return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd(v2.sigConstructor,[]))})}),decodeConstructor=function(constr){return function(jVals){return Control_Bind.bind(Data_Either.bindEither)((v.flattenContentsArray||v.sumEncoding.value0.unpackRecords)&&1===Data_Array.length(constr.sigValues)?Control_Applicative.pure(Data_Either.applicativeEither)([jVals]):mFail$prime(decodingErr("Expected array"))(json)(Data_Argonaut_Core.toArray(jVals)))(function(v1){return Control_Bind.bind(Data_Either.bindEither)(Data_Array.zipWithA(Data_Either.applicativeEither)(function(k){return genericUserDecodeJson$prime(v)(k(Data_Unit.unit))})(constr.sigValues)(v1))(function(v2){return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd(constr.sigConstructor,Data_Functor.map(Data_Functor.functorArray)(Data_Function.const)(v2)))})})}},decodeTagged=Control_Bind.bind(Data_Either.bindEither)(mFail$prime(decodingErr("expected an object"))(json)(Data_Argonaut_Core.toObject(json)))(function(v1){return Control_Bind.bind(Data_Either.bindEither)(mFail$prime(decodingErr("'")+(v.sumEncoding.value0.tagFieldName+"' property is missing"))(json)(Data_StrMap.lookup(v.sumEncoding.value0.tagFieldName)(v1)))(function(v2){return Control_Bind.bind(Data_Either.bindEither)(mFail$prime(decodingErr("'")+(v.sumEncoding.value0.tagFieldName+"' property is not a string"))(json)(Data_Argonaut_Core.toString(v2)))(function(v3){return Control_Bind.bind(Data_Either.bindEither)(findConstrFail(v3))(function(v4){return Control_Bind.bind(Data_Either.bindEither)(function(){if(v.sumEncoding.value0.unpackRecords&&Data_Argonaut_Generic_Util.constructorIsRecord(v4))return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Argonaut_Core.fromObject(Data_StrMap.delete(v.sumEncoding.value0.tagFieldName)(v1)));var v5=Data_StrMap.lookup(v.sumEncoding.value0.contentsFieldName)(v1);if(v5 instanceof Data_Maybe.Nothing)return v.flattenContentsArray?Data_Either.Right.create(Data_Argonaut_Core.fromArray([])):new Data_Either.Left(decodingErr("'")+(v.sumEncoding.value0.contentsFieldName+"' property is missing"));if(v5 instanceof Data_Maybe.Just)return new Data_Either.Right(v5.value0);throw new Error("Failed pattern match at Data.Argonaut.Generic.Decode line 89, column 21 - line 93, column 48: "+[v5.constructor.name])}())(function(v5){return decodeConstructor(v4)(v5)})})})})});return function(dictPartial){if(!v.encodeSingleConstructors&&Data_Argonaut_Generic_Util.isUnaryRecord(constrSigns)){var constr=Data_Array_Partial.head(void 0)(constrSigns);return decodeConstructor(constr)(json)}return v.allNullaryToStringTag&&Data_Argonaut_Generic_Util.allConstructorsNullary(constrSigns)?decodeFromString:decodeTagged}()}}}},genericDecodeJson$prime=function(v){return function(signature){return function(json){if(signature instanceof Data_Generic.SigNumber)return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SNumber.create)(mFail$prime("Expected a number")(json)(Data_Argonaut_Core.toNumber(json)));if(signature instanceof Data_Generic.SigInt)return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SInt.create)(mFail$prime("Expected an integer number")(json)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Int.fromNumber)(Data_Argonaut_Core.toNumber(json))));if(signature instanceof Data_Generic.SigString)return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SString.create)(mFail$prime("Expected a string")(json)(Data_Argonaut_Core.toString(json)));if(signature instanceof Data_Generic.SigChar)return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SChar.create)(mFail$prime("Expected a char")(json)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_String.toChar)(Data_Argonaut_Core.toString(json))));if(signature instanceof Data_Generic.SigBoolean)return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SBoolean.create)(mFail$prime("Expected a boolean")(json)(Data_Argonaut_Core.toBoolean(json)));if(signature instanceof Data_Generic.SigUnit)return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Generic.SUnit.value);if(signature instanceof Data_Generic.SigArray)return Control_Bind.bind(Data_Either.bindEither)(mFail$prime("Expected an array")(json)(Data_Argonaut_Core.toArray(json)))(function(v1){return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SArray.create)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(function($64){return Data_Functor.map(Data_Either.functorEither)(Data_Function.const)(genericUserDecodeJson$prime(v)(signature.value0(Data_Unit.unit))($64))})(v1))});if(signature instanceof Data_Generic.SigRecord)return Control_Bind.bind(Data_Either.bindEither)(mFail$prime("Expected an object")(json)(Data_Argonaut_Core.toObject(json)))(function(v1){return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SRecord.create)(Data_Traversable.for(Data_Either.applicativeEither)(Data_Traversable.traversableArray)(signature.value0)(function(v2){var jLabel=v.fieldLabelModifier(v2.recLabel),propSig=v2.recValue(Data_Unit.unit);return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Generic_Util.sigIsMaybe(propSig)&&v.omitNothingFields?Data_Maybe.maybe(new Data_Either.Right(Data_Argonaut_Core.jsonNull))(Data_Either.Right.create)(Data_StrMap.lookup(jLabel)(v1)):mFail$prime("'"+jLabel+"' property missing")(json)(Data_StrMap.lookup(jLabel)(v1)))(function(v3){return Control_Bind.bind(Data_Either.bindEither)(genericUserDecodeJson$prime(v)(propSig)(v3))(function(v4){return Control_Applicative.pure(Data_Either.applicativeEither)({recLabel:v2.recLabel,recValue:Data_Function.const(v4)})})})}))});if(signature instanceof Data_Generic.SigProd)return genericDecodeProdJson$prime(v)(signature.value0)(signature.value1)(json);throw new Error("Failed pattern match at Data.Argonaut.Generic.Decode line 44, column 58 - line 64, column 93: "+[signature.constructor.name])}}};exports.genericDecodeJson=function(dictGeneric){return function(opts){return function(json){return Control_Bind.bindFlipped(Data_Either.bindEither)(function($65){return Data_Maybe.maybe(new Data_Either.Left("fromSpine failed"))(Data_Either.Right.create)(Data_Generic.fromSpine(dictGeneric)($65))})(genericUserDecodeJson$prime(opts)(Data_Generic.toSignature(dictGeneric)(Type_Proxy.Proxy.value))(json))}}},exports["genericUserDecodeJson'"]=genericUserDecodeJson$prime,exports.mFail=mFail}(PS["Data.Argonaut.Generic.Decode"]=PS["Data.Argonaut.Generic.Decode"]||{}),function(exports){"use strict";var Control_Bind=PS["Control.Bind"],Control_MonadZero=(PS["Control.MonadPlus"],PS["Control.MonadZero"]),Data_Argonaut_Core=(PS["Control.Semigroupoid"],PS["Data.Argonaut.Core"]),Data_Argonaut_Generic_Util=(PS["Data.Argonaut.Generic.Options"],PS["Data.Argonaut.Generic.Util"]),Data_Array=PS["Data.Array"],Data_Array_Partial=PS["Data.Array.Partial"],Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_Int=(PS["Data.HeytingAlgebra"],PS["Data.Int"]),Data_Maybe=PS["Data.Maybe"],Data_StrMap=PS["Data.StrMap"],Data_String=PS["Data.String"],Data_Tuple=PS["Data.Tuple"],Data_Unit=PS["Data.Unit"],Partial_Unsafe=PS["Partial.Unsafe"],Type_Proxy=(PS.Prelude,PS["Type.Proxy"]),unsafeHead=Data_Array_Partial.head(),genericUserEncodeJson$prime=function(v){return function(sign){return function(spine){return Data_Maybe.fromMaybe(genericEncodeJson$prime(v)(sign)(spine))(v.userEncoding(v)(sign)(spine))}}},genericEncodeRecordJson$prime=function(v){return function(sigs){return function(fields){return Data_Argonaut_Core.fromObject(Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(function(sig){return function(field){return function(sm){var spineIsNothing=Data_Eq.eq(Data_Generic.eqGenericSpine)(field.recValue(Data_Unit.unit))(Data_Generic.toSpine(Data_Generic.genericMaybe(Data_Generic.genericInt))(Data_Maybe.Nothing.value)),omitField=Data_Argonaut_Generic_Util.sigIsMaybe(sig.recValue(Data_Unit.unit))&&spineIsNothing&&v.omitNothingFields,encodedField=genericUserEncodeJson$prime(v)(sig.recValue(Data_Unit.unit))(field.recValue(Data_Unit.unit));return omitField?sm:Data_StrMap.insert(function(field){return v.fieldLabelModifier(field.recLabel)}(field))(encodedField)(sm)}}}))(Data_StrMap.empty)(Data_Array.zip(sigs)(fields)))}}},genericEncodeProdArgs=function(opts){return function(constrSigns){return function(constr){return function(args){var values=Data_Functor.map(Data_Functor.functorArray)(function(v){return v(Data_Unit.unit)})(args),lSigValues=Data_Array.concatMap(function(c){return c.sigValues})(Data_Array.filter(function(c){return c.sigConstructor===constr})(constrSigns)),sigValues=Data_Functor.map(Data_Functor.functorArray)(function(v){return v(Data_Unit.unit)})(lSigValues);return Data_Array.zipWith(genericUserEncodeJson$prime(opts))(sigValues)(values)}}}},genericEncodeJson$prime=function(opts){return function(sign){return function(spine){if(spine instanceof Data_Generic.SInt)return Data_Argonaut_Core.fromNumber(Data_Int.toNumber(spine.value0));if(spine instanceof Data_Generic.SString)return Data_Argonaut_Core.fromString(spine.value0);if(spine instanceof Data_Generic.SChar)return Data_Argonaut_Core.fromString(Data_String.singleton(spine.value0));if(spine instanceof Data_Generic.SNumber)return Data_Argonaut_Core.fromNumber(spine.value0);if(spine instanceof Data_Generic.SBoolean)return Data_Argonaut_Core.fromBoolean(spine.value0);if(spine instanceof Data_Generic.SUnit)return Data_Argonaut_Core.jsonNull;if(spine instanceof Data_Generic.SArray)return sign instanceof Data_Generic.SigArray?Data_Argonaut_Core.fromArray(Data_Functor.map(Data_Functor.functorArray)(function($47){return genericUserEncodeJson$prime(opts)(sign.value0(Data_Unit.unit))($47(Data_Unit.unit))})(spine.value0)):Partial_Unsafe.unsafeCrashWith("Signature does not match value, please don't do that!");if(spine instanceof Data_Generic.SProd)return sign instanceof Data_Generic.SigProd?(v=opts,constrSigns=sign.value1,constr=spine.value0,function(args){var fixedConstr=v.constructorTagModifier(constr),encodedArgs=genericEncodeProdArgs(v)(constrSigns)(constr)(args),contents=(v.flattenContentsArray||v.sumEncoding.value0.unpackRecords)&&1===Data_Array.length(encodedArgs)?unsafeHead(encodedArgs):Data_Argonaut_Core.fromArray(encodedArgs),containedRecord=Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(v.sumEncoding.value0.unpackRecords))(function(){return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function(v1){return v1(Data_Unit.unit)})(Data_Array.head(args)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Argonaut_Generic_Util.spineIsRecord(v1)))(function(){return Data_Argonaut_Core.toObject(contents)})})});if(!v.encodeSingleConstructors&&Data_Argonaut_Generic_Util.isUnaryRecord(constrSigns))return contents;if(v.allNullaryToStringTag&&Data_Argonaut_Generic_Util.allConstructorsNullary(constrSigns))return Data_Argonaut_Core.fromString(fixedConstr);if(containedRecord instanceof Data_Maybe.Nothing)return Data_Argonaut_Core.fromObject(Data_StrMap.insert(v.sumEncoding.value0.tagFieldName)(Data_Argonaut_Core.fromString(fixedConstr))(v.flattenContentsArray&&0===Data_Array.length(args)?Data_StrMap.empty:Data_StrMap.singleton(v.sumEncoding.value0.contentsFieldName)(contents)));if(containedRecord instanceof Data_Maybe.Just)return Data_Argonaut_Core.fromObject(Data_StrMap.insert(v.sumEncoding.value0.tagFieldName)(Data_Argonaut_Core.fromString(fixedConstr))(containedRecord.value0));throw new Error("Failed pattern match at Data.Argonaut.Generic.Encode line 80, column 10 - line 87, column 80: "+[containedRecord.constructor.name])}(spine.value1)):Partial_Unsafe.unsafeCrashWith("Signature does not match value, please don't do that!");var constr,constrSigns,v;if(spine instanceof Data_Generic.SRecord)return sign instanceof Data_Generic.SigRecord?genericEncodeRecordJson$prime(opts)(sign.value0)(spine.value0):Partial_Unsafe.unsafeCrashWith("Signature does not match value, please don't do that!");throw new Error("Failed pattern match at Data.Argonaut.Generic.Encode line 43, column 38 - line 60, column 1: "+[spine.constructor.name])}}};exports.genericEncodeJson=function(dictGeneric){return function(opts){var sign=Data_Generic.toSignature(dictGeneric)(Type_Proxy.Proxy.value);return function($48){return genericUserEncodeJson$prime(opts)(sign)(Data_Generic.toSpine(dictGeneric)($48))}}},exports["genericUserEncodeJson'"]=genericUserEncodeJson$prime}(PS["Data.Argonaut.Generic.Encode"]=PS["Data.Argonaut.Generic.Encode"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Data_Argonaut_Core=(PS["Control.Semigroupoid"],PS["Data.Argonaut.Core"]),Data_Argonaut_Generic_Decode=PS["Data.Argonaut.Generic.Decode"],Data_Argonaut_Generic_Encode=PS["Data.Argonaut.Generic.Encode"],Data_Argonaut_Generic_Options=PS["Data.Argonaut.Generic.Options"],Data_Argonaut_Generic_Util=PS["Data.Argonaut.Generic.Util"],Data_Array=PS["Data.Array"],Data_Array_Partial=PS["Data.Array.Partial"],Data_Either=PS["Data.Either"],Data_Foldable=(PS["Data.Eq"],PS["Data.Foldable"]),Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_List=PS["Data.List"],Data_List_Types=PS["Data.List.Types"],Data_Maybe=PS["Data.Maybe"],Data_Semigroup=PS["Data.Semigroup"],Data_StrMap=PS["Data.StrMap"],Data_Traversable=PS["Data.Traversable"],Data_Unit=PS["Data.Unit"],Partial_Unsafe=PS["Partial.Unsafe"],unsafeTail=(PS.Prelude,Data_Array_Partial.tail()),unsafeHead=Data_Array_Partial.head(),sumEncoding=new Data_Argonaut_Generic_Options.TaggedObject({tagFieldName:"tag",contentsFieldName:"contents",unpackRecords:!0}),getSigsFromConstructor=function(arr){return function(name){var constr=unsafeHead(Data_Array.filter(function($101){return $101.sigConstructor===name})(arr));return Data_Functor.map(Data_Functor.functorArray)(function(v){return v(Data_Unit.unit)})(constr.sigValues)}},getSigFromUnaryConstructor=function(arr){return function(name){return unsafeHead(getSigsFromConstructor(arr)(name))}},getNestedTupleSigs$prime=function(v){return 2===v.length?v[0]instanceof Data_Generic.SigProd&&"Data.Tuple.Tuple"===v[0].value0?new Data_List_Types.Cons(v[1],getNestedTupleSigs$prime(getSigsFromConstructor(v[0].value1)("Data.Tuple.Tuple"))):new Data_List_Types.Cons(v[1],new Data_List_Types.Cons(v[0],Data_List_Types.Nil.value)):Partial_Unsafe.unsafeCrashWith("Shouldn't a PS tuple always exactly two values?! I seem to be mistaken with this.")},encodeTupleArgs=function(opts){return function(sigs){return function(arr){return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Array.zipWith(Data_Argonaut_Generic_Encode["genericUserEncodeJson'"](opts))(sigs)(arr))}}},encodeTuple=function(v){return function(v1){return function(v2){if(v1 instanceof Data_Generic.SigProd&&"Data.Tuple.Tuple"===v1.value0&&v2 instanceof Data_Generic.SProd&&"Data.Tuple.Tuple"===v2.value0){var spines=Data_Functor.map(Data_Functor.functorArray)(function(v3){return v3(Data_Unit.unit)})(v2.value1),signatures=getSigsFromConstructor(v1.value1)("Data.Tuple.Tuple");return Control_Alt.alt(Data_Maybe.altMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Semigroup.append(Data_Semigroup.semigroupArray))(encodeTuple(v)(unsafeHead(signatures))(unsafeHead(spines))))(encodeTupleArgs(v)(unsafeTail(signatures))(unsafeTail(spines))))(encodeTupleArgs(v)(signatures)(spines))}return Data_Maybe.Nothing.value}}},userEncoding=function(opts){return function(sig){return function(spine){return Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)((v=opts,v1=sig,function(v2){if(v1 instanceof Data_Generic.SigProd&&"Data.Maybe.Maybe"===v1.value0&&v2 instanceof Data_Generic.SProd&&"Data.Maybe.Just"===v2.value0&&1===v2.value1.length){var valSig=getSigFromUnaryConstructor(v1.value1)("Data.Maybe.Just"),val=v2.value1[0](Data_Unit.unit);return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Argonaut_Generic_Encode["genericUserEncodeJson'"](v)(valSig)(val))}return v1 instanceof Data_Generic.SigProd&&"Data.Maybe.Maybe"===v1.value0&&v2 instanceof Data_Generic.SProd&&"Data.Maybe.Nothing"===v2.value0?Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Argonaut_Core.jsonNull):Data_Maybe.Nothing.value}(spine)))(function(v){return function(v1){return function(v2){if(v1 instanceof Data_Generic.SigProd&&"Data.Either.Either"===v1.value0&&v2 instanceof Data_Generic.SProd&&1===v2.value1.length){var valSig=getSigFromUnaryConstructor(v1.value1)(v2.value0),val=v2.value1[0](Data_Unit.unit),strippedConstr=Data_Argonaut_Generic_Util.stripModulePath(v2.value0);return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Argonaut_Core.fromObject(Data_StrMap.singleton(strippedConstr)(Data_Argonaut_Generic_Encode["genericUserEncodeJson'"](v)(valSig)(val))))}return Data_Maybe.Nothing.value}}}(opts)(sig)(spine)))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Argonaut_Core.fromArray)(encodeTuple(opts)(sig)(spine)));var v1,v}}},arrToList=Data_List.fromFoldable(Data_Foldable.foldableArray),decodeTuple=function(v){return function(v1){return function(v2){if(v1 instanceof Data_Generic.SigProd&&"Data.Tuple.Tuple"===v1.value0){var makeTuple=function(x1){return function(x2){return new Data_Generic.SProd("Data.Tuple.Tuple",[function(v3){return x1},function(v3){return x2}])}},makeTuples=function(v3){return v3 instanceof Data_List_Types.Cons&&v3.value1 instanceof Data_List_Types.Cons?Control_Applicative.pure(Data_Either.applicativeEither)(($copy_inner=makeTuple(v3.value0)(v3.value1.value0),function($copy_v3){var $tco_result,$tco_var_inner=$copy_inner,$tco_done=!1;function $tco_loop(inner,v3){if(v3 instanceof Data_List_Types.Nil)return $tco_done=!0,inner;if(v3 instanceof Data_List_Types.Cons)return $tco_var_inner=makeTuple(inner)(v3.value0),void($copy_v3=v3.value1);throw new Error("Failed pattern match at Data.Argonaut.Generic.Aeson line 147, column 5 - line 147, column 34: "+[inner.constructor.name,v3.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_inner,$copy_v3);return $tco_result}(v3.value1.value1))):new Data_Either.Left("A tuple needs to have at least two elements");var $copy_inner};return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Generic_Decode.mFail("Expected an array of values when decoding Tuple")(Data_Argonaut_Core.toArray(v2)))(function(v3){var $102,sigs=($102=getSigsFromConstructor(v1.value1)("Data.Tuple.Tuple"),Data_List.reverse(getNestedTupleSigs$prime($102)));return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.sequence(Data_List_Types.traversableList)(Data_Either.applicativeEither)(Data_List.zipWith(Data_Argonaut_Generic_Decode["genericUserDecodeJson'"](v))(sigs)(arrToList(v3))))(function(v4){return makeTuples(v4)})}))}return Data_Maybe.Nothing.value}}},userDecoding=function(opts){return function(sig){return function(json){return Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)((v=opts,v2=json,(v1=sig)instanceof Data_Generic.SigProd&&"Data.Maybe.Maybe"===v1.value0?Data_Argonaut_Core.isNull(v2)?Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Either.Right.create(new Data_Generic.SProd("Data.Maybe.Nothing",[]))):Control_Applicative.pure(Data_Maybe.applicativeMaybe)((valSig=getSigFromUnaryConstructor(v1.value1)("Data.Maybe.Just"),Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Generic_Decode["genericUserDecodeJson'"](v)(valSig)(v2))(function(v3){return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd("Data.Maybe.Just",[function(u){return v3}]))}))):Data_Maybe.Nothing.value))(function(v){return function(v1){return function(v2){if(v1 instanceof Data_Generic.SigProd&&"Data.Either.Either"===v1.value0){var decodeArg=function(name){return function(obj){return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_StrMap.lookup(name)(obj))(function(v3){var valSig=getSigFromUnaryConstructor(v1.value1)("Data.Either."+name);return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Generic_Decode["genericUserDecodeJson'"](v)(valSig)(v3))(function(v4){return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd("Data.Either."+name,[function(u){return v4}]))}))})}};return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Generic_Decode.mFail("Expected an object when decoding Either")(Data_Argonaut_Core.toObject(v2)))(function(v3){return Data_Maybe.fromMaybe(new Data_Either.Left("Expected Left or Right record label when decoding Either"))(Control_Alt.alt(Data_Maybe.altMaybe)(decodeArg("Right")(v3))(decodeArg("Left")(v3)))}))}return Data_Maybe.Nothing.value}}}(opts)(sig)(json)))(decodeTuple(opts)(sig)(json));var v2,valSig,v1,v}}},options={constructorTagModifier:Data_Argonaut_Generic_Util.stripModulePath,allNullaryToStringTag:!0,sumEncoding:sumEncoding,flattenContentsArray:!0,encodeSingleConstructors:!1,userEncoding:userEncoding,userDecoding:userDecoding,fieldLabelModifier:Control_Category.id(Control_Category.categoryFn),omitNothingFields:!1};exports.encodeJson=function(dictGeneric){return Data_Argonaut_Generic_Encode.genericEncodeJson(dictGeneric)(options)},exports.decodeJson=function(dictGeneric){return Data_Argonaut_Generic_Decode.genericDecodeJson(dictGeneric)(options)},exports.options=options,exports.userEncoding=userEncoding,exports.userDecoding=userDecoding}(PS["Data.Argonaut.Generic.Aeson"]=PS["Data.Argonaut.Generic.Aeson"]||{}),function(exports){"use strict";(PS["Data.Argonaut.Parser"]=PS["Data.Argonaut.Parser"]||{})._jsonParser=function(fail,succ,s){try{return succ(JSON.parse(s))}catch(e){return fail(e.message)}}}(),function(exports){"use strict";var $foreign=PS["Data.Argonaut.Parser"],Data_Either=(PS["Data.Argonaut.Core"],PS["Data.Either"]);PS["Data.Function.Uncurried"];exports.jsonParser=function(j){return $foreign._jsonParser(Data_Either.Left.create,Data_Either.Right.create,j)}}(PS["Data.Argonaut.Parser"]=PS["Data.Argonaut.Parser"]||{}),function(exports){"use strict";PS["Data.Array.NonEmpty"],PS["Control.Alt"],PS["Control.Alternative"],PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Lazy"],PS["Control.Monad"],PS["Control.Monad.Rec.Class"],PS["Control.Semigroupoid"];var f,Data_Array=PS["Data.Array"],Data_Boolean=(PS["Data.Bifunctor"],PS["Data.Boolean"]),Data_Maybe=(PS["Data.Eq"],PS["Data.Foldable"],PS["Data.FoldableWithIndex"],PS["Data.Function"],PS["Data.Functor"],PS["Data.FunctorWithIndex"],PS["Data.Maybe"]),toArray=(PS["Data.NonEmpty"],PS["Data.Ord"],PS["Data.Semigroup"],PS["Data.Semigroup.Foldable"],PS["Data.Semigroup.Traversable"],PS["Data.Show"],PS["Data.Traversable"],PS["Data.TraversableWithIndex"],PS["Data.Tuple"],PS["Data.Unfoldable"],PS["Partial.Unsafe"],PS.Prelude,function(v){return v}),length=(f=Data_Array.length,function($61){return f(toArray($61))});exports.fromArray=function(xs){if(0<Data_Array.length(xs))return new Data_Maybe.Just(xs);if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Array.NonEmpty line 174, column 1 - line 174, column 58: "+[xs.constructor.name])},exports.toArray=toArray,exports.length=length}(PS["Data.Array.NonEmpty"]=PS["Data.Array.NonEmpty"]||{}),exports=PS["Data.BigInt"]=PS["Data.BigInt"]||{},bigInt=require("big-integer"),exports.fromInt=bigInt,exports.toNumber=function(x){return x.toJSNumber()},function(exports){"use strict";var $foreign=PS["Data.BigInt"];PS["Control.Semigroupoid"],PS["Data.Array.NonEmpty"],PS["Data.CommutativeRing"],PS["Data.Eq"],PS["Data.EuclideanRing"],PS["Data.Function"],PS["Data.Int"],PS["Data.Maybe"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.String.NonEmpty"],PS["Partial.Unsafe"],PS.Prelude;exports.fromInt=$foreign.fromInt,exports.toNumber=$foreign.toNumber}(PS["Data.BigInt"]=PS["Data.BigInt"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"];var Data_Array=PS["Data.Array"],Data_Eq=(PS["Data.BooleanAlgebra"],PS["Data.Bounded"],PS["Data.Eq"]),Data_Ord=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"],PS["Data.Newtype"],PS["Data.Ord"]),Data_Show=PS["Data.Show"],Data_String=PS["Data.String"],ordBit=(PS.Prelude,Data_Ord.ordBoolean),eqBit=Data_Eq.eqBoolean,bitToChar=function(v){if(v)return"1";if(!v)return"0";throw new Error("Failed pattern match at Data.Binary.Bit line 40, column 1 - line 40, column 25: "+[v.constructor.name])},showBit=new Data_Show.Show(function($11){return Data_String.fromCharArray(Data_Array.singleton(bitToChar($11)))});exports.bitToChar=bitToChar,exports.bitToInt=function(v){if(v)return 1;if(!v)return 0;throw new Error("Failed pattern match at Data.Binary.Bit line 48, column 1 - line 48, column 23: "+[v.constructor.name])},exports._0=!1,exports._1=!0,exports.eqBit=eqBit,exports.ordBit=ordBit,exports.showBit=showBit}(PS["Data.Binary.Bit"]=PS["Data.Binary.Bit"]||{}),function(exports){"use strict";PS["Data.Binary.Bit"],PS["Data.Eq"];var Data_Functor=PS["Data.Functor"],Overflow=(PS["Data.Semigroup"],PS["Data.Show"],PS.Prelude,function(){function Overflow(value0){this.value0=value0}return Overflow.create=function(value0){return new Overflow(value0)},Overflow}()),NoOverflow=function(){function NoOverflow(value0){this.value0=value0}return NoOverflow.create=function(value0){return new NoOverflow(value0)},NoOverflow}(),functorOverflow=new Data_Functor.Functor(function(f){return function(v){if(v instanceof Overflow)return new Overflow(f(v.value0));if(v instanceof NoOverflow)return new NoOverflow(f(v.value0));throw new Error("Failed pattern match at Data.Binary.Overflow line 21, column 1 - line 21, column 45: "+[f.constructor.name,v.constructor.name])}});exports.Overflow=Overflow,exports.NoOverflow=NoOverflow,exports.overflowBit=function(v){if(v instanceof Overflow)return!0;if(v instanceof NoOverflow)return!1;throw new Error("Failed pattern match at Data.Binary.Overflow line 25, column 1 - line 25, column 39: "+[v.constructor.name])},exports.makeOverflow=function(v){return function(a){if(v)return new Overflow(a);if(!v)return new NoOverflow(a);throw new Error("Failed pattern match at Data.Binary.Overflow line 29, column 1 - line 29, column 45: "+[v.constructor.name,a.constructor.name])}},exports.discardOverflow=function(v){if(v instanceof Overflow)return v.value0;if(v instanceof NoOverflow)return v.value0;throw new Error("Failed pattern match at Data.Binary.Overflow line 33, column 1 - line 33, column 41: "+[v.constructor.name])},exports.functorOverflow=functorOverflow}(PS["Data.Binary.Overflow"]=PS["Data.Binary.Overflow"]||{}),function(exports){"use strict";var Control_Plus=PS["Control.Plus"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Bifunctor=PS["Data.Bifunctor"],Data_Binary_Bit=PS["Data.Binary.Bit"],Data_Binary_Overflow=PS["Data.Binary.Overflow"],Data_Boolean=PS["Data.Boolean"],Data_Eq=PS["Data.Eq"],Data_Foldable=(PS["Data.EuclideanRing"],PS["Data.Foldable"]),Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Int=PS["Data.Int"],Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Ord=PS["Data.Ord"],Data_Ordering=PS["Data.Ordering"],Data_Semigroup=(PS["Data.Ring"],PS["Data.Semigroup"]),Data_Show=(PS["Data.Semiring"],PS["Data.Show"]),Data_Tuple=(PS["Data.String"],PS["Data.Traversable"],PS["Data.Tuple"]),Bits=(PS.Prelude,PS["Unsafe.Coerce"],function(x){return x}),zero=[Data_Binary_Bit._0],showBits=Data_Show.showArray(Data_Binary_Bit.showBit),one=[Data_Binary_Bit._1],newtypeBits=new Data_Newtype.Newtype(function(n){return n},Bits),extendOverflow=function(v){if(v instanceof Data_Binary_Overflow.NoOverflow)return v.value0;if(v instanceof Data_Binary_Overflow.Overflow)return Data_Array.cons(Data_Binary_Bit._1)(v.value0);throw new Error("Failed pattern match at Data.Binary.Bits line 245, column 1 - line 245, column 40: "+[v.constructor.name])},eqBits=Data_Eq.eqArray(Data_Binary_Bit.eqBit),align=function(v){return function(v1){var lb=Data_Array.length(v1),la=Data_Array.length(v),extend=function(d){return function(xs){return Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.replicate(d)(Data_Binary_Bit._0))(xs)}},v2=Data_Ord.compare(Data_Ord.ordInt)(la)(lb);if(v2 instanceof Data_Ordering.EQ)return new Data_Tuple.Tuple(v,v1);if(v2 instanceof Data_Ordering.LT)return new Data_Tuple.Tuple(extend(lb-la|0)(v),v1);if(v2 instanceof Data_Ordering.GT)return new Data_Tuple.Tuple(v,extend(la-lb|0)(v1));throw new Error("Failed pattern match at Data.Binary.Bits line 142, column 3 - line 145, column 40: "+[v2.constructor.name])}},addBit=function(v){return function(v1){return function(v2){if(!v&&!v1&&!v2)return new Data_Binary_Overflow.NoOverflow(Data_Binary_Bit._0);if(!v&&!v1&&v2)return new Data_Binary_Overflow.NoOverflow(Data_Binary_Bit._1);if(!v&&v1&&!v2)return new Data_Binary_Overflow.NoOverflow(Data_Binary_Bit._1);if(!v&&v1&&v2)return new Data_Binary_Overflow.Overflow(Data_Binary_Bit._0);if(v&&!v1&&!v2)return new Data_Binary_Overflow.NoOverflow(Data_Binary_Bit._1);if(v&&!v1&&v2)return new Data_Binary_Overflow.Overflow(Data_Binary_Bit._0);if(v&&v1&&!v2)return new Data_Binary_Overflow.Overflow(Data_Binary_Bit._0);if(v&&v1&&v2)return new Data_Binary_Overflow.Overflow(Data_Binary_Bit._1);throw new Error("Failed pattern match at Data.Binary.Bits line 210, column 1 - line 210, column 44: "+[v.constructor.name,v1.constructor.name,v2.constructor.name])}}},addBits=function(bit){return function(v){return function(v1){var pairs=Data_Tuple.uncurry(Data_Array.zip)(Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(Data_Newtype.unwrap(newtypeBits))(Data_Newtype.unwrap(newtypeBits))(align(v)(v1))),acc=Data_Binary_Overflow.makeOverflow(bit)([]);return Data_Functor.map(Data_Binary_Overflow.functorOverflow)(Bits)(Data_Foldable.foldr(Data_Foldable.foldableArray)(function(v2){return function(o){return Data_Functor.map(Data_Binary_Overflow.functorOverflow)(Data_Function.flip(Data_Array.cons)(Data_Binary_Overflow.discardOverflow(o)))(addBit(Data_Binary_Overflow.overflowBit(o))(v2.value0)(v2.value1))}})(acc)(pairs))}}};exports.Bits=Bits,exports.zero=zero,exports.one=one,exports.head=function(v){return Data_Maybe.fromMaybe(Data_Binary_Bit._0)(Data_Array.head(v))},exports.tail=function(v){return function(v){if(v instanceof Data_Maybe.Just&&0===v.value0.length)return zero;if(v instanceof Data_Maybe.Just)return v.value0;if(v instanceof Data_Maybe.Nothing)return zero;throw new Error("Failed pattern match at Data.Binary.Bits line 205, column 1 - line 205, column 41: "+[v.constructor.name])}(Data_Array.tail(v))},exports.last=function(v){return Data_Maybe.fromMaybe(Data_Binary_Bit._0)(Data_Array.last(v))},exports.length=function($226){return Data_Array.length(Data_Newtype.unwrap(newtypeBits)($226))},exports.align=align,exports.addBit=addBit,exports.addBits=addBits,exports["addBits'"]=function(bit){return function(a){return function(b){return extendOverflow(addBits(bit)(a)(b))}}},exports.subtractBits=function(v){return function(v1){return Data_Foldable.foldr(Data_Foldable.foldableArray)(function(v2){return function(v3){if(!v2.value0&&!v2.value1&&!v3.value0)return new Data_Tuple.Tuple(!1,Data_Array.cons(Data_Binary_Bit._0)(v3.value1));if(!v2.value0&&!v2.value1&&v3.value0)return new Data_Tuple.Tuple(!0,Data_Array.cons(Data_Binary_Bit._1)(v3.value1));if(!v2.value0&&v2.value1&&!v3.value0)return new Data_Tuple.Tuple(!0,Data_Array.cons(Data_Binary_Bit._1)(v3.value1));if(!v2.value0&&v2.value1&&v3.value0)return new Data_Tuple.Tuple(!0,Data_Array.cons(Data_Binary_Bit._0)(v3.value1));if(v2.value0&&!v2.value1&&!v3.value0)return new Data_Tuple.Tuple(!1,Data_Array.cons(Data_Binary_Bit._1)(v3.value1));if(v2.value0&&!v2.value1&&v3.value0)return new Data_Tuple.Tuple(!1,Data_Array.cons(Data_Binary_Bit._0)(v3.value1));if(v2.value0&&v2.value1&&!v3.value0)return new Data_Tuple.Tuple(!1,Data_Array.cons(Data_Binary_Bit._0)(v3.value1));if(v2.value0&&v2.value1&&v3.value0)return new Data_Tuple.Tuple(!0,Data_Array.cons(Data_Binary_Bit._1)(v3.value1));throw new Error("Failed pattern match at Data.Binary.Bits line 233, column 3 - line 233, column 81: "+[v2.constructor.name,v3.constructor.name])}})(new Data_Tuple.Tuple(!1,[]))(Data_Array.zip(v)(v1)).value1}},exports.extendOverflow=extendOverflow,exports.intToBits=function(v){if(0===v)return zero;var f=function(v1){if(0===v1)return Control_Plus.empty(Control_Plus.plusArray);if(Data_Int.odd(v1))return Data_Array.snoc(f(v1/2|0))(Data_Binary_Bit._1);if(Data_Boolean.otherwise)return Data_Array.snoc(f(v1/2|0))(Data_Binary_Bit._0);throw new Error("Failed pattern match at Data.Binary.Bits line 252, column 3 - line 252, column 14: "+[v1.constructor.name])};return f(v)},exports.unsafeBitsToInt=function(v){return Data_Tuple.fst(Data_Foldable.foldr(Data_Foldable.foldableArray)(function(b){return function(v1){return new Data_Tuple.Tuple((v1.value1*Data_Binary_Bit.bitToInt(b)|0)+v1.value0|0,2*v1.value1|0)}})(new Data_Tuple.Tuple(0,1))(v))},exports.newtypeBits=newtypeBits,exports.eqBits=eqBits,exports.showBits=showBits}(PS["Data.Binary.Bits"]=PS["Data.Binary.Bits"]||{}),function(exports){"use strict";var Control_Category=PS["Control.Category"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Binary_Bit=PS["Data.Binary.Bit"],Data_Binary_Bits=PS["Data.Binary.Bits"],Data_Eq=(PS["Data.Binary.Overflow"],PS["Data.Eq"]),Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Newtype=PS["Data.Newtype"],Data_Semigroup=(PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semigroup"]),Data_Show=PS["Data.Show"],Data_Tuple=(PS["Data.String"],PS["Data.Traversable"],PS["Data.Tuple"]),Partial_Unsafe=PS["Partial.Unsafe"],Binary=(PS.Prelude,function(and,leftShift,lsb,msb,not,or,rightShift,toBits,tryFromBits,xor){this.and=and,this.leftShift=leftShift,this.lsb=lsb,this.msb=msb,this.not=not,this.or=or,this.rightShift=rightShift,this.toBits=toBits,this.tryFromBits=tryFromBits,this.xor=xor}),Elastic=function(Binary0,fromBits){this.Binary0=Binary0,this.fromBits=fromBits},xor=function(dict){return dict.xor},tryFromBits=function(dict){return dict.tryFromBits},toBits=function(dict){return dict.toBits},rightShift=function(dict){return dict.rightShift},or=function(dict){return dict.or},not=function(dict){return dict.not},lsb=function(dict){return dict.lsb},leftShift=function(dict){return dict.leftShift},fromBits=function(dict){return dict.fromBits},stripLeadingBit=function(dictElastic){return function(b){return function($67){return $68=Data_Newtype.unwrap(Data_Binary_Bits.newtypeBits)(toBits(dictElastic.Binary0())($67)),fromBits(dictElastic)(Data_Newtype.wrap(Data_Binary_Bits.newtypeBits)((bit=b,bits=$68,xs=Data_Array.dropWhile(Data_Eq.eq(Data_Binary_Bit.eqBit)(bit))(bits),Data_Array.null(xs)?[Data_Binary_Bit._0]:xs)));var $68,bits,xs,bit}}},binaryBit=new Binary(function(v){return function(v1){return v&&v1}},function(b){return function(a){return new Data_Tuple.Tuple(a,b)}},Control_Category.id(Control_Category.categoryFn),Control_Category.id(Control_Category.categoryFn),function(v){return!v},function(v){return function(v1){return v||v1}},function(b){return function(a){return new Data_Tuple.Tuple(a,b)}},function($71){return Data_Binary_Bits.Bits(Data_Array.singleton($71))},function(v){return 1===v.length?new Data_Maybe.Just(v[0]):Data_Maybe.Nothing.value},function(v){return function(v1){return(v||v1)&&!(v&&v1)}}),and=function(dict){return dict.and},elasticBits=new Elastic(function(){return binaryBits},function(v){return 0===v.length?Data_Binary_Bits.zero:v}),binaryBits=new Binary(function(v){return function(v1){return Data_Array.zipWith(and(binaryBit))(v)(v1)}},function(bit){return function(v){return Data_Functor.map(Data_Tuple.functorTuple)(Data_Binary_Bits.Bits)(Data_Foldable.foldr(Data_Foldable.foldableArray)(function(a){return function(v1){return Data_Functor.map(Data_Tuple.functorTuple)(Data_Function.flip(Data_Array.cons)(v1.value1))(leftShift(binaryBit)(v1.value0)(a))}})(new Data_Tuple.Tuple(bit,[]))(v))}},Data_Binary_Bits.last,Data_Binary_Bits.head,function(v){return Data_Functor.map(Data_Functor.functorArray)(not(binaryBit))(v)},function(v){return function(v1){return Data_Array.zipWith(or(binaryBit))(v)(v1)}},function(bit){return function(v){return Data_Functor.map(Data_Tuple.functorTuple)(Data_Binary_Bits.Bits)(Data_Foldable.foldl(Data_Foldable.foldableArray)(function(v1){return function(a){return Data_Functor.map(Data_Tuple.functorTuple)(Data_Array.snoc(v1.value1))(rightShift(binaryBit)(v1.value0)(a))}})(new Data_Tuple.Tuple(bit,[]))(v))}},Control_Category.id(Control_Category.categoryFn),function($72){return Data_Maybe.Just.create(fromBits(elasticBits)($72))},function(v){return function(v1){return Data_Array.zipWith(xor(binaryBit))(v)(v1)}}),addLeadingBit=function(dictElastic){return function(b){return function(w){return function($73){return $74=Data_Newtype.unwrap(Data_Binary_Bits.newtypeBits)(toBits(dictElastic.Binary0())($73)),fromBits(dictElastic)(Data_Newtype.wrap(Data_Binary_Bits.newtypeBits)((bit=b,bits=$74,(d=w-Data_Array.length(bits)|0)<1?bits:Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.replicate(d)(bit))(bits))));var $74,bits,d,bit}}}};exports.Binary=Binary,exports.lsb=lsb,exports.msb=function(dict){return dict.msb},exports.isOdd=function(dictBinary){return function($65){return Data_Eq.eq(Data_Binary_Bit.eqBit)(Data_Binary_Bit._1)(lsb(dictBinary)($65))}},exports.isEven=function(dictBinary){return function($66){return Data_Eq.eq(Data_Binary_Bit.eqBit)(Data_Binary_Bit._0)(lsb(dictBinary)($66))}},exports.isZero=function(dictBinary){return function($63){return $64=Data_Newtype.unwrap(Data_Binary_Bits.newtypeBits)(toBits(dictBinary)($63)),Data_Array.null(Data_Array.dropWhile(Data_Eq.eq(Data_Binary_Bit.eqBit)(Data_Binary_Bit._0))($64));var $64}},exports.and=and,exports.xor=xor,exports.or=or,exports.not=not,exports.leftShift=leftShift,exports.rightShift=rightShift,exports.toBits=toBits,exports.tryFromBits=tryFromBits,exports.Elastic=Elastic,exports.fromBits=fromBits,exports.unsafeFromBits=function(dictBinary){return function(bits){var err="Unsafe conversion of Bits to a binary value has failed: "+Data_Show.show(Data_Binary_Bits.showBits)(bits);return Data_Maybe["fromMaybe'"](function(v){return Partial_Unsafe.unsafeCrashWith(err)})(tryFromBits(dictBinary)(bits))}},exports.addLeadingBit=addLeadingBit,exports.addLeadingZeros=function(dictElastic){return addLeadingBit(dictElastic)(Data_Binary_Bit._0)},exports.stripLeadingBit=stripLeadingBit,exports.stripLeadingZeros=function(dictElastic){return stripLeadingBit(dictElastic)(Data_Binary_Bit._0)},exports.binaryBit=binaryBit,exports.binaryBits=binaryBits,exports.elasticBits=elasticBits}(PS["Data.Binary"]=PS["Data.Binary"]||{}),function(exports){"use strict";exports.defer=function(){function Defer(thunk){return this instanceof Defer?(this.thunk=thunk,this):new Defer(thunk)}return Defer.prototype.force=function(){var value=this.thunk();return this.thunk=null,this.force=function(){return value},value},Defer}(),exports.force=function(l){return l.force()}}(PS["Data.Lazy"]=PS["Data.Lazy"]||{}),function(exports){"use strict";var $foreign=PS["Data.Lazy"],Control_Apply=(PS["Control.Applicative"],PS["Control.Apply"]),Data_Functor=(PS["Control.Bind"],PS["Control.Comonad"],PS["Control.Extend"],PS["Control.Lazy"],PS["Control.Monad"],PS["Control.Semigroupoid"],PS["Data.BooleanAlgebra"],PS["Data.Bounded"],PS["Data.CommutativeRing"],PS["Data.Eq"],PS["Data.EuclideanRing"],PS["Data.Field"],PS["Data.Function"],PS["Data.Functor"]),functorLazy=(PS["Data.Functor.Invariant"],PS["Data.HeytingAlgebra"],PS["Data.Monoid"],PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.Unit"],PS.Prelude,new Data_Functor.Functor(function(f){return function(l){return $foreign.defer(function(v){return f($foreign.force(l))})}})),applyLazy=new Control_Apply.Apply(function(){return functorLazy},function(f){return function(x){return $foreign.defer(function(v){return $foreign.force(f)($foreign.force(x))})}});exports.functorLazy=functorLazy,exports.applyLazy=applyLazy,exports.defer=$foreign.defer,exports.force=$foreign.force}(PS["Data.Lazy"]=PS["Data.Lazy"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"],PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Category"],PS["Control.Comonad"],PS["Control.Extend"];var go,Control_Lazy=PS["Control.Lazy"],Data_Foldable=(PS["Control.Monad"],PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Eq"],PS["Data.Foldable"]),Data_Function=(PS["Data.FoldableWithIndex"],PS["Data.Function"]),Data_Functor=PS["Data.Functor"],Data_Lazy=(PS["Data.FunctorWithIndex"],PS["Data.Lazy"]),Data_Maybe=PS["Data.Maybe"],Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Semigroup=(PS["Data.NonEmpty"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"]),Data_Unfoldable=(PS["Data.Semiring"],PS["Data.Show"],PS["Data.Traversable"],PS["Data.TraversableWithIndex"],PS["Data.Tuple"],PS["Data.Unfoldable"]),List=(PS.Prelude,function(x){return x}),Nil=function(){function Nil(){}return Nil.value=new Nil,Nil}(),Cons=function(){function Cons(value0,value1){this.value0=value0,this.value1=value1}return Cons.create=function(value0){return function(value1){return new Cons(value0,value1)}},Cons}(),nil=List(Data_Lazy.defer(function(v){return Nil.value})),newtypeList=new Data_Newtype.Newtype(function(n){return n},List),step=function($184){return Data_Lazy.force(Data_Newtype.unwrap(newtypeList)($184))},semigroupList=new Data_Semigroup.Semigroup(function(xs){return function(ys){return Data_Functor.map(Data_Lazy.functorLazy)(function(v){if(v instanceof Nil)return step(ys);if(v instanceof Cons)return new Cons(v.value0,Data_Semigroup.append(semigroupList)(v.value1)(ys));throw new Error("Failed pattern match at Data.List.Lazy.Types line 98, column 5 - line 98, column 21: "+[v.constructor.name])})(Data_Newtype.unwrap(newtypeList)(xs))}}),monoidList=new Data_Monoid.Monoid(function(){return semigroupList},nil),lazyList=new Control_Lazy.Lazy(function(f){return List(Data_Lazy.defer(function($185){return step(f($185))}))}),functorList=new Data_Functor.Functor(function(f){return function(xs){return Data_Functor.map(Data_Lazy.functorLazy)(function(v){if(v instanceof Nil)return Nil.value;if(v instanceof Cons)return new Cons(f(v.value0),Data_Functor.map(functorList)(f)(v.value1));throw new Error("Failed pattern match at Data.List.Lazy.Types line 107, column 5 - line 107, column 17: "+[v.constructor.name])})(Data_Newtype.unwrap(newtypeList)(xs))}}),cons=function(x){return function(xs){return List(Data_Lazy.defer(function(v){return new Cons(x,xs)}))}},foldableList=new Data_Foldable.Foldable(function(dictMonoid){return function(f){return Data_Foldable.foldl(foldableList)(function(b){return function(a){return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a))}})(Data_Monoid.mempty(dictMonoid))}},function(op){return function($copy_b){return function($copy_xs){var $tco_result,$tco_var_b=$copy_b,$tco_done=!1;function $tco_loop(b,xs){var v=step(xs);if(v instanceof Nil)return $tco_done=!0,b;if(v instanceof Cons)return $tco_var_b=op(b)(v.value0),void($copy_xs=v.value1);throw new Error("Failed pattern match at Data.List.Lazy.Types line 122, column 7 - line 124, column 40: "+[v.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_b,$copy_xs);return $tco_result}}},function(op){return function(z){return function(xs){var rev=Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs))}}}),unfoldableList=new Data_Unfoldable.Unfoldable(go=function(f){return function(b){return Control_Lazy.defer(lazyList)(function(v){var v1=f(b);if(v1 instanceof Data_Maybe.Nothing)return nil;if(v1 instanceof Data_Maybe.Just)return cons(v1.value0.value0)(go(f)(v1.value0.value1));throw new Error("Failed pattern match at Data.List.Lazy.Types line 146, column 28 - line 148, column 39: "+[v1.constructor.name])})}});exports.List=List,exports.Nil=Nil,exports.Cons=Cons,exports.step=step,exports.nil=nil,exports.cons=cons,exports.newtypeList=newtypeList,exports.lazyList=lazyList,exports.semigroupList=semigroupList,exports.monoidList=monoidList,exports.functorList=functorList,exports.foldableList=foldableList,exports.unfoldableList=unfoldableList}(PS["Data.List.Lazy.Types"]=PS["Data.List.Lazy.Types"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"],PS["Control.Applicative"];var Control_Apply=PS["Control.Apply"],Control_Lazy=(PS["Control.Bind"],PS["Control.Category"],PS["Control.Lazy"]),Data_Boolean=(PS["Control.Monad.Rec.Class"],PS["Control.Semigroupoid"],PS["Data.Boolean"]),Data_Functor=(PS["Data.Eq"],PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"]),Data_Lazy=(PS["Data.HeytingAlgebra"],PS["Data.Lazy"]),Data_List_Lazy_Types=PS["Data.List.Lazy.Types"],Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Semigroup=(PS["Data.NonEmpty"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"]),Data_Tuple=(PS["Data.Semiring"],PS["Data.Show"],PS["Data.Traversable"],PS["Data.Tuple"]),Data_Unfoldable=PS["Data.Unfoldable"],zipWith=(PS.Prelude,function(f){return function(xs){return function(ys){return Control_Apply.apply(Data_Lazy.applyLazy)(Data_Functor.map(Data_Lazy.functorLazy)(function(v){return function(v1){if(v instanceof Data_List_Lazy_Types.Nil)return Data_List_Lazy_Types.Nil.value;if(v1 instanceof Data_List_Lazy_Types.Nil)return Data_List_Lazy_Types.Nil.value;if(v instanceof Data_List_Lazy_Types.Cons&&v1 instanceof Data_List_Lazy_Types.Cons)return new Data_List_Lazy_Types.Cons(f(v.value0)(v1.value0),zipWith(f)(v.value1)(v1.value1));throw new Error("Failed pattern match at Data.List.Lazy line 691, column 3 - line 691, column 35: "+[v.constructor.name,v1.constructor.name])}})(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs)))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(ys))}}});exports.range=function(start){return function(end){if(end<start)return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(function(x){if(end<=x)return new Data_Maybe.Just(new Data_Tuple.Tuple(x,x-1|0));if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.List.Lazy line 147, column 13 - line 148, column 38: "+[x.constructor.name])})(start);if(Data_Boolean.otherwise)return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(function(x){if(x<=end)return new Data_Maybe.Just(new Data_Tuple.Tuple(x,x+1|0));if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.List.Lazy line 152, column 5 - line 153, column 30: "+[x.constructor.name])})(start);throw new Error("Failed pattern match at Data.List.Lazy line 144, column 1 - line 144, column 32: "+[start.constructor.name,end.constructor.name])}},exports.cycle=function(xs){return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function(ys){return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(ys)})},exports.zipWith=zipWith}(PS["Data.List.Lazy"]=PS["Data.List.Lazy"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Category=PS["Control.Category"],Data_Foldable=(PS["Control.Semigroupoid"],PS["Data.Eq"],PS["Data.Foldable"]),Data_Function=(PS["Data.FoldableWithIndex"],PS["Data.Function"]),Data_Functor=PS["Data.Functor"],Data_List_Types=(PS["Data.FunctorWithIndex"],PS["Data.HeytingAlgebra"],PS["Data.List"],PS["Data.List.Lazy"],PS["Data.List.Lazy.Types"],PS["Data.List.Types"]),Data_Maybe=PS["Data.Maybe"],Data_Monoid=PS["Data.Monoid"],Data_Ord=PS["Data.Ord"],Data_Ordering=PS["Data.Ordering"],Data_Semigroup=PS["Data.Semigroup"],Data_Traversable=(PS["Data.Semiring"],PS["Data.Show"],PS["Data.Traversable"]),Data_Tuple=(PS["Data.TraversableWithIndex"],PS["Data.Tuple"]),Data_Unfoldable=PS["Data.Unfoldable"],Leaf=(PS["Partial.Unsafe"],PS.Prelude,function(){function Leaf(){}return Leaf.value=new Leaf,Leaf}()),Two=function(){function Two(value0,value1,value2,value3){this.value0=value0,this.value1=value1,this.value2=value2,this.value3=value3}return Two.create=function(value0){return function(value1){return function(value2){return function(value3){return new Two(value0,value1,value2,value3)}}}},Two}(),Three=function(){function Three(value0,value1,value2,value3,value4,value5,value6){this.value0=value0,this.value1=value1,this.value2=value2,this.value3=value3,this.value4=value4,this.value5=value5,this.value6=value6}return Three.create=function(value0){return function(value1){return function(value2){return function(value3){return function(value4){return function(value5){return function(value6){return new Three(value0,value1,value2,value3,value4,value5,value6)}}}}}}},Three}(),TwoLeft=function(){function TwoLeft(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return TwoLeft.create=function(value0){return function(value1){return function(value2){return new TwoLeft(value0,value1,value2)}}},TwoLeft}(),TwoRight=function(){function TwoRight(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return TwoRight.create=function(value0){return function(value1){return function(value2){return new TwoRight(value0,value1,value2)}}},TwoRight}(),ThreeLeft=function(){function ThreeLeft(value0,value1,value2,value3,value4,value5){this.value0=value0,this.value1=value1,this.value2=value2,this.value3=value3,this.value4=value4,this.value5=value5}return ThreeLeft.create=function(value0){return function(value1){return function(value2){return function(value3){return function(value4){return function(value5){return new ThreeLeft(value0,value1,value2,value3,value4,value5)}}}}}},ThreeLeft}(),ThreeMiddle=function(){function ThreeMiddle(value0,value1,value2,value3,value4,value5){this.value0=value0,this.value1=value1,this.value2=value2,this.value3=value3,this.value4=value4,this.value5=value5}return ThreeMiddle.create=function(value0){return function(value1){return function(value2){return function(value3){return function(value4){return function(value5){return new ThreeMiddle(value0,value1,value2,value3,value4,value5)}}}}}},ThreeMiddle}(),ThreeRight=function(){function ThreeRight(value0,value1,value2,value3,value4,value5){this.value0=value0,this.value1=value1,this.value2=value2,this.value3=value3,this.value4=value4,this.value5=value5}return ThreeRight.create=function(value0){return function(value1){return function(value2){return function(value3){return function(value4){return function(value5){return new ThreeRight(value0,value1,value2,value3,value4,value5)}}}}}},ThreeRight}(),KickUp=function(){function KickUp(value0,value1,value2,value3){this.value0=value0,this.value1=value1,this.value2=value2,this.value3=value3}return KickUp.create=function(value0){return function(value1){return function(value2){return function(value3){return new KickUp(value0,value1,value2,value3)}}}},KickUp}(),values=function(v){if(v instanceof Leaf)return Data_List_Types.Nil.value;if(v instanceof Two)return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));if(v instanceof Three)return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));throw new Error("Failed pattern match at Data.Map line 590, column 1 - line 590, column 40: "+[v.constructor.name])},singleton=function(k){return function(v){return new Two(Leaf.value,k,v,Leaf.value)}},toUnfoldable=function(dictUnfoldable){return function(m){return Data_Unfoldable.unfoldr(dictUnfoldable)(function($copy_v){var $tco_result,$tco_done=!1;function $tco_loop(v){if(v instanceof Data_List_Types.Nil)return $tco_done=!0,Data_Maybe.Nothing.value;if(v instanceof Data_List_Types.Cons){if(v.value0 instanceof Leaf)return void($copy_v=v.value1);if(v.value0 instanceof Two)return $tco_done=!0,Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1,v.value0.value2),new Data_List_Types.Cons(v.value0.value0,new Data_List_Types.Cons(v.value0.value3,v.value1))));if(v.value0 instanceof Three)return $tco_done=!0,Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1,v.value0.value2),new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5),new Data_List_Types.Cons(v.value0.value0,new Data_List_Types.Cons(v.value0.value3,new Data_List_Types.Cons(v.value0.value6,v.value1))))));throw new Error("Failed pattern match at Data.Map line 561, column 18 - line 566, column 77: "+[v.value0.constructor.name])}throw new Error("Failed pattern match at Data.Map line 560, column 3 - line 560, column 19: "+[v.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($copy_v);return $tco_result})(new Data_List_Types.Cons(m,Data_List_Types.Nil.value))}},lookup=function(dictOrd){return function(k){var comp=Data_Ord.compare(dictOrd);return function($copy_v){var $tco_result,$tco_done=!1;function $tco_loop(v){if(v instanceof Leaf)return $tco_done=!0,Data_Maybe.Nothing.value;if(v instanceof Two){var v2=comp(k)(v.value1);return v2 instanceof Data_Ordering.EQ?($tco_done=!0,new Data_Maybe.Just(v.value2)):v2 instanceof Data_Ordering.LT?void($copy_v=v.value0):void($copy_v=v.value3)}if(v instanceof Three){var v3=comp(k)(v.value1);if(v3 instanceof Data_Ordering.EQ)return $tco_done=!0,new Data_Maybe.Just(v.value2);var v4=comp(k)(v.value4);return v4 instanceof Data_Ordering.EQ?($tco_done=!0,new Data_Maybe.Just(v.value5)):v3 instanceof Data_Ordering.LT?void($copy_v=v.value0):v4 instanceof Data_Ordering.GT?void($copy_v=v.value6):void($copy_v=v.value3)}throw new Error("Failed pattern match at Data.Map line 195, column 5 - line 195, column 22: "+[v.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($copy_v);return $tco_result}}},keys=function(v){if(v instanceof Leaf)return Data_List_Types.Nil.value;if(v instanceof Two)return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));if(v instanceof Three)return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));throw new Error("Failed pattern match at Data.Map line 584, column 1 - line 584, column 38: "+[v.constructor.name])},functorMap=new Data_Functor.Functor(function(v){return function(v1){if(v1 instanceof Leaf)return Leaf.value;if(v1 instanceof Two)return new Two(Data_Functor.map(functorMap)(v)(v1.value0),v1.value1,v(v1.value2),Data_Functor.map(functorMap)(v)(v1.value3));if(v1 instanceof Three)return new Three(Data_Functor.map(functorMap)(v)(v1.value0),v1.value1,v(v1.value2),Data_Functor.map(functorMap)(v)(v1.value3),v1.value4,v(v1.value5),Data_Functor.map(functorMap)(v)(v1.value6));throw new Error("Failed pattern match at Data.Map line 91, column 1 - line 91, column 39: "+[v.constructor.name,v1.constructor.name])}}),fromZipper=function($copy_dictOrd){return function($copy_v){return function($copy_tree){var $tco_result,$tco_var_dictOrd=$copy_dictOrd,$tco_var_v=$copy_v,$tco_done=!1;function $tco_loop(dictOrd,v,tree){if(v instanceof Data_List_Types.Nil)return $tco_done=!0,tree;if(v instanceof Data_List_Types.Cons){if(v.value0 instanceof TwoLeft)return $tco_var_dictOrd=dictOrd,$tco_var_v=v.value1,void($copy_tree=new Two(tree,v.value0.value0,v.value0.value1,v.value0.value2));if(v.value0 instanceof TwoRight)return $tco_var_dictOrd=dictOrd,$tco_var_v=v.value1,void($copy_tree=new Two(v.value0.value0,v.value0.value1,v.value0.value2,tree));if(v.value0 instanceof ThreeLeft)return $tco_var_dictOrd=dictOrd,$tco_var_v=v.value1,void($copy_tree=new Three(tree,v.value0.value0,v.value0.value1,v.value0.value2,v.value0.value3,v.value0.value4,v.value0.value5));if(v.value0 instanceof ThreeMiddle)return $tco_var_dictOrd=dictOrd,$tco_var_v=v.value1,void($copy_tree=new Three(v.value0.value0,v.value0.value1,v.value0.value2,tree,v.value0.value3,v.value0.value4,v.value0.value5));if(v.value0 instanceof ThreeRight)return $tco_var_dictOrd=dictOrd,$tco_var_v=v.value1,void($copy_tree=new Three(v.value0.value0,v.value0.value1,v.value0.value2,v.value0.value3,v.value0.value4,v.value0.value5,tree));throw new Error("Failed pattern match at Data.Map line 413, column 3 - line 418, column 88: "+[v.value0.constructor.name])}throw new Error("Failed pattern match at Data.Map line 410, column 1 - line 410, column 80: "+[v.constructor.name,tree.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_dictOrd,$tco_var_v,$copy_tree);return $tco_result}}},insert=function(dictOrd){return function(k){return function(v){var $copy_ctx,comp=Data_Ord.compare(dictOrd);return $copy_ctx=Data_List_Types.Nil.value,function($copy_v1){var $tco_result,$tco_var_ctx=$copy_ctx,$tco_done=!1;function $tco_loop(ctx,v1){if(v1 instanceof Leaf)return $tco_done=!0,function($copy_v1){return function($copy_v2){var $tco_result,$tco_var_v1=$copy_v1,$tco_done=!1;function $tco_loop(v1,v2){if(v1 instanceof Data_List_Types.Nil)return $tco_done=!0,new Two(v2.value0,v2.value1,v2.value2,v2.value3);if(v1 instanceof Data_List_Types.Cons){if(v1.value0 instanceof TwoLeft)return $tco_done=!0,fromZipper(dictOrd)(v1.value1)(new Three(v2.value0,v2.value1,v2.value2,v2.value3,v1.value0.value0,v1.value0.value1,v1.value0.value2));if(v1.value0 instanceof TwoRight)return $tco_done=!0,fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0,v1.value0.value1,v1.value0.value2,v2.value0,v2.value1,v2.value2,v2.value3));if(v1.value0 instanceof ThreeLeft)return $tco_var_v1=v1.value1,void($copy_v2=new KickUp(new Two(v2.value0,v2.value1,v2.value2,v2.value3),v1.value0.value0,v1.value0.value1,new Two(v1.value0.value2,v1.value0.value3,v1.value0.value4,v1.value0.value5)));if(v1.value0 instanceof ThreeMiddle)return $tco_var_v1=v1.value1,void($copy_v2=new KickUp(new Two(v1.value0.value0,v1.value0.value1,v1.value0.value2,v2.value0),v2.value1,v2.value2,new Two(v2.value3,v1.value0.value3,v1.value0.value4,v1.value0.value5)));if(v1.value0 instanceof ThreeRight)return $tco_var_v1=v1.value1,void($copy_v2=new KickUp(new Two(v1.value0.value0,v1.value0.value1,v1.value0.value2,v1.value0.value3),v1.value0.value4,v1.value0.value5,new Two(v2.value0,v2.value1,v2.value2,v2.value3)));throw new Error("Failed pattern match at Data.Map line 449, column 5 - line 454, column 108: "+[v1.value0.constructor.name,v2.constructor.name])}throw new Error("Failed pattern match at Data.Map line 446, column 3 - line 446, column 56: "+[v1.constructor.name,v2.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_v1,$copy_v2);return $tco_result}}(ctx)(new KickUp(Leaf.value,k,v,Leaf.value));if(v1 instanceof Two){var v2=comp(k)(v1.value1);return v2 instanceof Data_Ordering.EQ?($tco_done=!0,fromZipper(dictOrd)(ctx)(new Two(v1.value0,k,v,v1.value3))):v2 instanceof Data_Ordering.LT?($tco_var_ctx=new Data_List_Types.Cons(new TwoLeft(v1.value1,v1.value2,v1.value3),ctx),void($copy_v1=v1.value0)):($tco_var_ctx=new Data_List_Types.Cons(new TwoRight(v1.value0,v1.value1,v1.value2),ctx),void($copy_v1=v1.value3))}if(v1 instanceof Three){var v3=comp(k)(v1.value1);if(v3 instanceof Data_Ordering.EQ)return $tco_done=!0,fromZipper(dictOrd)(ctx)(new Three(v1.value0,k,v,v1.value3,v1.value4,v1.value5,v1.value6));var v4=comp(k)(v1.value4);return v4 instanceof Data_Ordering.EQ?($tco_done=!0,fromZipper(dictOrd)(ctx)(new Three(v1.value0,v1.value1,v1.value2,v1.value3,k,v,v1.value6))):v3 instanceof Data_Ordering.LT?($tco_var_ctx=new Data_List_Types.Cons(new ThreeLeft(v1.value1,v1.value2,v1.value3,v1.value4,v1.value5,v1.value6),ctx),void($copy_v1=v1.value0)):v3 instanceof Data_Ordering.GT&&v4 instanceof Data_Ordering.LT?($tco_var_ctx=new Data_List_Types.Cons(new ThreeMiddle(v1.value0,v1.value1,v1.value2,v1.value4,v1.value5,v1.value6),ctx),void($copy_v1=v1.value3)):($tco_var_ctx=new Data_List_Types.Cons(new ThreeRight(v1.value0,v1.value1,v1.value2,v1.value3,v1.value4,v1.value5),ctx),void($copy_v1=v1.value6))}throw new Error("Failed pattern match at Data.Map line 429, column 3 - line 429, column 55: "+[ctx.constructor.name,v1.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_ctx,$copy_v1);return $tco_result}}}},pop=function(dictOrd){return function(k){var $copy_ctx,up=function(ctxs){return function(tree){if(ctxs instanceof Data_List_Types.Nil)return tree;if(ctxs instanceof Data_List_Types.Cons){return function(){if(ctxs.value0 instanceof TwoLeft&&ctxs.value0.value2 instanceof Leaf&&tree instanceof Leaf)return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value,ctxs.value0.value0,ctxs.value0.value1,Leaf.value));if(ctxs.value0 instanceof TwoRight&&ctxs.value0.value0 instanceof Leaf&&tree instanceof Leaf)return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value,ctxs.value0.value1,ctxs.value0.value2,Leaf.value));if(ctxs.value0 instanceof TwoLeft&&ctxs.value0.value2 instanceof Two)return up(ctxs.value1)(new Three(tree,ctxs.value0.value0,ctxs.value0.value1,ctxs.value0.value2.value0,ctxs.value0.value2.value1,ctxs.value0.value2.value2,ctxs.value0.value2.value3));if(ctxs.value0 instanceof TwoRight&&ctxs.value0.value0 instanceof Two)return up(ctxs.value1)(new Three(ctxs.value0.value0.value0,ctxs.value0.value0.value1,ctxs.value0.value0.value2,ctxs.value0.value0.value3,ctxs.value0.value1,ctxs.value0.value2,tree));if(ctxs.value0 instanceof TwoLeft&&ctxs.value0.value2 instanceof Three)return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree,ctxs.value0.value0,ctxs.value0.value1,ctxs.value0.value2.value0),ctxs.value0.value2.value1,ctxs.value0.value2.value2,new Two(ctxs.value0.value2.value3,ctxs.value0.value2.value4,ctxs.value0.value2.value5,ctxs.value0.value2.value6)));if(ctxs.value0 instanceof TwoRight&&ctxs.value0.value0 instanceof Three)return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0,ctxs.value0.value0.value1,ctxs.value0.value0.value2,ctxs.value0.value0.value3),ctxs.value0.value0.value4,ctxs.value0.value0.value5,new Two(ctxs.value0.value0.value6,ctxs.value0.value1,ctxs.value0.value2,tree)));if(ctxs.value0 instanceof ThreeLeft&&ctxs.value0.value2 instanceof Leaf&&ctxs.value0.value5 instanceof Leaf&&tree instanceof Leaf)return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value,ctxs.value0.value0,ctxs.value0.value1,Leaf.value,ctxs.value0.value3,ctxs.value0.value4,Leaf.value));if(ctxs.value0 instanceof ThreeMiddle&&ctxs.value0.value0 instanceof Leaf&&ctxs.value0.value5 instanceof Leaf&&tree instanceof Leaf)return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value,ctxs.value0.value1,ctxs.value0.value2,Leaf.value,ctxs.value0.value3,ctxs.value0.value4,Leaf.value));if(ctxs.value0 instanceof ThreeRight&&ctxs.value0.value0 instanceof Leaf&&ctxs.value0.value3 instanceof Leaf&&tree instanceof Leaf)return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value,ctxs.value0.value1,ctxs.value0.value2,Leaf.value,ctxs.value0.value4,ctxs.value0.value5,Leaf.value));if(ctxs.value0 instanceof ThreeLeft&&ctxs.value0.value2 instanceof Two)return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree,ctxs.value0.value0,ctxs.value0.value1,ctxs.value0.value2.value0,ctxs.value0.value2.value1,ctxs.value0.value2.value2,ctxs.value0.value2.value3),ctxs.value0.value3,ctxs.value0.value4,ctxs.value0.value5));if(ctxs.value0 instanceof ThreeMiddle&&ctxs.value0.value0 instanceof Two)return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0,ctxs.value0.value0.value1,ctxs.value0.value0.value2,ctxs.value0.value0.value3,ctxs.value0.value1,ctxs.value0.value2,tree),ctxs.value0.value3,ctxs.value0.value4,ctxs.value0.value5));if(ctxs.value0 instanceof ThreeMiddle&&ctxs.value0.value5 instanceof Two)return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0,ctxs.value0.value1,ctxs.value0.value2,new Three(tree,ctxs.value0.value3,ctxs.value0.value4,ctxs.value0.value5.value0,ctxs.value0.value5.value1,ctxs.value0.value5.value2,ctxs.value0.value5.value3)));if(ctxs.value0 instanceof ThreeRight&&ctxs.value0.value3 instanceof Two)return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0,ctxs.value0.value1,ctxs.value0.value2,new Three(ctxs.value0.value3.value0,ctxs.value0.value3.value1,ctxs.value0.value3.value2,ctxs.value0.value3.value3,ctxs.value0.value4,ctxs.value0.value5,tree)));if(ctxs.value0 instanceof ThreeLeft&&ctxs.value0.value2 instanceof Three)return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree,ctxs.value0.value0,ctxs.value0.value1,ctxs.value0.value2.value0),ctxs.value0.value2.value1,ctxs.value0.value2.value2,new Two(ctxs.value0.value2.value3,ctxs.value0.value2.value4,ctxs.value0.value2.value5,ctxs.value0.value2.value6),ctxs.value0.value3,ctxs.value0.value4,ctxs.value0.value5));if(ctxs.value0 instanceof ThreeMiddle&&ctxs.value0.value0 instanceof Three)return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0,ctxs.value0.value0.value1,ctxs.value0.value0.value2,ctxs.value0.value0.value3),ctxs.value0.value0.value4,ctxs.value0.value0.value5,new Two(ctxs.value0.value0.value6,ctxs.value0.value1,ctxs.value0.value2,tree),ctxs.value0.value3,ctxs.value0.value4,ctxs.value0.value5));if(ctxs.value0 instanceof ThreeMiddle&&ctxs.value0.value5 instanceof Three)return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0,ctxs.value0.value1,ctxs.value0.value2,new Two(tree,ctxs.value0.value3,ctxs.value0.value4,ctxs.value0.value5.value0),ctxs.value0.value5.value1,ctxs.value0.value5.value2,new Two(ctxs.value0.value5.value3,ctxs.value0.value5.value4,ctxs.value0.value5.value5,ctxs.value0.value5.value6)));if(ctxs.value0 instanceof ThreeRight&&ctxs.value0.value3 instanceof Three)return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0,ctxs.value0.value1,ctxs.value0.value2,new Two(ctxs.value0.value3.value0,ctxs.value0.value3.value1,ctxs.value0.value3.value2,ctxs.value0.value3.value3),ctxs.value0.value3.value4,ctxs.value0.value3.value5,new Two(ctxs.value0.value3.value6,ctxs.value0.value4,ctxs.value0.value5,tree)));throw new Error("Failed pattern match at Data.Map line 499, column 9 - line 516, column 136: "+[ctxs.value0.constructor.name,tree.constructor.name])}()}throw new Error("Failed pattern match at Data.Map line 496, column 5 - line 516, column 136: "+[ctxs.constructor.name])}},removeMaxNode=function(ctx){return function(m){return function(){if(m instanceof Two&&m.value0 instanceof Leaf&&m.value3 instanceof Leaf)return up(ctx)(Leaf.value);if(m instanceof Two)return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0,m.value1,m.value2),ctx))(m.value3);if(m instanceof Three&&m.value0 instanceof Leaf&&m.value3 instanceof Leaf&&m.value6 instanceof Leaf)return up(new Data_List_Types.Cons(new TwoRight(Leaf.value,m.value1,m.value2),ctx))(Leaf.value);if(m instanceof Three)return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0,m.value1,m.value2,m.value3,m.value4,m.value5),ctx))(m.value6);throw new Error("Failed pattern match at Data.Map line 528, column 5 - line 532, column 107: "+[m.constructor.name])}()}},maxNode=function(m){return function(){if(m instanceof Two&&m.value3 instanceof Leaf)return{key:m.value1,value:m.value2};if(m instanceof Two)return maxNode(m.value3);if(m instanceof Three&&m.value6 instanceof Leaf)return{key:m.value4,value:m.value5};if(m instanceof Three)return maxNode(m.value6);throw new Error("Failed pattern match at Data.Map line 519, column 33 - line 523, column 45: "+[m.constructor.name])}()},comp=Data_Ord.compare(dictOrd);return $copy_ctx=Data_List_Types.Nil.value,function($copy_m){var $tco_result,$tco_var_ctx=$copy_ctx,$tco_done=!1;function $tco_loop(ctx,m){if(m instanceof Leaf)return $tco_done=!0,Data_Maybe.Nothing.value;if(m instanceof Two){var v=comp(k)(m.value1);if(m.value3 instanceof Leaf&&v instanceof Data_Ordering.EQ)return $tco_done=!0,new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2,up(ctx)(Leaf.value)));if(v instanceof Data_Ordering.EQ){var max=maxNode(m.value0);return $tco_done=!0,new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2,removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key,max.value,m.value3),ctx))(m.value0)))}return v instanceof Data_Ordering.LT?($tco_var_ctx=new Data_List_Types.Cons(new TwoLeft(m.value1,m.value2,m.value3),ctx),void($copy_m=m.value0)):($tco_var_ctx=new Data_List_Types.Cons(new TwoRight(m.value0,m.value1,m.value2),ctx),void($copy_m=m.value3))}if(m instanceof Three){var leaves=m.value0 instanceof Leaf&&m.value3 instanceof Leaf&&m.value6 instanceof Leaf,v3=(v=comp(k)(m.value4),comp(k)(m.value1));return leaves&&v3 instanceof Data_Ordering.EQ?($tco_done=!0,new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2,fromZipper(dictOrd)(ctx)(new Two(Leaf.value,m.value4,m.value5,Leaf.value))))):leaves&&v instanceof Data_Ordering.EQ?($tco_done=!0,new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5,fromZipper(dictOrd)(ctx)(new Two(Leaf.value,m.value1,m.value2,Leaf.value))))):v3 instanceof Data_Ordering.EQ?(max=maxNode(m.value0),$tco_done=!0,new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2,removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key,max.value,m.value3,m.value4,m.value5,m.value6),ctx))(m.value0)))):v instanceof Data_Ordering.EQ?(max=maxNode(m.value3),$tco_done=!0,new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5,removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0,m.value1,m.value2,max.key,max.value,m.value6),ctx))(m.value3)))):v3 instanceof Data_Ordering.LT?($tco_var_ctx=new Data_List_Types.Cons(new ThreeLeft(m.value1,m.value2,m.value3,m.value4,m.value5,m.value6),ctx),void($copy_m=m.value0)):v3 instanceof Data_Ordering.GT&&v instanceof Data_Ordering.LT?($tco_var_ctx=new Data_List_Types.Cons(new ThreeMiddle(m.value0,m.value1,m.value2,m.value4,m.value5,m.value6),ctx),void($copy_m=m.value3)):($tco_var_ctx=new Data_List_Types.Cons(new ThreeRight(m.value0,m.value1,m.value2,m.value3,m.value4,m.value5),ctx),void($copy_m=m.value6))}throw new Error("Failed pattern match at Data.Map line 469, column 34 - line 492, column 80: "+[m.constructor.name])}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_ctx,$copy_m);return $tco_result}}},foldableMap=new Data_Foldable.Foldable(function(dictMonoid){return function(f){return function(m){return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m))}}},function(f){return function(z){return function(m){return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m))}}},function(f){return function(z){return function(m){return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m))}}}),traversableMap=new Data_Traversable.Traversable(function(){return foldableMap},function(){return functorMap},function(dictApplicative){return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))},function(dictApplicative){return function(f){return function(v){if(v instanceof Leaf)return Control_Applicative.pure(dictApplicative)(Leaf.value);if(v instanceof Two)return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3));if(v instanceof Three)return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value6));throw new Error("Failed pattern match at Data.Map line 114, column 1 - line 114, column 47: "+[f.constructor.name,v.constructor.name])}}}),foldSubmap=function(dictOrd){return function(dictMonoid){return function(kmin){return function(kmax){return function(f){var tooSmall=function(){if(kmin instanceof Data_Maybe.Just)return function(k){return Data_Ord.lessThan(dictOrd)(k)(kmin.value0)};if(kmin instanceof Data_Maybe.Nothing)return Data_Function.const(!1);throw new Error("Failed pattern match at Data.Map line 314, column 7 - line 318, column 22: "+[kmin.constructor.name])}(),tooLarge=function(){if(kmax instanceof Data_Maybe.Just)return function(k){return Data_Ord.greaterThan(dictOrd)(k)(kmax.value0)};if(kmax instanceof Data_Maybe.Nothing)return Data_Function.const(!1);throw new Error("Failed pattern match at Data.Map line 321, column 7 - line 325, column 22: "+[kmax.constructor.name])}(),inBounds=function(){if(kmin instanceof Data_Maybe.Just&&kmax instanceof Data_Maybe.Just)return function(k){return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k)&&Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0)};if(kmin instanceof Data_Maybe.Just&&kmax instanceof Data_Maybe.Nothing)return function(k){return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k)};if(kmin instanceof Data_Maybe.Nothing&&kmax instanceof Data_Maybe.Just)return function(k){return Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0)};if(kmin instanceof Data_Maybe.Nothing&&kmax instanceof Data_Maybe.Nothing)return Data_Function.const(!0);throw new Error("Failed pattern match at Data.Map line 328, column 7 - line 336, column 21: "+[kmin.constructor.name,kmax.constructor.name])}(),go=function(v){if(v instanceof Leaf)return Data_Monoid.mempty(dictMonoid);if(v instanceof Two)return Data_Semigroup.append(dictMonoid.Semigroup0())(tooSmall(v.value1)?Data_Monoid.mempty(dictMonoid):go(v.value0))(Data_Semigroup.append(dictMonoid.Semigroup0())(inBounds(v.value1)?f(v.value1)(v.value2):Data_Monoid.mempty(dictMonoid))(tooLarge(v.value1)?Data_Monoid.mempty(dictMonoid):go(v.value3)));if(v instanceof Three)return Data_Semigroup.append(dictMonoid.Semigroup0())(tooSmall(v.value1)?Data_Monoid.mempty(dictMonoid):go(v.value0))(Data_Semigroup.append(dictMonoid.Semigroup0())(inBounds(v.value1)?f(v.value1)(v.value2):Data_Monoid.mempty(dictMonoid))(Data_Semigroup.append(dictMonoid.Semigroup0())(tooSmall(v.value4)||tooLarge(v.value1)?Data_Monoid.mempty(dictMonoid):go(v.value3))(Data_Semigroup.append(dictMonoid.Semigroup0())(inBounds(v.value4)?f(v.value4)(v.value5):Data_Monoid.mempty(dictMonoid))(tooLarge(v.value4)?Data_Monoid.mempty(dictMonoid):go(v.value6)))));throw new Error("Failed pattern match at Data.Map line 354, column 10 - line 366, column 54: "+[v.constructor.name])};return go}}}}},empty=Leaf.value,$$delete=function(dictOrd){return function(k){return function(m){return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m))}}},alter=function(dictOrd){return function(f){return function(k){return function(m){var v=f(lookup(dictOrd)(k)(m));if(v instanceof Data_Maybe.Nothing)return $$delete(dictOrd)(k)(m);if(v instanceof Data_Maybe.Just)return insert(dictOrd)(k)(v.value0)(m);throw new Error("Failed pattern match at Data.Map line 537, column 15 - line 539, column 25: "+[v.constructor.name])}}}},unionWith=function(dictOrd){return function(f){return function(m1){return function(m2){return Data_Foldable.foldl(Data_List_Types.foldableList)(function(m){return function(v){return alter(dictOrd)(function($753){return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($753))})(v.value0)(m)}})(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1))}}}},union=function(dictOrd){return unionWith(dictOrd)(Data_Function.const)},semigroupMap=function(dictOrd){return new Data_Semigroup.Semigroup(union(dictOrd))},monoidMap=function(dictOrd){return new Data_Monoid.Monoid(function(){return semigroupMap(dictOrd)},empty)};exports.empty=empty,exports.isEmpty=function(v){return v instanceof Leaf},exports.singleton=singleton,exports.insert=insert,exports.lookup=lookup,exports.foldSubmap=foldSubmap,exports.submap=function(dictOrd){return function(kmin){return function(kmax){return foldSubmap(dictOrd)(monoidMap(dictOrd))(kmin)(kmax)(singleton)}}},exports.fromFoldable=function(dictOrd){return function(dictFoldable){return Data_Foldable.foldl(dictFoldable)(function(m){return function(v){return insert(dictOrd)(v.value0)(v.value1)(m)}})(empty)}},exports.fromFoldableWith=function(dictOrd){return function(dictFoldable){return function(f){return Data_Foldable.foldl(dictFoldable)(function(m){return function(v){return alter(dictOrd)(function(v){return function(v1){if(v1 instanceof Data_Maybe.Just)return Data_Maybe.Just.create(f(v)(v1.value0));if(v1 instanceof Data_Maybe.Nothing)return new Data_Maybe.Just(v);throw new Error("Failed pattern match at Data.Map line 554, column 3 - line 554, column 38: "+[v.constructor.name,v1.constructor.name])}}(v.value1))(v.value0)(m)}})(empty)}}},exports.toUnfoldable=toUnfoldable,exports.delete=$$delete,exports.pop=pop,exports.member=function(dictOrd){return function(k){return function(m){return Data_Maybe.isJust(lookup(dictOrd)(k)(m))}}},exports.alter=alter,exports.keys=keys,exports.values=values,exports.union=union,exports.unionWith=unionWith,exports.semigroupMap=semigroupMap,exports.monoidMap=monoidMap,exports.functorMap=functorMap,exports.foldableMap=foldableMap,exports.traversableMap=traversableMap}(PS["Data.Map"]=PS["Data.Map"]||{}),function(exports){"use strict";var Data_Unit=PS["Data.Unit"],$$undefined=(PS["Unsafe.Coerce"],Data_Unit.unit);exports[void 0]=$$undefined}(PS["Data.Typelevel.Undefined"]=PS["Data.Typelevel.Undefined"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"],PS["Data.Boolean"],PS["Data.Eq"],PS["Data.EuclideanRing"],PS["Data.Function"],PS["Data.Ord"],PS["Data.Semiring"],PS["Data.Typelevel.Num.Reps"];var Data_Typelevel_Undefined=PS["Data.Typelevel.Undefined"],Nat=(PS["Partial.Unsafe"],PS.Prelude,function(toInt){this.toInt=toInt}),Pos=function(Nat0){this.Nat0=Nat0},toInt=function(dict){return dict.toInt},natD5=new Nat(function(v){return 5}),posD5=new Pos(function(){return natD5}),natD3=new Nat(function(v){return 3}),posD3=new Pos(function(){return natD3}),natD2=new Nat(function(v){return 2}),natD1=new Nat(function(v){return 1}),div10Dec=function(dictNat){return function(v){return Data_Typelevel_Undefined[void 0]}},subLastDec=function(dictNat){return function(dictNat1){return function($75){return 10*toInt(dictNat1)(div10Dec()($75))|0}}},posNatD1=function(dictPos){return new Nat(function(n){return subLastDec(posNatD1(dictPos))(dictPos.Nat0())(n)+1|0})},posNatD2=function(dictPos){return new Nat(function(n){return subLastDec(posNatD2(dictPos))(dictPos.Nat0())(n)+2|0})};exports.toInt=toInt,exports.Nat=Nat,exports.Pos=Pos,exports.subLastDec=subLastDec,exports.div10Dec=div10Dec,exports.natD1=natD1,exports.natD2=natD2,exports.natD3=natD3,exports.natD5=natD5,exports.posNatD1=posNatD1,exports.posNatD2=posNatD2,exports.posD3=posD3,exports.posD5=posD5,exports.posPosD1=function(dictPos){return new Pos(function(){return posNatD1(dictPos)})},exports.posPosD2=function(dictPos){return new Pos(function(){return posNatD2(dictPos)})}}(PS["Data.Typelevel.Num.Sets"]=PS["Data.Typelevel.Num.Sets"]||{}),function(exports){"use strict";PS["Control.Bind"],PS["Control.Semigroupoid"];var Data_Array=PS["Data.Array"],Data_Bifunctor=PS["Data.Bifunctor"],Data_Binary=PS["Data.Binary"],Data_Binary_Bit=(PS["Data.Binary.BaseN"],PS["Data.Binary.Bit"]),Data_Binary_Bits=PS["Data.Binary.Bits"],Data_Binary_Overflow=PS["Data.Binary.Overflow"],Data_Eq=(PS["Data.Bounded"],PS["Data.Eq"]),Data_Functor=(PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"]),Data_Maybe=(PS["Data.List"],PS["Data.Map"],PS["Data.Maybe"]),Data_Newtype=PS["Data.Newtype"],Data_Ord=PS["Data.Ord"],Data_Semiring=(PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"]),Data_Tuple=(PS["Data.Show"],PS["Data.String"],PS["Data.Traversable"],PS["Data.Tuple"]),Data_Typelevel_Num_Sets=(PS["Data.Typelevel.Num"],PS["Data.Typelevel.Num.Sets"]),Data_Typelevel_Undefined=PS["Data.Typelevel.Undefined"],UnsignedInt=(PS["Partial.Unsafe"],PS.Prelude,function(x){return x}),subtractBits=function(as){return function(bs){return Data_Tuple.uncurry(Data_Binary_Bits.subtractBits)(Data_Binary_Bits.align(as)(bs))}},increment=function(a){return Data_Binary_Overflow.discardOverflow(Data_Binary_Bits.addBits(Data_Binary_Bit._1)(Data_Binary_Bits.zero)(a))},half=function($132){return Data_Tuple.snd(Data_Binary.rightShift(Data_Binary.binaryBits)(Data_Binary_Bit._0)($132))},eqUnsignedInt=function(dictPos){return new Data_Eq.Eq(function(v){return function(v1){return Data_Eq.eq(Data_Binary_Bits.eqBits)(v)(v1)}})},ordUnsignedInt=function(dictPos){return new Data_Ord.Ord(function(){return eqUnsignedInt()},function(v){return function(v1){return Data_Tuple.uncurry(Data_Ord.compare(Data_Ord.ordArray(Data_Binary_Bit.ordBit)))(Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(Data_Newtype.unwrap(Data_Binary_Bits.newtypeBits))(Data_Newtype.unwrap(Data_Binary_Bits.newtypeBits))(Data_Binary_Bits.align(v)(v1)))}})},$$double=function($133){return v=Data_Binary.leftShift(Data_Binary.binaryBits)(Data_Binary_Bit._0)($133),Data_Array.cons(v.value0)(v.value1);var v},mulBits=function(v){return function(v1){if(Data_Binary.isZero(Data_Binary.binaryBits)(v))return Data_Binary_Bits.zero;if(Data_Binary.isZero(Data_Binary.binaryBits)(v1))return Data_Binary_Bits.zero;var z=mulBits(v)(half(v1));return Data_Binary.isEven(Data_Binary.binaryBits)(v1)?$$double(z):Data_Binary_Bits["addBits'"](Data_Binary_Bit._0)(v)($$double(z))}},divModUnsigned=function(x){return function(v){if(Data_Binary.isZero(Data_Binary.binaryBits)(x))return new Data_Tuple.Tuple(x,x);var t=divModUnsigned(half(x))(v),v1=Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)($$double)($$double)(t),r$prime=Data_Binary.isOdd(Data_Binary.binaryBits)(x)?increment(v1.value1):v1.value1;return Data_Ord.greaterThanOrEq(ordUnsignedInt(Data_Typelevel_Num_Sets.posPosD2(Data_Typelevel_Num_Sets.posD3)))(r$prime)(v)?new Data_Tuple.Tuple(increment(v1.value0),subtractBits(r$prime)(v)):new Data_Tuple.Tuple(v1.value0,r$prime)}},binaryUnsignedInt=function(dictPos){return new Data_Binary.Binary(function(v){return function(v1){return Data_Binary.and(Data_Binary.binaryBits)(v)(v1)}},function(bit){return function(v){return Data_Functor.map(Data_Tuple.functorTuple)(UnsignedInt)(Data_Binary.leftShift(Data_Binary.binaryBits)(bit)(v))}},function(v){return Data_Binary.lsb(Data_Binary.binaryBits)(v)},function(v){return Data_Binary.msb(Data_Binary.binaryBits)(v)},function(v){return Data_Binary.not(Data_Binary.binaryBits)(v)},function(v){return function(v1){return Data_Binary.or(Data_Binary.binaryBits)(v)(v1)}},function(bit){return function(v){return Data_Functor.map(Data_Tuple.functorTuple)(UnsignedInt)(Data_Binary.rightShift(Data_Binary.binaryBits)(bit)(v))}},function(v){return Data_Binary.addLeadingZeros(Data_Binary.elasticBits)(Data_Typelevel_Num_Sets.toInt(dictPos.Nat0())(Data_Typelevel_Undefined[void 0]))(v)},function(bits){var bs;return bs=Data_Binary.stripLeadingZeros(Data_Binary.elasticBits)(bits),Data_Binary_Bits.length(bs)>Data_Typelevel_Num_Sets.toInt(dictPos.Nat0())(Data_Typelevel_Undefined[void 0])?Data_Maybe.Nothing.value:Data_Maybe.Just.create(bs)},function(v){return function(v1){return Data_Binary.xor(Data_Binary.binaryBits)(v)(v1)}})},semiringUnsignedInt=function(dictPos){return new Data_Semiring.Semiring(function(v){return function(v1){var v2,nBits=Data_Typelevel_Num_Sets.toInt(dictPos.Nat0())(Data_Typelevel_Undefined[void 0]),result=(v2=nBits,function(v3){if(v3 instanceof Data_Binary_Overflow.NoOverflow)return v3.value0;var numValues=Data_Array.cons(Data_Binary_Bit._1)(Data_Array.replicate(v2)(Data_Binary_Bit._0));return Data_Binary_Bits.tail(subtractBits(Data_Binary_Bits.extendOverflow(v3))(numValues))}(Data_Binary_Bits.addBits(Data_Binary_Bit._0)(v)(v1)));return Data_Binary.unsafeFromBits(binaryUnsignedInt(dictPos))(result)}},function(v){return function(v1){var rawResult=mulBits(v)(v1),nBits=Data_Typelevel_Num_Sets.toInt(dictPos.Nat0())(Data_Typelevel_Undefined[void 0]),numValues=Data_Binary_Bits.Bits(Data_Array.cons(Data_Binary_Bit._1)(Data_Array.replicate(nBits)(Data_Binary_Bit._0))),v2=divModUnsigned(rawResult)(numValues),result=Data_Binary.isOdd(Data_Binary.binaryBits)(v2.value0)?Data_Binary_Bits.tail(v2.value1):v2.value1;return Data_Binary.unsafeFromBits(binaryUnsignedInt(dictPos))(result)}},Data_Binary_Bits.one,Data_Binary_Bits.zero)};exports.fromInt=function(dictPos){return function(dictGtEq){return function(v){return function(i){return i<0?Data_Semiring.zero(semiringUnsignedInt(dictPos)):UnsignedInt(Data_Binary.stripLeadingZeros(Data_Binary.elasticBits)(Data_Binary_Bits.intToBits(i)))}}}},exports.toInt=function(dictPos){return function(dictLt){return function(v){return Data_Binary_Bits.unsafeBitsToInt(v)}}},exports.tryAsBits=function(dictPos){return function(dictPos1){return function(dictGt){return function(v){return Data_Binary.tryFromBits(binaryUnsignedInt(dictPos1))(v)}}}},exports.divModUnsigned=divModUnsigned,exports.eqUnsignedInt=eqUnsignedInt,exports.ordUnsignedInt=ordUnsignedInt,exports.binaryUnsignedInt=binaryUnsignedInt,exports.semiringUnsignedInt=semiringUnsignedInt}(PS["Data.Binary.UnsignedInt"]=PS["Data.Binary.UnsignedInt"]||{}),function(exports){"use strict";(PS["Data.Char.Utils"]=PS["Data.Char.Utils"]||{}).toCodePoint=function(c){return c.codePointAt(0)}}(),function(exports){"use strict";var $foreign=PS["Data.Char.Utils"];PS["Data.Eq"],PS["Data.Int.Bits"],PS["Data.Maybe"],PS.Prelude;exports.toCodePoint=$foreign.toCodePoint}(PS["Data.Char.Utils"]=PS["Data.Char.Utils"]||{}),function(exports){"use strict";exports.setCookieImpl=function(cookie){return function(){return document.cookie=cookie,{}}},exports.getCookiesImpl=function(){return document.cookie}}(PS["Data.Cookie"]=PS["Data.Cookie"]||{}),function(exports){"use strict";PS["Data.Maybe"];var Inl=function(){function Inl(value0){this.value0=value0}return Inl.create=function(value0){return new Inl(value0)},Inl}(),Inr=function(){function Inr(value0){this.value0=value0}return Inr.create=function(value0){return new Inr(value0)},Inr}(),Product=function(){function Product(value0,value1){this.value0=value0,this.value1=value1}return Product.create=function(value0){return function(value1){return new Product(value0,value1)}},Product}(),NoArguments=function(){function NoArguments(){}return NoArguments.value=new NoArguments,NoArguments}();exports.Generic=function(from,to){this.from=from,this.to=to},exports.to=function(dict){return dict.to},exports.from=function(dict){return dict.from},exports.NoArguments=NoArguments,exports.Inl=Inl,exports.Inr=Inr,exports.Product=Product}(PS["Data.Generic.Rep"]=PS["Data.Generic.Rep"]||{}),function(exports){"use strict";PS["Control.Apply"],PS["Control.Category"],PS["Control.Semigroupoid"],PS["Data.Array"],PS["Data.Boolean"],PS["Data.Char"],PS["Data.Eq"],PS["Data.EuclideanRing"];var Data_Foldable=PS["Data.Foldable"],Data_Monoid=(PS["Data.Function"],PS["Data.Functor"],PS["Data.Generic.Rep"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"],PS["Data.Monoid"]),Data_String=(PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.String"]),words=(PS["Data.Traversable"],PS["Data.Tuple"],PS["Data.Unfoldable"],PS.Prelude,Data_String.split(" ")),unwords=Data_String.joinWith(" "),lines=Data_String.split("\n");exports.fromChars=function(dictFoldable){return Data_Foldable.foldMap(dictFoldable)(Data_Monoid.monoidString)(Data_String.singleton)},exports.lines=lines,exports.words=words,exports.unwords=unwords}(PS["Data.String.Yarn"]=PS["Data.String.Yarn"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad=(PS["Control.Lazy"],PS["Control.Monad"]),Control_Monad_Rec_Class=PS["Control.Monad.Rec.Class"],Control_Plus=(PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Plus"]),Data_Bifunctor=(PS["Control.Semigroupoid"],PS["Data.Bifunctor"]),Data_Boolean=PS["Data.Boolean"],Data_Either=PS["Data.Either"],Data_Functor=(PS["Data.Eq"],PS["Data.Function"],PS["Data.Functor"]),ParseError=(PS["Data.Ord"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.Unit"],PS.Prelude,function(){function ParseError(value0){this.value0=value0}return ParseError.create=function(value0){return new ParseError(value0)},ParseError}()),unParser=function(v){return v},functorParser=new Data_Functor.Functor(function(f){return function(v){return function($83){return Data_Functor.map(Data_Either.functorEither)(function(v1){return{result:f(v1.result),suffix:v1.suffix}})(v($83))}}}),fail=function(msg){return function(v){return new Data_Either.Left({pos:v.pos,error:new ParseError(msg)})}},applyParser=new Control_Apply.Apply(function(){return functorParser},function(v){return function(v1){return function(s){return Control_Bind.bind(Data_Either.bindEither)(v(s))(function(v2){return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(function(v3){return Control_Applicative.pure(Data_Either.applicativeEither)({result:v2.result(v3.result),suffix:v3.suffix})})})}}}),bindParser=new Control_Bind.Bind(function(){return applyParser},function(v){return function(f){return function(s){return Control_Bind.bind(Data_Either.bindEither)(v(s))(function(v1){return unParser(f(v1.result))(v1.suffix)})}}}),applicativeParser=new Control_Applicative.Applicative(function(){return applyParser},function(a){return function(s){return new Data_Either.Right({result:a,suffix:s})}}),monadParser=new Control_Monad.Monad(function(){return applicativeParser},function(){return bindParser}),monadRecParser=new Control_Monad_Rec_Class.MonadRec(function(){return monadParser},function(f){return function(a){var split=function(v){if(v.result instanceof Control_Monad_Rec_Class.Loop)return new Control_Monad_Rec_Class.Loop({state:v.result.value0,str:v.suffix});if(v.result instanceof Control_Monad_Rec_Class.Done)return new Control_Monad_Rec_Class.Done({result:v.result.value0,suffix:v.suffix});throw new Error("Failed pattern match at Text.Parsing.StringParser line 88, column 7 - line 88, column 70: "+[v.constructor.name])};return function(str){return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEither)(function(st){return Data_Functor.map(Data_Either.functorEither)(split)(unParser(f(st.state))(st.str))})({state:a,str:str})}}}),altParser=new Control_Alt.Alt(function(){return functorParser},function(v){return function(v1){return function(s){var v2=v(s);if(v2 instanceof Data_Either.Left){if(s.pos===v2.value0.pos)return v1(s);if(Data_Boolean.otherwise)return new Data_Either.Left({error:v2.value0.error,pos:v2.value0.pos})}return v2}}}),plusParser=new Control_Plus.Plus(function(){return altParser},fail("No alternative")),alternativeParser=new Control_Alternative.Alternative(function(){return applicativeParser},function(){return plusParser});exports.ParseError=ParseError,exports.unParser=unParser,exports.runParser=function(v){return function(s){return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function(v1){return v1.error})(function(v1){return v1.result})(v({str:s,pos:0}))}},exports.fail=fail,exports.try=function(v){return function(v1){return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function(v2){var $34={};for(var $35 in v2)({}).hasOwnProperty.call(v2,$35)&&($34[$35]=v2[$35]);return $34.pos=v1.pos,$34})(v(v1))}},exports.functorParser=functorParser,exports.applyParser=applyParser,exports.applicativeParser=applicativeParser,exports.altParser=altParser,exports.plusParser=plusParser,exports.alternativeParser=alternativeParser,exports.bindParser=bindParser,exports.monadParser=monadParser,exports.monadRecParser=monadRecParser}(PS["Text.Parsing.StringParser"]=PS["Text.Parsing.StringParser"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad_Rec_Class=(PS["Control.Lazy"],PS["Control.Monad.Rec.Class"]),Data_Foldable=(PS["Data.Either"],PS["Data.Foldable"]),Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_List=PS["Data.List"],Data_List_Types=PS["Data.List.Types"],Data_Maybe=PS["Data.Maybe"],Text_Parsing_StringParser=(PS["Data.Unit"],PS.Prelude,PS["Text.Parsing.StringParser"]),option=function(a){return function(p){return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a))}},many=Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(Text_Parsing_StringParser.alternativeParser),sepBy1=function(p){return function(sep){return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function(v){return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(sep)(p)))(function(v1){return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List_Types.Cons(v,v1))})})}};exports.many=many,exports.many1=function(p){return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_Types.Cons.create)(p))(many(p))},exports.withError=function(p){return function(msg){return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Text_Parsing_StringParser.fail(msg))}},exports.option=option,exports.optionMaybe=function(p){return option(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.Just.create)(p))},exports.sepBy=function(p){return function(sep){return Control_Alt.alt(Text_Parsing_StringParser.altParser)(sepBy1(p)(sep))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value))}},exports.sepBy1=sepBy1,exports.choice=function(dictFoldable){return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_StringParser.altParser))(Text_Parsing_StringParser.fail("Nothing to parse"))},exports.many1Till=function(p){return function(end){var inner=function(acc){return Control_Alt.alt(Text_Parsing_StringParser.altParser)(function(acc){return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(end)(function(v){return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Done(Data_List.reverse(acc)))})}(acc))(function(acc){return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function(v){return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Loop(new Data_List_Types.Cons(v,acc)))})}(acc))};return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function(v){return Control_Monad_Rec_Class.tailRecM(Text_Parsing_StringParser.monadRecParser)(inner)(Control_Applicative.pure(Data_List_Types.applicativeList)(v))})}}}(PS["Text.Parsing.StringParser.Combinators"]=PS["Text.Parsing.StringParser.Combinators"]||{}),function(exports){"use strict";exports["regex'"]=function(left){return function(right){return function(s1){return function(s2){try{return right(new RegExp(s1,s2))}catch(e){return left(e.message)}}}}},exports._match=function(just){return function(nothing){return function(r){return function(s){var m=s.match(r);if(null==m)return nothing;for(var i=0;i<m.length;i++)m[i]=null==m[i]?nothing:just(m[i]);return just(m)}}}},exports.replace=function(r){return function(s1){return function(s2){return s2.replace(r,s1)}}}}(PS["Data.String.Regex"]=PS["Data.String.Regex"]||{}),function(exports){"use strict";PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Data.Eq"],PS["Data.Functor"],PS["Data.HeytingAlgebra"],PS["Data.Monoid"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.String"],PS.Prelude;var RegexFlags=function(){function RegexFlags(value0){this.value0=value0}return RegexFlags.create=function(value0){return new RegexFlags(value0)},RegexFlags}(),noFlags=new RegexFlags({global:!1,ignoreCase:!1,multiline:!1,sticky:!1,unicode:!1}),global=new RegexFlags({global:!0,ignoreCase:!1,multiline:!1,sticky:!1,unicode:!1});exports.RegexFlags=RegexFlags,exports.noFlags=noFlags,exports.global=global}(PS["Data.String.Regex.Flags"]=PS["Data.String.Regex.Flags"]||{}),function(exports){"use strict";var $foreign=PS["Data.String.Regex"],Data_Either=(PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Maybe=(PS["Data.Function"],PS["Data.Maybe"]),renderFlags=(PS["Data.Semigroup"],PS["Data.Show"],PS["Data.String"],PS["Data.String.Regex.Flags"],PS.Prelude,function(v){return(v.value0.global?"g":"")+(v.value0.ignoreCase?"i":"")+(v.value0.multiline?"m":"")+(v.value0.sticky?"y":"")+(v.value0.unicode?"u":"")}),match=$foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);exports.regex=function(s){return function(f){return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f))}},exports.renderFlags=renderFlags,exports.match=match,exports.replace=$foreign.replace}(PS["Data.String.Regex"]=PS["Data.String.Regex"]||{}),function(exports){"use strict";PS["Control.Alt"];var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Data_Either=(PS["Control.Semigroupoid"],PS["Data.Array"],PS["Data.Char"],PS["Data.Either"]),Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Maybe=(PS["Data.Functor"],PS["Data.HeytingAlgebra"],PS["Data.List.Types"],PS["Data.Maybe"]),Data_Show=(PS["Data.Monoid"],PS["Data.Ord"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"]),Data_String=PS["Data.String"],Text_Parsing_StringParser=(PS["Data.String.Regex"],PS["Data.String.Regex.Flags"],PS["Data.Unit"],PS.Prelude,PS["Text.Parsing.StringParser"]),Text_Parsing_StringParser_Combinators=PS["Text.Parsing.StringParser.Combinators"],anyChar=function(v){var v1=Data_String.charAt(v.pos)(v.str);if(v1 instanceof Data_Maybe.Just)return new Data_Either.Right({result:v1.value0,suffix:{str:v.str,pos:v.pos+1|0}});if(v1 instanceof Data_Maybe.Nothing)return new Data_Either.Left({pos:v.pos,error:new Text_Parsing_StringParser.ParseError("Unexpected EOF")});throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 45, column 3 - line 47, column 64: "+[v1.constructor.name])},anyDigit=Text_Parsing_StringParser.try(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function(v){return"0"<=v&&v<="9"?Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v):Text_Parsing_StringParser.fail("Character "+Data_Show.show(Data_Show.showChar)(v)+" is not a digit")})),satisfy=function(f){return Text_Parsing_StringParser.try(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function(v){return f(v)?Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v):Text_Parsing_StringParser.fail("Character "+Data_Show.show(Data_Show.showChar)(v)+" did not satisfy predicate")}))};exports.anyChar=anyChar,exports.anyDigit=anyDigit,exports.string=function(nt){return function(s){return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String["indexOf'"](nt)(s.pos)(s.str))(new Data_Maybe.Just(s.pos))?new Data_Either.Right({result:nt,suffix:{str:s.str,pos:s.pos+Data_String.length(nt)|0}}):new Data_Either.Left({pos:s.pos,error:new Text_Parsing_StringParser.ParseError("Expected '"+nt+"'.")})}},exports.satisfy=satisfy,exports.char=function(c){return Text_Parsing_StringParser_Combinators.withError(satisfy(function(v){return v===c}))("Could not match character "+Data_Show.show(Data_Show.showChar)(c))},exports.oneOf=function(dictFoldable){return function($48){return satisfy(Data_Function.flip(Data_Foldable.elem(dictFoldable)(Data_Eq.eqChar))($48))}},exports.noneOf=function(dictFoldable){return function($47){return satisfy(Data_Function.flip(Data_Foldable.notElem(dictFoldable)(Data_Eq.eqChar))($47))}}}(PS["Text.Parsing.StringParser.String"]=PS["Text.Parsing.StringParser.String"]||{}),function(exports){"use strict";var $foreign=PS["Data.Cookie"],Control_Applicative=PS["Control.Applicative"],Control_Bind=(PS["Control.Apply"],PS["Control.Bind"]),Control_Category=PS["Control.Category"],Control_Monad_Eff=PS["Control.Monad.Eff"],Control_Monad_Eff_Exception=PS["Control.Monad.Eff.Exception"],Data_Either=(PS["Control.Semigroupoid"],PS.DOM,PS["Data.Either"]),Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_List_Types=(PS["Data.Generic.Rep"],PS["Data.List.Types"]),Data_Map=PS["Data.Map"],Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Nullable=PS["Data.Nullable"],Data_Ord=PS["Data.Ord"],Data_String_Yarn=(PS["Data.Semigroup"],PS["Data.Show"],PS["Data.String.Yarn"]),Data_Tuple=PS["Data.Tuple"],Text_Parsing_StringParser=(PS["Data.Tuple.Nested"],PS["Data.Unit"],PS.Prelude,PS["Text.Parsing.StringParser"]),Text_Parsing_StringParser_Combinators=PS["Text.Parsing.StringParser.Combinators"],Text_Parsing_StringParser_String=PS["Text.Parsing.StringParser.String"],Token=function(x){return x},CookieName=function(x){return x},Cookie=function(x){return x},oldGenericToken=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SString?Data_Maybe.Just.create(Token(v.value0)):Data_Maybe.Nothing.value},function(v){return Data_Generic.SigString.value},function(v){return new Data_Generic.SString(v)}),newtypeToken=new Data_Newtype.Newtype(function(n){return n},Token),newtypeCookieName=new Data_Newtype.Newtype(function(n){return n},CookieName),newtypeCookie=new Data_Newtype.Newtype(function(n){return n},Cookie),eqCookieName=new Data_Eq.Eq(function(x){return function(y){return x===y}}),ordCookieName=new Data_Ord.Ord(function(){return eqCookieName},function(x){return function(y){return Data_Ord.compare(Data_Ord.ordString)(x)(y)}}),cookieParser=Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(function($94){return CookieName(Data_String_Yarn.fromChars(Data_List_Types.foldableList)($94))})(Text_Parsing_StringParser_Combinators.many1Till(Text_Parsing_StringParser_String.anyChar)(Text_Parsing_StringParser_String.oneOf(Data_Foldable.foldableArray)([" ","="]))))(function(v){return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(function($95){return Cookie(Data_String_Yarn.fromChars(Data_List_Types.foldableList)($95))})(Text_Parsing_StringParser_Combinators.many1(Text_Parsing_StringParser_String.noneOf(Data_Foldable.foldableArray)([";"]))))(function(v1){return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_Tuple.Tuple(v,v1))})}),cookiesParser=Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.sepBy(cookieParser)(Text_Parsing_StringParser_String.string("; ")))(function(v){return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Map.fromFoldable(ordCookieName)(Data_List_Types.foldableList)(v))}),parseCookies=function($96){return Data_Either.either(function(v){return Data_Map.empty})(Control_Category.id(Control_Category.categoryFn))(Text_Parsing_StringParser.runParser(cookiesParser)($96))},getCookie=function(name){return Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(function($97){return Data_Maybe["maybe'"](function(v){return Control_Monad_Eff_Exception.throw("No cookie")})(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function($98){return Data_Map.lookup(ordCookieName)(name)(parseCookies($98))})(Data_Nullable.toMaybe)($97))})($foreign.getCookiesImpl)},getXSRFToken=Data_Functor.map(Control_Monad_Eff.functorEff)(function($99){return Data_Newtype.wrap(newtypeToken)(Data_Newtype.unwrap(newtypeCookie)($99))})(getCookie("XSRF-TOKEN"));exports.Token=Token,exports.Cookie=Cookie,exports.CookieName=CookieName,exports.getCookie=getCookie,exports.parseCookies=parseCookies,exports.cookiesParser=cookiesParser,exports.cookieParser=cookieParser,exports.setCookie=function($91){return $foreign.setCookieImpl(Data_Newtype.unwrap(newtypeCookie)($91))},exports.deleteCookie=function($93){return $foreign.setCookieImpl(Data_Newtype.unwrap(newtypeCookieName)($93)+"='';max-age=0")},exports.getXSRFToken=getXSRFToken,exports.xsrfToken="XSRF-TOKEN",exports.newtypeToken=newtypeToken,exports.oldGenericToken=oldGenericToken,exports.newtypeCookie=newtypeCookie,exports.eqCookieName=eqCookieName,exports.ordCookieName=ordCookieName,exports.newtypeCookieName=newtypeCookieName}(PS["Data.Cookie"]=PS["Data.Cookie"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Category"],PS["Control.Comonad"],PS["Control.Extend"],PS["Control.Monad"],PS["Control.Monad.Trans.Class"],PS["Control.Semigroupoid"],PS["Data.Eq"];var Data_Exists=PS["Data.Exists"],CoyonedaF=(PS["Data.Function"],PS["Data.Functor"],PS["Data.Ord"],PS.Prelude,function(){function CoyonedaF(value0,value1){this.value0=value0,this.value1=value1}return CoyonedaF.create=function(value0){return function(value1){return new CoyonedaF(value0,value1)}},CoyonedaF}()),Coyoneda=function(x){return x};exports.Coyoneda=Coyoneda,exports.coyoneda=function(k){return function(fi){return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k,fi)))}},exports.unCoyoneda=function(f){return function(v){return Data_Exists.runExists(function(v1){return f(v1.value0)(v1.value1)})(v)}}}(PS["Data.Coyoneda"]=PS["Data.Coyoneda"]||{}),function(exports){"use strict";var Data_Either=PS["Data.Either"],in1=(PS["Data.Void"],Data_Either.Left.create);exports.in1=in1,exports.in2=function(v){return new Data_Either.Right(new Data_Either.Left(v))},exports.in3=function(v){return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))},exports.at1=function(b){return function(f){return function(y){return y instanceof Data_Either.Left?f(y.value0):b}}},exports.at2=function(b){return function(f){return function(y){return y instanceof Data_Either.Right&&y.value0 instanceof Data_Either.Left?f(y.value0.value0):b}}},exports.at3=function(b){return function(f){return function(y){return y instanceof Data_Either.Right&&y.value0 instanceof Data_Either.Right&&y.value0.value0 instanceof Data_Either.Left?f(y.value0.value0.value0):b}}}}(PS["Data.Either.Nested"]=PS["Data.Either.Nested"]||{}),function(exports){"use strict";var CProxy=function(){function CProxy(){}return CProxy.value=new CProxy,CProxy}(),Currency=function(code,decimals){this.code=code,this.decimals=decimals},currencyGBP=new Currency(function(v){return"GBP"},function(v){return 2});exports.code=function(dict){return dict.code},exports.decimals=function(dict){return dict.decimals},exports.CProxy=CProxy,exports.Currency=Currency,exports.currencyGBP=currencyGBP}(PS["Data.Finance.Currency"]=PS["Data.Finance.Currency"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Data_Function=(PS["Control.Semigroupoid"],PS["Data.Function"]),Data_List_Types=(PS["Data.List"],PS["Data.List.Types"]),Data_Semigroup=PS["Data.Semigroup"],Data_Unit=PS["Data.Unit"],IfNegative=(PS.Prelude,function(){function IfNegative(value0){this.value0=value0}return IfNegative.create=function(value0){return new IfNegative(value0)},IfNegative}()),Literal=function(){function Literal(value0){this.value0=value0}return Literal.create=function(value0){return new Literal(value0)},Literal}(),CurrencyCode=function(){function CurrencyCode(){}return CurrencyCode.value=new CurrencyCode,CurrencyCode}(),Absolute=function(){function Absolute(){}return Absolute.value=new Absolute,Absolute}(),absolute=Control_Applicative.pure(Data_List_Types.applicativeList)(Absolute.value);exports.IfNegative=IfNegative,exports.Literal=Literal,exports.CurrencyCode=CurrencyCode,exports.Absolute=Absolute,exports.ifNegative=function($4){return Control_Applicative.pure(Data_List_Types.applicativeList)(IfNegative.create($4))},exports.literal=function($3){return Control_Applicative.pure(Data_List_Types.applicativeList)(Literal.create($3))},exports.absolute=absolute,exports.sbind=function(dictSemigroup){return Data_Function.flip(function($2){return Data_Function.flip(Data_Semigroup.append(dictSemigroup))($2(Data_Unit.unit))})}}(PS["Data.Finance.Money.Format"]=PS["Data.Finance.Money.Format"]||{}),function(exports){"use strict";PS["Data.CommutativeRing"],PS["Data.Eq"];var Data_EuclideanRing=PS["Data.EuclideanRing"],Data_Ord=(PS["Data.Field"],PS["Data.HeytingAlgebra"],PS["Data.Ord"]),Data_Semiring=(PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"]),Ratio=(PS["Data.Show"],PS.Prelude,function(){function Ratio(value0,value1){this.value0=value0,this.value1=value1}return Ratio.create=function(value0){return function(value1){return new Ratio(value0,value1)}},Ratio}());exports.reduce=function(dictOrd){return function(dictEuclideanRing){return function(n){return function(d){var g=Data_EuclideanRing.gcd(dictOrd.Eq0())(dictEuclideanRing)(n)(d),d$prime=Data_EuclideanRing.div(dictEuclideanRing)(d)(g);return new Ratio(Data_Semiring.mul(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())(Data_EuclideanRing.div(dictEuclideanRing)(n)(g))(Data_Ord.signum(dictOrd)(dictEuclideanRing.CommutativeRing0().Ring0())(d$prime)),Data_Ord.abs(dictOrd)(dictEuclideanRing.CommutativeRing0().Ring0())(d$prime))}}}},exports.numerator=function(v){return v.value0},exports.denominator=function(v){return v.value1}}(PS["Data.Ratio"]=PS["Data.Ratio"]||{}),function(exports){"use strict";var Data_EuclideanRing=PS["Data.EuclideanRing"],Data_Int=PS["Data.Int"],Data_Ord=PS["Data.Ord"],Data_Ratio=PS["Data.Ratio"];PS.Prelude;exports.toNumber=function(x){return Data_Int.toNumber(Data_Ratio.numerator(x))/Data_Int.toNumber(Data_Ratio.denominator(x))},exports.fromInt=function(i){return Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(i)(1)}}(PS["Data.Rational"]=PS["Data.Rational"]||{}),function(exports){"use strict";(PS["Global.Unsafe"]=PS["Global.Unsafe"]||{}).unsafeToFixed=function(digits){return function(n){return n.toFixed(digits)}}}(),function(exports){"use strict";var $foreign=PS["Global.Unsafe"];exports.unsafeToFixed=$foreign.unsafeToFixed}(PS["Global.Unsafe"]=PS["Global.Unsafe"]||{}),function(exports){"use strict";PS["Control.Apply"];var Data_Eq=PS["Data.Eq"],Data_EuclideanRing=PS["Data.EuclideanRing"],Data_Finance_Currency=PS["Data.Finance.Currency"],Data_Finance_Money_Format=PS["Data.Finance.Money.Format"],Data_Foldable=PS["Data.Foldable"],Data_Int=(PS["Data.Function"],PS["Data.Generic"],PS["Data.Int"]),Data_List_Types=PS["Data.List.Types"],Data_Monoid=(PS["Data.Maybe"],PS["Data.Module"],PS["Data.Monoid"]),Data_Newtype=PS["Data.Newtype"],Data_Ord=PS["Data.Ord"],Data_Ratio=(PS["Data.Ordering"],PS["Data.Ratio"]),Data_Ring=(PS["Data.Rational"],PS["Data.Ring"]),Global_Unsafe=(PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.Unit"],PS["Global.Unsafe"]),$$Math=PS.Math,Dense=(PS.Prelude,function(x){return x}),newtypeDense=new Data_Newtype.Newtype(function(n){return n},Dense),eqDiscrete=Data_Eq.eqInt;exports.Discrete=function(x){return x},exports.formatDiscrete=function(dictCurrency){return function(f){return function(v){var go=function(v1){if(v1 instanceof Data_Finance_Money_Format.IfNegative)return v<0?Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(go)(v1.value0):"";if(v1 instanceof Data_Finance_Money_Format.Literal)return v1.value0;if(v1 instanceof Data_Finance_Money_Format.CurrencyCode)return Data_Finance_Currency.code(dictCurrency)(Data_Finance_Currency.CProxy.value);if(v1 instanceof Data_Finance_Money_Format.Absolute){var n$prime=Data_Ord.abs(Data_Ord.ordNumber)(Data_Ring.ringNumber)(Data_Int.toNumber(v)),d=Data_Finance_Currency.decimals(dictCurrency)(Data_Finance_Currency.CProxy.value);return Global_Unsafe.unsafeToFixed(d)(n$prime/$$Math.pow(10)(Data_Int.toNumber(d)))}throw new Error("Failed pattern match at Data.Finance.Money line 59, column 3 - line 60, column 3: "+[v1.constructor.name])};return Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(go)(f)}}},exports.Dense=Dense,exports.fromDiscrete=function(dictCurrency){return function(v){var d=Data_Finance_Currency.decimals(dictCurrency)(Data_Finance_Currency.CProxy.value);return Dense(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(v)(Data_Int.pow(10)(d)))}},exports.eqDiscrete=eqDiscrete,exports.newtypeDense=newtypeDense}(PS["Data.Finance.Money"]=PS["Data.Finance.Money"]||{}),function(exports){"use strict";(PS["Data.Foreign.Index"]=PS["Data.Foreign.Index"]||{}).unsafeReadPropImpl=function(f,s,key,value){return null==value?f:s(value[key])}}(),function(exports){"use strict";var $foreign=PS["Data.Foreign.Index"],Control_Applicative=PS["Control.Applicative"],Control_Monad_Except_Trans=(PS["Control.Bind"],PS["Control.Monad.Except.Trans"]),Data_Foreign=(PS["Data.Eq"],PS["Data.Foreign"]),Data_Identity=(PS["Data.Function"],PS["Data.Function.Uncurried"],PS["Data.HeytingAlgebra"],PS["Data.Identity"]),readProp=(PS["Data.List.NonEmpty"],PS.Prelude,function(k){return function(value){return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object",Data_Foreign.typeOf(value))),Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)),k,value)}});exports.readProp=readProp}(PS["Data.Foreign.Index"]=PS["Data.Foreign.Index"]||{}),function(exports){"use strict";(PS["Data.Foreign.JSON"]=PS["Data.Foreign.JSON"]||{}).parseJSONImpl=function(str){return JSON.parse(str)}}(),function(exports){"use strict";var $foreign=PS["Data.Foreign.JSON"],Control_Applicative=PS["Control.Applicative"],Control_Monad_Eff=(PS["Control.Bind"],PS["Control.Monad.Eff"]),Control_Monad_Eff_Exception=PS["Control.Monad.Eff.Exception"],Control_Monad_Eff_Uncurried=PS["Control.Monad.Eff.Uncurried"],Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Data_Bifunctor=(PS["Control.Semigroupoid"],PS["Data.Bifunctor"]),Data_Either=PS["Data.Either"],Data_Foreign=PS["Data.Foreign"],Data_Identity=PS["Data.Identity"],Data_List_Types=PS["Data.List.Types"];PS.Prelude;exports.parseJSON=function($0){return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function($1){return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.JSONError.create(Control_Monad_Eff_Exception.message($1)))})(Control_Monad_Eff.runPure(Control_Monad_Eff_Exception.try(Control_Monad_Eff_Uncurried.runEffFn1($foreign.parseJSONImpl)($0))))))}}(PS["Data.Foreign.JSON"]=PS["Data.Foreign.JSON"]||{}),function(exports){"use strict";PS["Data.Foreign.NullOrUndefined"];var Control_Applicative=PS["Control.Applicative"],Control_Monad_Except_Trans=PS["Control.Monad.Except.Trans"],Data_Foreign=PS["Data.Foreign"],Data_Functor=PS["Data.Functor"],Data_Identity=(PS["Data.HeytingAlgebra"],PS["Data.Identity"]),Data_Maybe=PS["Data.Maybe"];PS.Prelude;exports.readNullOrUndefined=function(v){return function(value){return Data_Foreign.isNull(value)||Data_Foreign.isUndefined(value)?Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value):Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Maybe.Just.create)(v(value))}}}(PS["Data.Foreign.NullOrUndefined"]=PS["Data.Foreign.NullOrUndefined"]||{}),function(exports){"use strict";var Data_Foldable=PS["Data.Foldable"],Data_Monoid=PS["Data.Monoid"],Data_Semigroup=(PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semigroup"]);PS["Data.Semiring"],PS.Prelude;exports.foldDigits=function(dictFoldable){return Data_Foldable.foldl(dictFoldable)(function(acc){return function(d){return(10*acc|0)+d|0}})(0)},exports.repeat=function(dictMonoid){var $copy_accum;return $copy_accum=Data_Monoid.mempty(dictMonoid),function($copy_part){return function($copy_count){var $tco_result,$tco_var_accum=$copy_accum,$tco_var_part=$copy_part,$tco_done=!1;function $tco_loop(accum,part,count){if(count<1)return $tco_done=!0,accum;$tco_var_accum=Data_Semigroup.append(dictMonoid.Semigroup0())(accum)(part),$tco_var_part=part,$copy_count=count-1|0}for(;!$tco_done;)$tco_result=$tco_loop($tco_var_accum,$tco_var_part,$copy_count);return $tco_result}}}}(PS["Data.Formatter.Internal"]=PS["Data.Formatter.Internal"]||{}),function(exports){"use strict";PS["Data.Eq"],PS["Data.EuclideanRing"];var Data_Foldable=PS["Data.Foldable"],Data_Newtype=(PS["Data.HeytingAlgebra"],PS["Data.Newtype"]),Data_String=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.String"]);PS.Prelude;exports.initialPos={line:1,column:1},exports.updatePosString=function(pos$prime){return function(str){return Data_Foldable.foldl(Data_Foldable.foldableArray)(function(v){return function(c){return"\n"===c?{line:v.line+1|0,column:1}:"\r"===c?{line:v.line+1|0,column:1}:"\t"===c?{line:v.line,column:(v.column+8|0)-(v.column-1|0)%8|0}:{line:v.line,column:v.column+1|0}}})(pos$prime)(Data_String.split(Data_Newtype.wrap(Data_String.newtypePattern)(""))(str))}}}(PS["Text.Parsing.Parser.Pos"]=PS["Text.Parsing.Parser.Pos"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Lazy=PS["Control.Lazy"],Control_Monad_Error_Class=(PS["Control.Monad"],PS["Control.Monad.Error.Class"]),Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Control_Monad_State_Class=(PS["Control.Monad.Rec.Class"],PS["Control.Monad.State"],PS["Control.Monad.State.Class"]),Control_Monad_State_Trans=PS["Control.Monad.State.Trans"],Control_Monad_Trans_Class=PS["Control.Monad.Trans.Class"],Control_Plus=(PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Plus"]),Data_Either=(PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Identity=(PS["Data.Eq"],PS["Data.Functor"],PS["Data.HeytingAlgebra"],PS["Data.Identity"]),Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Semigroup=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"]),Data_Tuple=(PS["Data.Show"],PS["Data.Tuple"]),Text_Parsing_Parser_Pos=(PS.Prelude,PS["Text.Parsing.Parser.Pos"]),ParseState=function(){function ParseState(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return ParseState.create=function(value0){return function(value1){return function(value2){return new ParseState(value0,value1,value2)}}},ParseState}(),ParseError=function(){function ParseError(value0,value1){this.value0=value0,this.value1=value1}return ParseError.create=function(value0){return function(value1){return new ParseError(value0,value1)}},ParseError}(),ParserT=function(x){return x},newtypeParserT=new Data_Newtype.Newtype(function(n){return n},ParserT),runParserT=function(dictMonad){return function(s){return function(p){var initialState=new ParseState(s,Text_Parsing_Parser_Pos.initialPos,!1);return Control_Monad_State_Trans.evalStateT(dictMonad.Bind1().Apply0().Functor0())(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p)))(initialState)}}},monadTransParserT=new Control_Monad_Trans_Class.MonadTrans(function(dictMonad){return function($91){return ParserT(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad)($91)))}}),monadThrowParserT=function(dictMonad){return Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(dictMonad))},monadStateParserT=function(dictMonad){return Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad))},position=function(dictMonad){return Control_Monad_State_Class.gets(monadStateParserT(dictMonad))(function(v){return v.value1})},lazyParserT=new Control_Lazy.Lazy(function(f){return Control_Lazy.defer(Control_Monad_State_Trans.lazyStateT)(function($93){return Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(f($93)))})}),functorParserT=function(dictFunctor){return Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(dictFunctor))},failWithPosition=function(dictMonad){return function(message){return function(pos){return Control_Monad_Error_Class.throwError(monadThrowParserT(dictMonad))(new ParseError(message,pos))}}},bindParserT=function(dictMonad){return Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad))},fail=function(dictMonad){return function(message){return Control_Bind.bindFlipped(bindParserT(dictMonad))(failWithPosition(dictMonad)(message))(position(dictMonad))}},applyParserT=function(dictMonad){return Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(dictMonad))},semigroupParserT=function(dictMonad){return function(dictSemigroup){return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParserT(dictMonad))(Data_Semigroup.append(dictSemigroup)))}},applicativeParserT=function(dictMonad){return Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad))},altParserT=function(dictMonad){return new Control_Alt.Alt(function(){return functorParserT(dictMonad.Bind1().Apply0().Functor0())},function(p1){return function(p2){return ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function(v){return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p1)))(new ParseState(v.value0,v.value1,!1)))(function(v1){return v1.value0 instanceof Data_Either.Left&&!v1.value1.value2?Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p2)))(v):Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0,v1.value1))})})))}})},plusParserT=function(dictMonad){return new Control_Plus.Plus(function(){return altParserT(dictMonad)},fail(dictMonad)("No alternative"))};exports.ParseError=ParseError,exports.parseErrorMessage=function(v){return v.value0},exports.parseErrorPosition=function(v){return v.value1},exports.ParseState=ParseState,exports.ParserT=ParserT,exports.runParser=function(s){return function($90){return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(runParserT(Data_Identity.monadIdentity)(s)($90))}},exports.runParserT=runParserT,exports.mapParserT=function($92){return Data_Newtype.over(newtypeParserT)(newtypeParserT)(ParserT)(Control_Monad_Except_Trans.mapExceptT(Control_Monad_State_Trans.mapStateT($92)))},exports.position=position,exports.fail=fail,exports.failWithPosition=failWithPosition,exports.newtypeParserT=newtypeParserT,exports.lazyParserT=lazyParserT,exports.semigroupParserT=semigroupParserT,exports.monoidParserT=function(dictMonad){return function(dictMonoid){return new Data_Monoid.Monoid(function(){return semigroupParserT(dictMonad)(dictMonoid.Semigroup0())},Control_Applicative.pure(applicativeParserT(dictMonad))(Data_Monoid.mempty(dictMonoid)))}},exports.functorParserT=functorParserT,exports.applyParserT=applyParserT,exports.applicativeParserT=applicativeParserT,exports.bindParserT=bindParserT,exports.monadStateParserT=monadStateParserT,exports.monadThrowParserT=monadThrowParserT,exports.altParserT=altParserT,exports.plusParserT=plusParserT,exports.alternativeParserT=function(dictMonad){return new Control_Alternative.Alternative(function(){return applicativeParserT(dictMonad)},function(){return plusParserT(dictMonad)})},exports.monadTransParserT=monadTransParserT}(PS["Text.Parsing.Parser"]=PS["Text.Parsing.Parser"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Control_Applicative=PS["Control.Applicative"],Control_Bind=(PS["Control.Apply"],PS["Control.Bind"]),Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Control_Monad_State_Trans=(PS["Control.Monad.State"],PS["Control.Monad.State.Trans"]),Control_Plus=PS["Control.Plus"],Data_Either=(PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Foldable=PS["Data.Foldable"],Data_Newtype=(PS["Data.Function"],PS["Data.Functor"],PS["Data.List"],PS["Data.List.Types"],PS["Data.Maybe"],PS["Data.Newtype"]),Data_Tuple=(PS["Data.Semigroup"],PS["Data.Tuple"]),Text_Parsing_Parser=(PS["Data.Unit"],PS.Prelude,PS["Text.Parsing.Parser"]);exports.withErrorMessage=function(dictMonad){return function(p){return function(msg){return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Text_Parsing_Parser.fail(dictMonad)("Expected "+msg))}}},exports.option=function(dictMonad){return function(a){return function(p){return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a))}}},exports.try=function(dictMonad){return function(p){return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function(v){return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function(v1){return v1.value0 instanceof Data_Either.Left?Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0,new Text_Parsing_Parser.ParseState(v1.value1.value0,v1.value1.value1,v.value2))):Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0,v1.value1))})})))}},exports.tryRethrow=function(dictMonad){return function(p){return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function(v){return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function(v1){return v1.value0 instanceof Data_Either.Left?Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Either.Left(new Text_Parsing_Parser.ParseError(v1.value0.value0.value0,v.value1)),new Text_Parsing_Parser.ParseState(v1.value1.value0,v1.value1.value1,v.value2))):Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0,v1.value1))})})))}},exports.choice=function(dictFoldable){return function(dictMonad){return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad)))(Control_Plus.empty(Text_Parsing_Parser.plusParserT(dictMonad)))}}}(PS["Text.Parsing.Parser.Combinators"]=PS["Text.Parsing.Parser.Combinators"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Monad_State_Class=(PS["Control.Monad.State"],PS["Control.Monad.State.Class"]),Data_Maybe=(PS["Data.Array"],PS["Data.Eq"],PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Newtype=PS["Data.Newtype"],Data_Show=(PS["Data.Semigroup"],PS["Data.Show"]),Data_String=PS["Data.String"],Text_Parsing_Parser=(PS.Prelude,PS["Text.Parsing.Parser"]),Text_Parsing_Parser_Combinators=PS["Text.Parsing.Parser.Combinators"],Text_Parsing_Parser_Pos=PS["Text.Parsing.Parser.Pos"],StringLike=function(drop,indexOf,$$null,uncons){this.drop=drop,this.indexOf=indexOf,this.null=$$null,this.uncons=uncons},uncons=function(dict){return dict.uncons},stringLikeString=new StringLike(Data_String.drop,Data_String.indexOf,Data_String.null,Data_String.uncons),indexOf=function(dict){return dict.indexOf},drop=function(dict){return dict.drop},anyChar=function(dictStringLike){return function(dictMonad){return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function(v){return v.value0}))(function(v){var v1=uncons(dictStringLike)(v);if(v1 instanceof Data_Maybe.Nothing)return Text_Parsing_Parser.fail(dictMonad)("Unexpected EOF");if(v1 instanceof Data_Maybe.Just)return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify(Text_Parsing_Parser.monadStateParserT(dictMonad))(function(v2){return new Text_Parsing_Parser.ParseState(v1.value0.tail,Text_Parsing_Parser_Pos.updatePosString(v2.value1)(Data_String.singleton(v1.value0.head)),!0)}))(function(){return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v1.value0.head)});throw new Error("Failed pattern match at Text.Parsing.Parser.String line 54, column 3 - line 61, column 16: "+[v1.constructor.name])})}},satisfy=function(dictStringLike){return function(dictMonad){return function(f){return Text_Parsing_Parser_Combinators.tryRethrow(dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictStringLike)(dictMonad))(function(v){return f(v)?Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v):Text_Parsing_Parser.fail(dictMonad)("Character '"+Data_String.singleton(v)+"' did not satisfy predicate")}))}}};exports.drop=drop,exports.indexOf=indexOf,exports.uncons=uncons,exports.StringLike=StringLike,exports.eof=function(dictStringLike){return function(dictMonad){return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function(v){return v.value0}))(function(v){return Control_Applicative.unless(Text_Parsing_Parser.applicativeParserT(dictMonad))(dictStringLike.null(v))(Text_Parsing_Parser.fail(dictMonad)("Expected EOF"))})}},exports.string=function(dictStringLike){return function(dictMonad){return function(str){return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function(v){return v.value0}))(function(v){var v1=indexOf(dictStringLike)(Data_Newtype.wrap(Data_String.newtypePattern)(str))(v);return v1 instanceof Data_Maybe.Just&&0===v1.value0?Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify(Text_Parsing_Parser.monadStateParserT(dictMonad))(function(v2){return new Text_Parsing_Parser.ParseState(drop(dictStringLike)(Data_String.length(str))(v),Text_Parsing_Parser_Pos.updatePosString(v2.value1)(str),!0)}))(function(){return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(str)}):Text_Parsing_Parser.fail(dictMonad)("Expected "+Data_Show.show(Data_Show.showString)(str))})}}},exports.anyChar=anyChar,exports.satisfy=satisfy,exports.char=function(dictStringLike){return function(dictMonad){return function(c){return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(function(v){return v===c}))(Data_Show.show(Data_Show.showChar)(c))}}},exports.stringLikeString=stringLikeString}(PS["Text.Parsing.Parser.String"]=PS["Text.Parsing.Parser.String"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_Bifunctor=PS["Data.Bifunctor"],Data_Either=PS["Data.Either"],Data_Functor=(PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"]),Data_Identity=PS["Data.Identity"],Data_Show=(PS["Data.Semigroup"],PS["Data.Show"]),Text_Parsing_Parser=(PS["Data.Tuple"],PS.Prelude,PS["Text.Parsing.Parser"]),Text_Parsing_Parser_Combinators=PS["Text.Parsing.Parser.Combinators"],Text_Parsing_Parser_String=(PS["Text.Parsing.Parser.Pos"],PS["Text.Parsing.Parser.String"]),printError=function(err){return Text_Parsing_Parser.parseErrorMessage(err)+" "+(v=Text_Parsing_Parser.parseErrorPosition(err),"(line "+Data_Show.show(Data_Show.showInt)(v.line)+", col "+Data_Show.show(Data_Show.showInt)(v.column)+")");var v};exports.oneOfAs=function(dictFunctor){return function(dictFoldable){return function(dictMonad){return function(p){return function(xs){return Text_Parsing_Parser_Combinators.choice(dictFoldable)(dictMonad)(Data_Functor.map(dictFunctor)(function(v){return Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(p(v.value0))(v.value1)})(xs))}}}}},exports.runP=function(dictStringLike){return function(p){return function(s){return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(printError)(Text_Parsing_Parser.runParser(s)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(p)(Text_Parsing_Parser_String.eof(dictStringLike)(Data_Identity.monadIdentity))))}}}}(PS["Data.Formatter.Parser.Utils"]=PS["Data.Formatter.Parser.Utils"]||{}),function(exports){"use strict";PS["Control.Apply"],PS["Control.Semigroupoid"],PS["Data.Array"];var Data_Foldable=PS["Data.Foldable"],Data_Formatter_Parser_Utils=(PS["Data.Formatter.Internal"],PS["Data.Formatter.Parser.Utils"]),Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Tuple=(PS["Data.Int"],PS["Data.Maybe"],PS["Data.Monoid"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"],PS["Data.Tuple"]),Text_Parsing_Parser_Combinators=(PS.Global,PS.Prelude,PS["Text.Parsing.Parser"],PS["Text.Parsing.Parser.Combinators"]),Text_Parsing_Parser_String=PS["Text.Parsing.Parser.String"];exports.parseDigit=function(dictMonad){return function(dictStringLike){return Text_Parsing_Parser_Combinators.try(dictMonad)(Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(Text_Parsing_Parser_String.char(dictStringLike)(dictMonad))([new Data_Tuple.Tuple("0",0),new Data_Tuple.Tuple("1",1),new Data_Tuple.Tuple("2",2),new Data_Tuple.Tuple("3",3),new Data_Tuple.Tuple("4",4),new Data_Tuple.Tuple("5",5),new Data_Tuple.Tuple("6",6),new Data_Tuple.Tuple("7",7),new Data_Tuple.Tuple("8",8),new Data_Tuple.Tuple("9",9)]))}}}(PS["Data.Formatter.Parser.Number"]=PS["Data.Formatter.Parser.Number"]||{}),function(exports){"use strict";PS["Data.Semigroup"],PS.Prelude,PS["Unsafe.Coerce"];var SProxy=function(){function SProxy(){}return SProxy.value=new SProxy,SProxy}();exports.IsSymbol=function(reflectSymbol){this.reflectSymbol=reflectSymbol},exports.reflectSymbol=function(dict){return dict.reflectSymbol},exports.SProxy=SProxy}(PS["Data.Symbol"]=PS["Data.Symbol"]||{}),function(exports){"use strict";var Data_Foldable=PS["Data.Foldable"],Data_Generic_Rep=PS["Data.Generic.Rep"],Data_Monoid=PS["Data.Monoid"],Data_Semigroup=PS["Data.Semigroup"],Data_Symbol=(PS["Data.Show"],PS["Data.Symbol"]),GenericShow=(PS.Prelude,function(genericShow$prime){this["genericShow'"]=genericShow$prime}),GenericShowArgs=function(genericShowArgs){this.genericShowArgs=genericShowArgs},genericShowArgsNoArguments=new GenericShowArgs(function(v){return[]}),genericShowArgs=function(dict){return dict.genericShowArgs},genericShow$prime=function(dict){return dict["genericShow'"]};exports.GenericShow=GenericShow,exports.genericShow=function(dictGeneric){return function(dictGenericShow){return function(x){return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x))}}},exports.GenericShowArgs=GenericShowArgs,exports.genericShowArgs=genericShowArgs,exports.genericShowArgsNoArguments=genericShowArgsNoArguments,exports.genericShowSum=function(dictGenericShow){return function(dictGenericShow1){return new GenericShow(function(v){if(v instanceof Data_Generic_Rep.Inl)return genericShow$prime(dictGenericShow)(v.value0);if(v instanceof Data_Generic_Rep.Inr)return genericShow$prime(dictGenericShow1)(v.value0);throw new Error("Failed pattern match at Data.Generic.Rep.Show line 31, column 1 - line 31, column 83: "+[v.constructor.name])})}},exports.genericShowConstructor=function(dictGenericShowArgs){return function(dictIsSymbol){return new GenericShow(function(v){var ctor=Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value),v1=genericShowArgs(dictGenericShowArgs)(v);return 0===v1.length?ctor:"("+Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ctor])(v1))+")"})}}}(PS["Data.Generic.Rep.Show"]=PS["Data.Generic.Rep.Show"]||{}),function(exports){"use strict";var modifyWithParser,Control_Alt=PS["Control.Alt"],Control_Applicative=(PS["Control.Alternative"],PS["Control.Applicative"]),Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Lazy=PS["Control.Lazy"],Control_Monad_Reader_Class=PS["Control.Monad.Reader.Class"],Control_Monad_Reader_Trans=PS["Control.Monad.Reader.Trans"],Control_Monad_State=PS["Control.Monad.State"],Control_Monad_State_Class=PS["Control.Monad.State.Class"],Control_Monad_State_Trans=PS["Control.Monad.State.Trans"],Control_Monad_Trans_Class=PS["Control.Monad.Trans.Class"],Data_Boolean=(PS["Control.Semigroupoid"],PS["Data.Array"],PS["Data.Boolean"]),Data_Date=PS["Data.Date"],Data_Date_Component=PS["Data.Date.Component"],Data_DateTime=PS["Data.DateTime"],Data_DateTime_Instant=PS["Data.DateTime.Instant"],Data_Either=PS["Data.Either"],Data_Enum=PS["Data.Enum"],Data_Foldable=(PS["Data.Eq"],PS["Data.EuclideanRing"],PS["Data.Foldable"]),Data_Formatter_Internal=PS["Data.Formatter.Internal"],Data_Formatter_Parser_Number=PS["Data.Formatter.Parser.Number"],Data_Formatter_Parser_Utils=PS["Data.Formatter.Parser.Utils"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Identity=(PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"],PS["Data.Identity"]),Data_Int=PS["Data.Int"],Data_List=PS["Data.List"],Data_List_Types=PS["Data.List.Types"],Data_Maybe=PS["Data.Maybe"],Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Ord=PS["Data.Ord"],Data_Ring=(PS["Data.Ordering"],PS["Data.Ring"]),Data_Semigroup=PS["Data.Semigroup"],Data_Semiring=PS["Data.Semiring"],Data_Show=PS["Data.Show"],Data_String=PS["Data.String"],Data_Time=(PS["Data.Symbol"],PS["Data.Time"]),Data_Time_Component=PS["Data.Time.Component"],Data_Time_Duration=PS["Data.Time.Duration"],Data_Tuple=PS["Data.Tuple"],Data_Unit=PS["Data.Unit"],Text_Parsing_Parser=(PS.Prelude,PS["Text.Parsing.Parser"]),Text_Parsing_Parser_Combinators=PS["Text.Parsing.Parser.Combinators"],Text_Parsing_Parser_String=PS["Text.Parsing.Parser.String"],AM=function(){function AM(){}return AM.value=new AM,AM}(),PM=function(){function PM(){}return PM.value=new PM,PM}(),YearFull=function(){function YearFull(){}return YearFull.value=new YearFull,YearFull}(),YearTwoDigits=function(){function YearTwoDigits(){}return YearTwoDigits.value=new YearTwoDigits,YearTwoDigits}(),YearAbsolute=function(){function YearAbsolute(){}return YearAbsolute.value=new YearAbsolute,YearAbsolute}(),MonthFull=function(){function MonthFull(){}return MonthFull.value=new MonthFull,MonthFull}(),MonthShort=function(){function MonthShort(){}return MonthShort.value=new MonthShort,MonthShort}(),MonthTwoDigits=function(){function MonthTwoDigits(){}return MonthTwoDigits.value=new MonthTwoDigits,MonthTwoDigits}(),DayOfMonthTwoDigits=function(){function DayOfMonthTwoDigits(){}return DayOfMonthTwoDigits.value=new DayOfMonthTwoDigits,DayOfMonthTwoDigits}(),DayOfMonth=function(){function DayOfMonth(){}return DayOfMonth.value=new DayOfMonth,DayOfMonth}(),UnixTimestamp=function(){function UnixTimestamp(){}return UnixTimestamp.value=new UnixTimestamp,UnixTimestamp}(),DayOfWeek=function(){function DayOfWeek(){}return DayOfWeek.value=new DayOfWeek,DayOfWeek}(),DayOfWeekName=function(){function DayOfWeekName(){}return DayOfWeekName.value=new DayOfWeekName,DayOfWeekName}(),DayOfWeekNameShort=function(){function DayOfWeekNameShort(){}return DayOfWeekNameShort.value=new DayOfWeekNameShort,DayOfWeekNameShort}(),Hours24=function(){function Hours24(){}return Hours24.value=new Hours24,Hours24}(),Hours12=function(){function Hours12(){}return Hours12.value=new Hours12,Hours12}(),Meridiem=function(){function Meridiem(){}return Meridiem.value=new Meridiem,Meridiem}(),Minutes=function(){function Minutes(){}return Minutes.value=new Minutes,Minutes}(),MinutesTwoDigits=function(){function MinutesTwoDigits(){}return MinutesTwoDigits.value=new MinutesTwoDigits,MinutesTwoDigits}(),Seconds=function(){function Seconds(){}return Seconds.value=new Seconds,Seconds}(),SecondsTwoDigits=function(){function SecondsTwoDigits(){}return SecondsTwoDigits.value=new SecondsTwoDigits,SecondsTwoDigits}(),Milliseconds=function(){function Milliseconds(){}return Milliseconds.value=new Milliseconds,Milliseconds}(),MillisecondsShort=function(){function MillisecondsShort(){}return MillisecondsShort.value=new MillisecondsShort,MillisecondsShort}(),MillisecondsTwoDigits=function(){function MillisecondsTwoDigits(){}return MillisecondsTwoDigits.value=new MillisecondsTwoDigits,MillisecondsTwoDigits}(),Placeholder=function(){function Placeholder(value0){this.value0=value0}return Placeholder.create=function(value0){return new Placeholder(value0)},Placeholder}(),validateRange=function(min){return function(max){return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function(v){return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)(v.num<min||v.num>max?Data_Either.Left.create("Number is out of range [ "+Data_Show.show(Data_Show.showInt)(min)+", "+Data_Show.show(Data_Show.showInt)(max)+" ]"):new Data_Either.Right(Data_Unit.unit))})}},takeSome=function(dictAlternative){return function(dictLazy){return function(v){return function(v1){return 0===v?Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value):Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v1))(Control_Lazy.defer(dictLazy)(function(v3){return takeMany(dictAlternative)(dictLazy)(v-1|0)(v1)}))}}}},takeMany=function(dictAlternative){return function(dictLazy){return function(v){return function(v1){return 0===v?Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value):Control_Alt.alt(dictAlternative.Plus1().Alt0())(takeSome(dictAlternative)(dictLazy)(v)(v1))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value))}}}},$$parseInt=function(dictMonad){return function(maxLength){return function(validators){return function(errMsg){return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(takeSome(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(maxLength)(Data_Formatter_Parser_Number.parseDigit(dictMonad)(Text_Parsing_Parser_String.stringLikeString)))(function(v){var num=Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList)(v),length=Data_List.length(v),v1=Control_Monad_Reader_Trans.runReaderT(validators)({length:length,num:num,maxLength:maxLength});if(v1 instanceof Data_Either.Left)return Text_Parsing_Parser.fail(dictMonad)(errMsg+"("+v1.value0+")");if(v1 instanceof Data_Either.Right)return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(num);throw new Error("Failed pattern match at Data.Formatter.DateTime line 328, column 3 - line 330, column 23: "+[v1.constructor.name])})}}}},padSingleDigit=function(i){if(i<10)return"0"+Data_Show.show(Data_Show.showInt)(i);if(Data_Boolean.otherwise)return Data_Show.show(Data_Show.showInt)(i);throw new Error("Failed pattern match at Data.Formatter.DateTime line 193, column 1 - line 193, column 30: "+[i.constructor.name])},initialAccum={year:Data_Maybe.Nothing.value,month:Data_Maybe.Nothing.value,day:Data_Maybe.Nothing.value,hour:Data_Maybe.Nothing.value,minute:Data_Maybe.Nothing.value,second:Data_Maybe.Nothing.value,millisecond:Data_Maybe.Nothing.value,meridiem:Data_Maybe.Nothing.value},formatCommand=function(v){return function(v1){if(v1 instanceof YearFull)return function(i){if(i<10)return"000"+Data_Show.show(Data_Show.showInt)(i);if(i<100)return"00"+Data_Show.show(Data_Show.showInt)(i);if(i<1e3)return"0"+Data_Show.show(Data_Show.showInt)(i);if(Data_Boolean.otherwise)return Data_Show.show(Data_Show.showInt)(i);throw new Error("Failed pattern match at Data.Formatter.DateTime line 204, column 1 - line 204, column 33: "+[i.constructor.name])}(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));if(v1 instanceof YearTwoDigits)return i=Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)),dateString=Data_Show.show(Data_Show.showInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(i)),1===(dateLength=Data_String.length(dateString))?"0"+dateString:2===dateLength?dateString:Data_String.drop(dateLength-2|0)(dateString);var i,dateString,dateLength,h;if(v1 instanceof YearAbsolute)return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));if(v1 instanceof MonthFull)return Data_Show.show(Data_Date_Component.showMonth)(Data_Date.month(v.value0));if(v1 instanceof MonthShort)return function(v){if(v instanceof Data_Date_Component.January)return"Jan";if(v instanceof Data_Date_Component.February)return"Feb";if(v instanceof Data_Date_Component.March)return"Mar";if(v instanceof Data_Date_Component.April)return"Apr";if(v instanceof Data_Date_Component.May)return"May";if(v instanceof Data_Date_Component.June)return"Jun";if(v instanceof Data_Date_Component.July)return"Jul";if(v instanceof Data_Date_Component.August)return"Aug";if(v instanceof Data_Date_Component.September)return"Sep";if(v instanceof Data_Date_Component.October)return"Oct";if(v instanceof Data_Date_Component.November)return"Nov";if(v instanceof Data_Date_Component.December)return"Dec";throw new Error("Failed pattern match at Data.Formatter.DateTime line 477, column 19 - line 489, column 16: "+[v.constructor.name])}(Data_Date.month(v.value0));if(v1 instanceof MonthTwoDigits)return padSingleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)));if(v1 instanceof DayOfMonthTwoDigits)return padSingleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)));if(v1 instanceof DayOfMonth)return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)));if(v1 instanceof UnixTimestamp)return Data_Show.show(Data_Show.showInt)(Data_Int.floor(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(Data_DateTime_Instant.unInstant(Data_DateTime_Instant.fromDateTime(v)))/1e3));if(v1 instanceof DayOfWeek)return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday)(Data_Date.weekday(v.value0)));if(v1 instanceof DayOfWeekName)return Data_Show.show(Data_Date_Component.showWeekday)(Data_Date.weekday(v.value0));if(v1 instanceof DayOfWeekNameShort)return Data_String.take(3)(Data_Show.show(Data_Date_Component.showWeekday)(Data_Date.weekday(v.value0)));if(v1 instanceof Hours24)return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)));if(v1 instanceof Hours12)return padSingleDigit(0===(h=Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1))%12)?12:h);if(v1 instanceof Meridiem)return 12<=Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1))?"PM":"AM";if(v1 instanceof Minutes)return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)));if(v1 instanceof MinutesTwoDigits)return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)));if(v1 instanceof Seconds)return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)));if(v1 instanceof SecondsTwoDigits)return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)));if(v1 instanceof Milliseconds)return function(i){if(i<10)return"00"+Data_Show.show(Data_Show.showInt)(i);if(i<100)return"0"+Data_Show.show(Data_Show.showInt)(i);if(Data_Boolean.otherwise)return Data_Show.show(Data_Show.showInt)(i);throw new Error("Failed pattern match at Data.Formatter.DateTime line 198, column 1 - line 198, column 30: "+[i.constructor.name])}(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1)));if(v1 instanceof MillisecondsShort)return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))/100|0);if(v1 instanceof MillisecondsTwoDigits)return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))/10|0);if(v1 instanceof Placeholder)return v1.value0;throw new Error("Failed pattern match at Data.Formatter.DateTime line 166, column 38 - line 189, column 20: "+[v1.constructor.name])}},exactLength=Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function(v){return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)(v.maxLength!==v.length?Data_Either.Left.create("Expected "+Data_Show.show(Data_Show.showInt)(v.maxLength)+" digits but got "+Data_Show.show(Data_Show.showInt)(v.length)):new Data_Either.Right(Data_Unit.unit))}),unformatCommandParser=(modifyWithParser=function(f){return function(p){return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(p)(function(v){return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Data_Function.flip(f)(new Data_Maybe.Just(v))))})}},function(v){if(v instanceof YearFull)return modifyWithParser(function(v1){return function(v2){var $410={};for(var $411 in v1)({}).hasOwnProperty.call(v1,$411)&&($410[$411]=v1[$411]);return $410.year=v2,$410}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(4)(exactLength)("Incorrect full year"));if(v instanceof YearTwoDigits)return modifyWithParser(function(v1){return function(v2){var $413={};for(var $414 in v1)({}).hasOwnProperty.call(v1,$414)&&($413[$414]=v1[$414]);return $413.year=v2,$413}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit year"));if(v instanceof YearAbsolute)return modifyWithParser(function(v1){return function(v2){var $416={};for(var $417 in v1)({}).hasOwnProperty.call(v1,$417)&&($416[$417]=v1[$417]);return $416.year=v2,$416}})(Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Semiring.mul(Data_Semiring.semiringInt))(Text_Parsing_Parser_Combinators.option(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(Text_Parsing_Parser_Combinators.try(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("-"))(Data_Function.const(-1)))))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.stringLikeString)))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))));if(v instanceof MonthFull)return modifyWithParser(function(v1){return function(v2){var $419={};for(var $420 in v1)({}).hasOwnProperty.call(v1,$420)&&($419[$420]=v1[$420]);return $419.month=v2,$419}})(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))((dictMonad=Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity),Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function($502){return Text_Parsing_Parser_Combinators.try(dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($502))})([new Data_Tuple.Tuple("January",Data_Date_Component.January.value),new Data_Tuple.Tuple("February",Data_Date_Component.February.value),new Data_Tuple.Tuple("March",Data_Date_Component.March.value),new Data_Tuple.Tuple("April",Data_Date_Component.April.value),new Data_Tuple.Tuple("May",Data_Date_Component.May.value),new Data_Tuple.Tuple("June",Data_Date_Component.June.value),new Data_Tuple.Tuple("July",Data_Date_Component.July.value),new Data_Tuple.Tuple("August",Data_Date_Component.August.value),new Data_Tuple.Tuple("September",Data_Date_Component.September.value),new Data_Tuple.Tuple("October",Data_Date_Component.October.value),new Data_Tuple.Tuple("November",Data_Date_Component.November.value),new Data_Tuple.Tuple("December",Data_Date_Component.December.value)]))));var dictMonad;if(v instanceof MonthShort)return modifyWithParser(function(v1){return function(v2){var $422={};for(var $423 in v1)({}).hasOwnProperty.call(v1,$423)&&($422[$423]=v1[$423]);return $422.month=v2,$422}})(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))(function(dictMonad){return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function($501){return Text_Parsing_Parser_Combinators.try(dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($501))})([new Data_Tuple.Tuple("Jan",Data_Date_Component.January.value),new Data_Tuple.Tuple("Feb",Data_Date_Component.February.value),new Data_Tuple.Tuple("Mar",Data_Date_Component.March.value),new Data_Tuple.Tuple("Apr",Data_Date_Component.April.value),new Data_Tuple.Tuple("May",Data_Date_Component.May.value),new Data_Tuple.Tuple("Jun",Data_Date_Component.June.value),new Data_Tuple.Tuple("Jul",Data_Date_Component.July.value),new Data_Tuple.Tuple("Aug",Data_Date_Component.August.value),new Data_Tuple.Tuple("Sep",Data_Date_Component.September.value),new Data_Tuple.Tuple("Oct",Data_Date_Component.October.value),new Data_Tuple.Tuple("Nov",Data_Date_Component.November.value),new Data_Tuple.Tuple("Dec",Data_Date_Component.December.value)])}(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));if(v instanceof MonthTwoDigits)return modifyWithParser(function(v1){return function(v2){var $425={};for(var $426 in v1)({}).hasOwnProperty.call(v1,$426)&&($425[$426]=v1[$426]);return $425.month=v2,$425}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(12))(exactLength))("Incorrect 2-digit month"));if(v instanceof DayOfMonthTwoDigits)return modifyWithParser(function(v1){return function(v2){var $428={};for(var $429 in v1)({}).hasOwnProperty.call(v1,$429)&&($428[$429]=v1[$429]);return $428.day=v2,$428}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(31))(exactLength))("Incorrect day of month"));if(v instanceof DayOfMonth)return modifyWithParser(function(v1){return function(v2){var $431={};for(var $432 in v1)({}).hasOwnProperty.call(v1,$432)&&($431[$432]=v1[$432]);return $431.day=v2,$431}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(1)(31))("Incorrect day of month"));if(v instanceof UnixTimestamp)return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.stringLikeString))))(function(v1){var v2=Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime)(Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds(1e3*Data_Int.toNumber(v1))));if(v2 instanceof Data_Maybe.Nothing)return Text_Parsing_Parser.fail(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("Incorrect timestamp");if(v2 instanceof Data_Maybe.Just)return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))({year:Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v2.value0.value0))),month:Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v2.value0.value0))),day:Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v2.value0.value0))),hour:Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v2.value0.value1))),minute:Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v2.value0.value1))),second:Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v2.value0.value1))),millisecond:Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v2.value0.value1))),meridiem:Data_Maybe.Nothing.value}));throw new Error("Failed pattern match at Data.Formatter.DateTime line 354, column 5 - line 365, column 10: "+[v2.constructor.name])});if(v instanceof DayOfWeek)return Data_Functor.void(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(validateRange(1)(7))("Incorrect day of week"));if(v instanceof DayOfWeekName)return modifyWithParser(function(v1){return function(v2){var $439={};for(var $440 in v1)({}).hasOwnProperty.call(v1,$440)&&($439[$440]=v1[$440]);return $439.day=v2,$439}})(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(function(dictMonad){return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function($505){return Text_Parsing_Parser_Combinators.try(dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($505))})([new Data_Tuple.Tuple("Monday",Data_Date_Component.Monday.value),new Data_Tuple.Tuple("Tuesday",Data_Date_Component.Tuesday.value),new Data_Tuple.Tuple("Wednesday",Data_Date_Component.Wednesday.value),new Data_Tuple.Tuple("Thursday",Data_Date_Component.Thursday.value),new Data_Tuple.Tuple("Friday",Data_Date_Component.Friday.value),new Data_Tuple.Tuple("Saturday",Data_Date_Component.Saturday.value),new Data_Tuple.Tuple("Sunday",Data_Date_Component.Sunday.value)])}(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));if(v instanceof DayOfWeekNameShort)return modifyWithParser(function(v1){return function(v2){var $442={};for(var $443 in v1)({}).hasOwnProperty.call(v1,$443)&&($442[$443]=v1[$443]);return $442.day=v2,$442}})(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(function(dictMonad){return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function($504){return Text_Parsing_Parser_Combinators.try(dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($504))})([new Data_Tuple.Tuple("Mon",Data_Date_Component.Monday.value),new Data_Tuple.Tuple("Tue",Data_Date_Component.Tuesday.value),new Data_Tuple.Tuple("Wed",Data_Date_Component.Wednesday.value),new Data_Tuple.Tuple("Thu",Data_Date_Component.Thursday.value),new Data_Tuple.Tuple("Fri",Data_Date_Component.Friday.value),new Data_Tuple.Tuple("Sat",Data_Date_Component.Saturday.value),new Data_Tuple.Tuple("Sun",Data_Date_Component.Sunday.value)])}(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));if(v instanceof Hours24)return modifyWithParser(function(v1){return function(v2){var $445={};for(var $446 in v1)({}).hasOwnProperty.call(v1,$446)&&($445[$446]=v1[$446]);return $445.hour=v2,$445}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(24))(exactLength))("Incorrect 24 hour"));if(v instanceof Hours12)return modifyWithParser(function(v1){return function(v2){var $448={};for(var $449 in v1)({}).hasOwnProperty.call(v1,$449)&&($448[$449]=v1[$449]);return $448.hour=v2,$448}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(12))(exactLength))("Incorrect 12 hour"));if(v instanceof Meridiem)return modifyWithParser(function(v1){return function(v2){var $451={};for(var $452 in v1)({}).hasOwnProperty.call(v1,$452)&&($451[$452]=v1[$452]);return $451.meridiem=v2,$451}})(function(dictMonad){return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function($503){return Text_Parsing_Parser_Combinators.try(dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($503))})([new Data_Tuple.Tuple("am",AM.value),new Data_Tuple.Tuple("AM",AM.value),new Data_Tuple.Tuple("pm",PM.value),new Data_Tuple.Tuple("PM",PM.value)])}(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)));if(v instanceof MinutesTwoDigits)return modifyWithParser(function(v1){return function(v2){var $454={};for(var $455 in v1)({}).hasOwnProperty.call(v1,$455)&&($454[$455]=v1[$455]);return $454.minute=v2,$454}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit minute"));if(v instanceof Minutes)return modifyWithParser(function(v1){return function(v2){var $457={};for(var $458 in v1)({}).hasOwnProperty.call(v1,$458)&&($457[$458]=v1[$458]);return $457.minute=v2,$457}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect minute"));if(v instanceof SecondsTwoDigits)return modifyWithParser(function(v1){return function(v2){var $460={};for(var $461 in v1)({}).hasOwnProperty.call(v1,$461)&&($460[$461]=v1[$461]);return $460.second=v2,$460}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit second"));if(v instanceof Seconds)return modifyWithParser(function(v1){return function(v2){var $463={};for(var $464 in v1)({}).hasOwnProperty.call(v1,$464)&&($463[$464]=v1[$464]);return $463.second=v2,$463}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect second"));if(v instanceof Milliseconds)return modifyWithParser(function(v1){return function(v2){var $466={};for(var $467 in v1)({}).hasOwnProperty.call(v1,$467)&&($466[$467]=v1[$467]);return $466.millisecond=v2,$466}})($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(3)(exactLength)("Incorrect millisecond"));if(v instanceof Placeholder)return Data_Functor.void(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(v.value0));if(v instanceof MillisecondsShort)return modifyWithParser(function(v1){return function(v2){var $470={};for(var $471 in v1)({}).hasOwnProperty.call(v1,$471)&&($470[$471]=v1[$471]);return $470.millisecond=v2,$470}})(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(exactLength)("Incorrect 1-digit millisecond"))(function(v1){return 100*v1|0}));if(v instanceof MillisecondsTwoDigits)return modifyWithParser(function(v1){return function(v2){var $473={};for(var $474 in v1)({}).hasOwnProperty.call(v1,$474)&&($473[$474]=v1[$474]);return $473.millisecond=v2,$473}})(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit millisecond"))(function(v1){return 10*v1|0}));throw new Error("Failed pattern match at Data.Formatter.DateTime line 333, column 25 - line 391, column 74: "+[v.constructor.name])}),unformatAccumToDateTime=function(a){return Control_Apply.applySecond(Data_Either.applyEither)((v=a).hour instanceof Data_Maybe.Just&&24===v.hour.value0?Data_Foldable.for_(Data_Either.applicativeEither)(Data_Foldable.foldableArray)([v.minute,v.second,v.millisecond])(function(val){return Control_Applicative.when(Data_Either.applicativeEither)(0<Data_Maybe.fromMaybe(0)(val))(new Data_Either.Left("When hour is 24, other time components must be 0"))}):Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit))(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_DateTime.DateTime.create)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Date.canonicalDate)(Data_Maybe.maybe(new Data_Either.Left("Incorrect year"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(Data_Maybe.fromMaybe(0)(a.year)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect month"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(Data_Maybe.fromMaybe(1)(a.month)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect day"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(function(v){return function(n){return v instanceof Data_Maybe.Just&&24===v.value0?n+1|0:n}}(a.hour)(Data_Maybe.fromMaybe(1)(a.day)))))))(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Time.Time.create)(Data_Maybe.maybe(new Data_Either.Left("Incorrect hour"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Maybe.fromMaybe(0)(Data_Functor.map(Data_Maybe.functorMaybe)(function(v){return function(v1){if(v instanceof Data_Maybe.Just&&v.value0 instanceof AM&&12===v1)return 0;if(v instanceof Data_Maybe.Just&&v.value0 instanceof PM&&12===v1)return 12;if(v instanceof Data_Maybe.Just&&v.value0 instanceof PM)return v1+12|0;if(v instanceof Data_Maybe.Just&&v.value0 instanceof AM)return v1;if(v instanceof Data_Maybe.Nothing&&24===v1)return 0;if(v instanceof Data_Maybe.Nothing)return v1;throw new Error("Failed pattern match at Data.Formatter.DateTime line 278, column 1 - line 278, column 44: "+[v.constructor.name,v1.constructor.name])}}(a.meridiem))(a.hour))))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect minute"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Maybe.fromMaybe(0)(a.minute)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect second"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Maybe.fromMaybe(0)(a.second)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect millisecond"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Maybe.fromMaybe(0)(a.millisecond))))));var v},unformatParser=function(dictMonad){return function(f){var dictMonad1;return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser.mapParserT((dictMonad1=dictMonad,function(s){var v=Control_Monad_State.runState(s)(initialAccum);return Control_Applicative.pure(dictMonad1.Applicative0())(new Data_Tuple.Tuple(Data_Functor.voidLeft(Data_Either.functorEither)(v.value0.value0)(v.value1),v.value0.value1))}))(Data_Foldable.foldMap(Data_List_Types.foldableList)(Text_Parsing_Parser.monoidParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Monoid.monoidUnit))(unformatCommandParser)(f)))(function(v){return Data_Either.either(Text_Parsing_Parser.fail(dictMonad))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad)))(unformatAccumToDateTime(v))})}};exports.YearFull=YearFull,exports.YearTwoDigits=YearTwoDigits,exports.YearAbsolute=YearAbsolute,exports.MonthFull=MonthFull,exports.MonthShort=MonthShort,exports.MonthTwoDigits=MonthTwoDigits,exports.DayOfMonthTwoDigits=DayOfMonthTwoDigits,exports.DayOfMonth=DayOfMonth,exports.UnixTimestamp=UnixTimestamp,exports.DayOfWeek=DayOfWeek,exports.DayOfWeekName=DayOfWeekName,exports.DayOfWeekNameShort=DayOfWeekNameShort,exports.Hours24=Hours24,exports.Hours12=Hours12,exports.Meridiem=Meridiem,exports.Minutes=Minutes,exports.MinutesTwoDigits=MinutesTwoDigits,exports.Seconds=Seconds,exports.SecondsTwoDigits=SecondsTwoDigits,exports.Milliseconds=Milliseconds,exports.MillisecondsShort=MillisecondsShort,exports.MillisecondsTwoDigits=MillisecondsTwoDigits,exports.Placeholder=Placeholder,exports.format=function(f){return function(d){return Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(formatCommand(d))(f)}},exports.unformat=function($507){return Data_Formatter_Parser_Utils.runP(Text_Parsing_Parser_String.stringLikeString)(unformatParser(Data_Identity.monadIdentity)($507))},exports.unformatParser=unformatParser}(PS["Data.Formatter.DateTime"]=PS["Data.Formatter.DateTime"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Apply"],PS["Control.Bind"],PS["Control.Category"],PS["Control.Semigroupoid"];var Data_Array=PS["Data.Array"],Data_Boolean=PS["Data.Boolean"],Data_Formatter_Internal=(PS["Data.Either"],PS["Data.Eq"],PS["Data.EuclideanRing"],PS["Data.Foldable"],PS["Data.Formatter.Internal"]),Data_Int=(PS["Data.Formatter.Parser.Number"],PS["Data.Formatter.Parser.Utils"],PS["Data.Function"],PS["Data.Functor"],PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"],PS["Data.Identity"],PS["Data.Int"]),Data_Maybe=PS["Data.Maybe"],Data_Monoid=PS["Data.Monoid"],Data_Show=(PS["Data.Newtype"],PS["Data.Ord"],PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Semiring"],PS["Data.Show"]),Data_String=PS["Data.String"],$$Math=(PS["Data.Symbol"],PS["Data.Traversable"],PS.Math),format=(PS.Prelude,PS["Text.Parsing.Parser"],PS["Text.Parsing.Parser.Combinators"],PS["Text.Parsing.Parser.String"],function(v){return function(num){var absed=$$Math.abs(num),tens=0<absed?Data_Int.floor($$Math.log(absed)/$$Math.ln10):0;if(v.abbreviations){var thousands=tens/3|0,newNum=thousands<1?num:num/$$Math.pow(1e3)(Data_Int.toNumber(thousands)),abbr=function(){if(0===thousands)return"";if(1===thousands)return"K";if(2===thousands)return"M";if(3===thousands)return"G";if(4===thousands)return"T";if(5===thousands)return"P";if(6===thousands)return"E";if(7===thousands)return"Z";if(8===thousands)return"Y";if(Data_Boolean.otherwise)return"10e+"+Data_Show.show(Data_Show.showInt)(3*thousands|0);throw new Error("Failed pattern match at Data.Formatter.Number line 98, column 10 - line 107, column 59: "+[])}();return format(function(){var $97={};for(var $98 in v)({}).hasOwnProperty.call(v,$98)&&($97[$98]=v[$98]);return $97.abbreviations=!1,$97}())(newNum)+abbr}var multiplier,$copy_counter,$copy_acc,zeros=(v.before-tens|0)-1|0,integer=(Data_Int.floor($$Math.log(absed)/$$Math.ln10),Data_Int.floor(num)),leftover=num-Data_Int.toNumber(integer),rounded=(multiplier=$$Math.pow(10)(Data_Int.toNumber(v.after)),Data_Int.round(leftover*multiplier)),shownNumber=v.comma?($copy_acc=[],$copy_counter=0,function($copy_input){for(var $tco_result,acc,counter,input,v1,$tco_var_acc=$copy_acc,$tco_var_counter=$copy_counter,$tco_done=!1;!$tco_done;)acc=$tco_var_acc,counter=$tco_var_counter,input=$copy_input,$tco_result=(v1=Data_Array.uncons(input))instanceof Data_Maybe.Nothing?($tco_done=!0,Data_String.fromCharArray(acc)):v1 instanceof Data_Maybe.Just&&counter<3?($tco_var_acc=Data_Array.cons(v1.value0.head)(acc),$tco_var_counter=counter+1|0,void($copy_input=v1.value0.tail)):($tco_var_acc=Data_Array.cons(",")(acc),$tco_var_counter=0,void($copy_input=input));return $tco_result}(Data_Array.reverse(Data_String.toCharArray(Data_Formatter_Internal.repeat(Data_Monoid.monoidString)("0")(zeros)+Data_Show.show(Data_Show.showInt)(integer))))):Data_Formatter_Internal.repeat(Data_Monoid.monoidString)("0")(zeros)+Data_Show.show(Data_Show.showInt)(integer);return(0<num&&v.sign?"+":"")+shownNumber+(v.after<1?"":"."+((0===rounded?Data_Formatter_Internal.repeat(Data_Monoid.monoidString)("0")(v.after):"")+(0<rounded?Data_Show.show(Data_Show.showInt)(rounded):"")))}});exports.format=format}(PS["Data.Formatter.Number"]=PS["Data.Formatter.Number"]||{}),function(exports){"use strict";PS["Control.Comonad"],PS["Control.Extend"],PS["Control.Semigroupoid"],PS["Data.Bifunctor"];var Data_Either=PS["Data.Either"];PS["Data.Eq"],PS["Data.Foldable"],PS["Data.Functor"],PS["Data.Newtype"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.Traversable"],PS.Prelude;exports.left=function(fa){return new Data_Either.Left(fa)},exports.right=function(ga){return new Data_Either.Right(ga)}}(PS["Data.Functor.Coproduct"]=PS["Data.Functor.Coproduct"]||{}),function(exports){"use strict";PS["Data.Const"];var Data_Either=PS["Data.Either"],Data_Functor_Coproduct=PS["Data.Functor.Coproduct"],in1=(PS["Data.Newtype"],PS["Data.Void"],PS.Prelude,Data_Functor_Coproduct.left);exports.in1=in1,exports.in2=function(v){return Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))},exports.in3=function(v){return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))},exports.at1=function(b){return function(f){return function(y){return y instanceof Data_Either.Left?f(y.value0):b}}},exports.at2=function(b){return function(f){return function(y){return y instanceof Data_Either.Right&&y.value0 instanceof Data_Either.Left?f(y.value0.value0):b}}},exports.at3=function(b){return function(f){return function(y){return y instanceof Data_Either.Right&&y.value0 instanceof Data_Either.Right&&y.value0.value0 instanceof Data_Either.Left?f(y.value0.value0.value0):b}}}}(PS["Data.Functor.Coproduct.Nested"]=PS["Data.Functor.Coproduct.Nested"]||{}),function(exports){"use strict";var Data_Generic_Rep=PS["Data.Generic.Rep"],Data_Monoid=PS["Data.Monoid"],GenericMonoid=function(genericMempty$prime){this["genericMempty'"]=genericMempty$prime},genericMempty$prime=function(dict){return dict["genericMempty'"]};exports.GenericMonoid=GenericMonoid,exports.genericMempty=function(dictGeneric){return function(dictGenericMonoid){return Data_Generic_Rep.to(dictGeneric)(genericMempty$prime(dictGenericMonoid))}},exports.genericMonoidProduct=function(dictGenericMonoid){return function(dictGenericMonoid1){return new GenericMonoid(new Data_Generic_Rep.Product(genericMempty$prime(dictGenericMonoid),genericMempty$prime(dictGenericMonoid1)))}},exports.genericMonoidConstructor=function(dictGenericMonoid){return new GenericMonoid(genericMempty$prime(dictGenericMonoid))},exports.genericMonoidRec=function(dictGenericMonoid){return new GenericMonoid(genericMempty$prime(dictGenericMonoid))},exports.genericMonoidField=function(dictMonoid){return new GenericMonoid(Data_Monoid.mempty(dictMonoid))}}(PS["Data.Generic.Rep.Monoid"]=PS["Data.Generic.Rep.Monoid"]||{}),function(exports){"use strict";var Data_Generic_Rep=PS["Data.Generic.Rep"],Data_Semigroup=PS["Data.Semigroup"],GenericSemigroup=(PS.Prelude,function(genericAppend$prime){this["genericAppend'"]=genericAppend$prime}),genericAppend$prime=function(dict){return dict["genericAppend'"]};exports.GenericSemigroup=GenericSemigroup,exports.genericAppend=function(dictGeneric){return function(dictGenericSemigroup){return function(x){return function(y){return Data_Generic_Rep.to(dictGeneric)(genericAppend$prime(dictGenericSemigroup)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y)))}}}},exports.genericSemigroupProduct=function(dictGenericSemigroup){return function(dictGenericSemigroup1){return new GenericSemigroup(function(v){return function(v1){return new Data_Generic_Rep.Product(genericAppend$prime(dictGenericSemigroup)(v.value0)(v1.value0),genericAppend$prime(dictGenericSemigroup1)(v.value1)(v1.value1))}})}},exports.genericSemigroupConstructor=function(dictGenericSemigroup){return new GenericSemigroup(function(v){return function(v1){return genericAppend$prime(dictGenericSemigroup)(v)(v1)}})},exports.genericSemigroupRec=function(dictGenericSemigroup){return new GenericSemigroup(function(v){return function(v1){return genericAppend$prime(dictGenericSemigroup)(v)(v1)}})},exports.genericSemigroupField=function(dictSemigroup){return new GenericSemigroup(function(v){return function(v1){return Data_Semigroup.append(dictSemigroup)(v)(v1)}})}}(PS["Data.Generic.Rep.Semigroup"]=PS["Data.Generic.Rep.Semigroup"]||{}),function(exports){"use strict";PS["Control.Category"],PS["Control.Semigroupoid"];var Data_BigInt=PS["Data.BigInt"],Data_CommutativeRing=PS["Data.CommutativeRing"],Data_Eq=PS["Data.Eq"],Data_Int=(PS["Data.Function"],PS["Data.Int"]),Data_Maybe=PS["Data.Maybe"],Data_Ord=PS["Data.Ord"],Data_Ring=PS["Data.Ring"],Data_Semiring=PS["Data.Semiring"],Num=(PS.Prelude,function(CommutativeRing3,Eq0,Ring2,Semiring1,abs,fromBigInt,negate,signum){this.CommutativeRing3=CommutativeRing3,this.Eq0=Eq0,this.Ring2=Ring2,this.Semiring1=Semiring1,this.abs=abs,this.fromBigInt=fromBigInt,this.negate=negate,this.signum=signum}),numNumber=new Num(function(){return Data_CommutativeRing.commutativeRingNumber},function(){return Data_Eq.eqNumber},function(){return Data_Ring.ringNumber},function(){return Data_Semiring.semiringNumber},Data_Ord.abs(Data_Ord.ordNumber)(Data_Ring.ringNumber),function(bi){return Data_BigInt.toNumber(bi)},Data_Ring.negate(Data_Ring.ringNumber),Data_Ord.signum(Data_Ord.ordNumber)(Data_Ring.ringNumber)),numInt=new Num(function(){return Data_CommutativeRing.commutativeRingInt},function(){return Data_Eq.eqInt},function(){return Data_Ring.ringInt},function(){return Data_Semiring.semiringInt},Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt),function(bi){return Data_Maybe.fromMaybe(0)(Data_Int.fromNumber(Data_BigInt.toNumber(bi)))},Data_Ring.negate(Data_Ring.ringInt),Data_Ord.signum(Data_Ord.ordInt)(Data_Ring.ringInt));exports.Num=Num,exports.negate=function(dict){return dict.negate},exports.abs=function(dict){return dict.abs},exports.signum=function(dict){return dict.signum},exports.fromBigInt=function(dict){return dict.fromBigInt},exports.numInt=numInt,exports.numNumber=numNumber}(PS["Data.Num"]=PS["Data.Num"]||{}),function(exports){"use strict";PS["Data.BigInt"],PS["Data.Int"],PS["Data.Maybe"];var Data_Num=PS["Data.Num"],Data_Ord=PS["Data.Ord"],Data_Rational=PS["Data.Rational"],Real=(PS.Prelude,function(Num0,Ord1,toRational){this.Num0=Num0,this.Ord1=Ord1,this.toRational=toRational}),realInt=new Real(function(){return Data_Num.numInt},function(){return Data_Ord.ordInt},Data_Rational.fromInt);exports.Real=Real,exports.toRational=function(dict){return dict.toRational},exports.realInt=realInt}(PS["Data.Real"]=PS["Data.Real"]||{}),function(exports){"use strict";PS["Control.Category"],PS["Control.Semigroupoid"];var Data_BigInt=PS["Data.BigInt"],Data_EuclideanRing=PS["Data.EuclideanRing"],Data_Num=(PS["Data.Int"],PS["Data.Maybe"],PS["Data.Num"]),Data_Real=PS["Data.Real"],Integral=(PS.Prelude,function(EuclideanRing1,Real0,toBigInt){this.EuclideanRing1=EuclideanRing1,this.Real0=Real0,this.toBigInt=toBigInt}),toBigInt=function(dict){return dict.toBigInt},integralInt=new Integral(function(){return Data_EuclideanRing.euclideanRingInt},function(){return Data_Real.realInt},function(i){return Data_BigInt.fromInt(i)});exports.Integral=Integral,exports.toBigInt=toBigInt,exports.fromIntegral=function(dictIntegral){return function(dictIntegral1){return function($2){return Data_Num.fromBigInt(dictIntegral1.Real0().Num0())(toBigInt(dictIntegral)($2))}}},exports.integralInt=integralInt}(PS["Data.Integral"]=PS["Data.Integral"]||{}),function(exports){"use strict";PS["Data.Intl.DateTimeFormat"],PS["Control.Applicative"],PS["Control.Bind"],PS["Control.Category"],PS["Control.Monad.Error.Class"],PS["Control.Monad.Except.Trans"],PS["Control.Semigroupoid"],PS["Data.Either"];var Data_Eq=PS["Data.Eq"],Data_Newtype=(PS["Data.Foreign"],PS["Data.Foreign.Index"],PS["Data.Function"],PS["Data.Function.Uncurried"],PS["Data.Functor"],PS["Data.Identity"],PS["Data.Intl.DateTimeFormat.Class"],PS["Data.Intl.DateTimeFormat.Types"],PS["Data.JSDate"],PS["Data.List.Types"],PS["Data.Maybe"],PS["Data.Newtype"]),TimeZone=(PS["Data.Show"],PS["Data.StrMap"],PS["Data.Symbol"],PS["Data.Traversable"],PS["Data.Variant"],PS.Prelude,PS["Unsafe.Coerce"],function(x){return x}),newtypeTimeZone=new Data_Newtype.Newtype(function(n){return n},TimeZone),eqTimeZone=new Data_Eq.Eq(function(x){return function(y){return x===y}});exports.TimeZone=TimeZone,exports.newtypeTimeZone=newtypeTimeZone,exports.eqTimeZone=eqTimeZone}(PS["Data.Intl.DateTimeFormat"]=PS["Data.Intl.DateTimeFormat"]||{}),function(exports){"use strict";PS["Control.Category"],PS["Control.Semigroupoid"];var Data_Either=PS["Data.Either"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Profunctor=PS["Data.Profunctor"],Choice=(PS.Prelude,function(Profunctor0,left,right){this.Profunctor0=Profunctor0,this.left=left,this.right=right}),choiceFn=new Choice(function(){return Data_Profunctor.profunctorFn},function(v){return function(v1){if(v1 instanceof Data_Either.Left)return Data_Either.Left.create(v(v1.value0));if(v1 instanceof Data_Either.Right)return new Data_Either.Right(v1.value0);throw new Error("Failed pattern match at Data.Profunctor.Choice line 32, column 1 - line 32, column 33: "+[v.constructor.name,v1.constructor.name])}},Data_Functor.map(Data_Either.functorEither));exports.left=function(dict){return dict.left},exports.right=function(dict){return dict.right},exports.Choice=Choice,exports.choiceFn=choiceFn}(PS["Data.Profunctor.Choice"]=PS["Data.Profunctor.Choice"]||{}),function(exports){"use strict";PS["Control.Category"],PS["Control.Semigroupoid"];var Data_Functor=PS["Data.Functor"],Data_Profunctor=PS["Data.Profunctor"],Data_Tuple=PS["Data.Tuple"],Strong=(PS.Prelude,function(Profunctor0,first,second){this.Profunctor0=Profunctor0,this.first=first,this.second=second}),strongFn=new Strong(function(){return Data_Profunctor.profunctorFn},function(a2b){return function(v){return new Data_Tuple.Tuple(a2b(v.value0),v.value1)}},Data_Functor.map(Data_Tuple.functorTuple));exports.first=function(dict){return dict.first},exports.second=function(dict){return dict.second},exports.Strong=Strong,exports.strongFn=strongFn}(PS["Data.Profunctor.Strong"]=PS["Data.Profunctor.Strong"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"];var Control_Applicative=PS["Control.Applicative"],Data_Either=(PS["Control.Apply"],PS["Control.Bind"],PS["Control.Category"],PS["Control.Monad"],PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Distributive"],PS["Data.Either"]),Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Newtype=(PS["Data.Functor.Invariant"],PS["Data.Newtype"]),Data_Profunctor=PS["Data.Profunctor"],Data_Profunctor_Choice=PS["Data.Profunctor.Choice"],Data_Profunctor_Strong=(PS["Data.Profunctor.Closed"],PS["Data.Profunctor.Strong"]),Data_Tuple=PS["Data.Tuple"],Star=(PS.Prelude,function(x){return x}),profunctorStar=function(dictFunctor){return new Data_Profunctor.Profunctor(function(f){return function(g){return function(v){return function($78){return Data_Functor.map(dictFunctor)(g)(v(f($78)))}}}})},newtypeStar=new Data_Newtype.Newtype(function(n){return n},Star);exports.Star=Star,exports.newtypeStar=newtypeStar,exports.profunctorStar=profunctorStar,exports.strongStar=function(dictFunctor){return new Data_Profunctor_Strong.Strong(function(){return profunctorStar(dictFunctor)},function(v){return function(v1){return Data_Functor.map(dictFunctor)(function(v2){return new Data_Tuple.Tuple(v2,v1.value1)})(v(v1.value0))}},function(v){return function(v1){return Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1))}})},exports.choiceStar=function(dictApplicative){return new Data_Profunctor_Choice.Choice(function(){return profunctorStar(dictApplicative.Apply0().Functor0())},function(v){return Star(Data_Either.either(function($84){return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Left.create)(v($84))})(function($85){return Control_Applicative.pure(dictApplicative)(Data_Either.Right.create($85))}))},function(v){return Star(Data_Either.either(function($86){return Control_Applicative.pure(dictApplicative)(Data_Either.Left.create($86))})(function($87){return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v($87))}))})}}(PS["Data.Profunctor.Star"]=PS["Data.Profunctor.Star"]||{}),function(exports){"use strict";var Data_Functor=PS["Data.Functor"],Data_Identity=PS["Data.Identity"],Data_Newtype=PS["Data.Newtype"],Data_Profunctor_Choice=PS["Data.Profunctor.Choice"],Data_Profunctor_Star=PS["Data.Profunctor.Star"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Wander=(PS.Prelude,function(Choice1,Strong0,wander){this.Choice1=Choice1,this.Strong0=Strong0,this.wander=wander}),wanderFunction=new Wander(function(){return Data_Profunctor_Choice.choiceFn},function(){return Data_Profunctor_Strong.strongFn},function(t){return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Identity.newtypeIdentity)(Data_Identity.newtypeIdentity)(Data_Identity.Identity)(t(Data_Identity.applicativeIdentity))});exports.wander=function(dict){return dict.wander},exports.Wander=Wander,exports.wanderFunction=wanderFunction,exports.wanderStar=function(dictApplicative){return new Wander(function(){return Data_Profunctor_Star.choiceStar(dictApplicative)},function(){return Data_Profunctor_Star.strongStar(dictApplicative.Apply0().Functor0())},function(t){return function(v){return t(dictApplicative)(v)}})}}(PS["Data.Lens.Internal.Wander"]=PS["Data.Lens.Internal.Wander"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Bind"],PS["Control.Monad.Eff"],PS["Control.Monad.Rec.Class"],PS["Control.Monad.ST"],PS["Control.Semigroupoid"],PS["Data.Array"],PS["Data.Array.ST"],PS["Data.Eq"];var Data_Foldable=PS["Data.Foldable"],Data_List_Types=(PS["Data.Function"],PS["Data.Functor"],PS["Data.HeytingAlgebra"],PS["Data.List"],PS["Data.List.Types"]),Data_Map=PS["Data.Map"],Data_Monoid=(PS["Data.Maybe"],PS["Data.Monoid"]),Data_Semigroup=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Semigroup"]),Data_Unit=(PS["Data.Semiring"],PS["Data.Show"],PS["Data.Unfoldable"],PS["Data.Unit"]),$$Set=(PS["Partial.Unsafe"],PS.Prelude,function(){function $$Set(value0){this.value0=value0}return $$Set.create=function(value0){return new $$Set(value0)},$$Set}()),union=function(dictOrd){return function(v){return function(v1){return new $$Set(Data_Map.union(dictOrd)(v.value0)(v1.value0))}}},toList=function(v){return Data_Map.keys(v.value0)},semigroupSet=function(dictOrd){return new Data_Semigroup.Semigroup(union(dictOrd))},foldableSet=new Data_Foldable.Foldable(function(dictMonoid){return function(f){return function($71){return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(toList($71))}}},function(f){return function(x){return function($72){return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x)(toList($72))}}},function(f){return function(x){return function($73){return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x)(toList($73))}}}),empty=new $$Set(Data_Map.empty);exports.empty=empty,exports.insert=function(dictOrd){return function(a){return function(v){return new $$Set(Data_Map.insert(dictOrd)(a)(Data_Unit.unit)(v.value0))}}},exports.member=function(dictOrd){return function(a){return function(v){return Data_Map.member(dictOrd)(a)(v.value0)}}},exports.delete=function(dictOrd){return function(a){return function(v){return new $$Set(Data_Map.delete(dictOrd)(a)(v.value0))}}},exports.union=union,exports.monoidSet=function(dictOrd){return new Data_Monoid.Monoid(function(){return semigroupSet(dictOrd)},empty)},exports.semigroupSet=semigroupSet,exports.foldableSet=foldableSet}(PS["Data.Set"]=PS["Data.Set"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Functor=(PS["Data.Eq"],PS["Data.Function"],PS["Data.Functor"]),Data_Lens_Internal_Wander=(PS["Data.Identity"],PS["Data.Lens.Internal.Wander"]),Data_Map=(PS["Data.Lens.Types"],PS["Data.Map"]),Data_Maybe=PS["Data.Maybe"],Index=(PS["Data.Set"],PS["Data.StrMap"],PS["Data.Traversable"],PS.Prelude,function(ix){this.ix=ix}),indexArray=new Index(function(n){return function(dictWander){return Data_Lens_Internal_Wander.wander(dictWander)(function(dictApplicative){return function(coalg){return function(xs){return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(xs))(function($23){return Data_Functor.map(dictApplicative.Apply0().Functor0())(function(x){return Data_Maybe.fromMaybe(xs)(Data_Array.updateAt(n)(x)(xs))})(coalg($23))})(Data_Array.index(xs)(n))}}})}});exports.Index=Index,exports.ix=function(dict){return dict.ix},exports.indexArray=indexArray,exports.indexMap=function(dictOrd){return new Index(function(k){return function(dictWander){return Data_Lens_Internal_Wander.wander(dictWander)(function(dictApplicative){return function(coalg){return function(m){return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(m))(function($22){return Data_Functor.map(dictApplicative.Apply0().Functor0())(function(v){return Data_Map.insert(dictOrd)(k)(v)(m)})(coalg($22))})(Data_Map.lookup(dictOrd)(k)(m))}}})}})}}(PS["Data.Lens.Index"]=PS["Data.Lens.Index"]||{}),function(exports){"use strict";PS["Control.Category"],PS["Data.Lens.Internal.Indexed"],PS["Data.Lens.Internal.Shop"],PS["Data.Lens.Types"],PS["Data.Newtype"];var Data_Profunctor=PS["Data.Profunctor"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Tuple=PS["Data.Tuple"];PS.Prelude;exports.lens=function(get){return function(set){return function(dictStrong){return to=function(s){return new Data_Tuple.Tuple(get(s),function(b){return set(s)(b)})},function(dictStrong){return function(pab){return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function(v){return v.value1(v.value0)})(Data_Profunctor_Strong.first(dictStrong)(pab))}}(dictStrong);var to}}}}(PS["Data.Lens.Lens"]=PS["Data.Lens.Lens"]||{}),function(exports){"use strict";PS["Control.Category"],PS["Control.Semigroupoid"],PS["Data.Function"],PS["Data.Identity"],PS["Data.Lens"];var Data_Lens_Index=PS["Data.Lens.Index"],Data_Lens_Lens=PS["Data.Lens.Lens"],Data_Map=PS["Data.Map"],Data_Maybe=PS["Data.Maybe"],At=(PS["Data.Newtype"],PS["Data.Set"],PS["Data.StrMap"],PS["Data.Unit"],PS.Prelude,function(Index0,at){this.Index0=Index0,this.at=at});exports.At=At,exports.at=function(dict){return dict.at},exports.atMap=function(dictOrd){return new At(function(){return Data_Lens_Index.indexMap(dictOrd)},function(k){return function(dictStrong){return Data_Lens_Lens.lens(Data_Map.lookup(dictOrd)(k))(function(m){return Data_Maybe.maybe(Data_Map.delete(dictOrd)(k)(m))(function(v){return Data_Map.insert(dictOrd)(k)(v)(m)})})(dictStrong)}})}}(PS["Data.Lens.At"]=PS["Data.Lens.At"]||{}),function(exports){"use strict";PS["Data.Either"],PS["Data.Profunctor"];exports.unleft=function(dict){return dict.unleft},exports.unright=function(dict){return dict.unright},exports.Cochoice=function(Profunctor0,unleft,unright){this.Profunctor0=Profunctor0,this.unleft=unleft,this.unright=unright}}(PS["Data.Profunctor.Cochoice"]=PS["Data.Profunctor.Cochoice"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"];var Data_Const=PS["Data.Const"],Data_Either=PS["Data.Either"],Data_Functor=PS["Data.Functor"],Data_Lens_Internal_Wander=PS["Data.Lens.Internal.Wander"],Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Profunctor=PS["Data.Profunctor"],Data_Profunctor_Choice=PS["Data.Profunctor.Choice"],Data_Profunctor_Cochoice=PS["Data.Profunctor.Cochoice"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Tuple=(PS["Data.Semigroup"],PS["Data.Tuple"]),Forget=(PS.Prelude,function(x){return x}),profunctorForget=new Data_Profunctor.Profunctor(function(f){return function(v){return function(v1){return function($27){return v1(f($27))}}}}),strongForget=new Data_Profunctor_Strong.Strong(function(){return profunctorForget},function(v){return function($28){return v(Data_Tuple.fst($28))}},function(v){return function($29){return v(Data_Tuple.snd($29))}}),newtypeForget=new Data_Newtype.Newtype(function(n){return n},Forget),cochoiceForget=new Data_Profunctor_Cochoice.Cochoice(function(){return profunctorForget},function(v){return function($30){return v(Data_Either.Left.create($30))}},function(v){return function($31){return v(Data_Either.Right.create($31))}}),choiceForget=function(dictMonoid){return new Data_Profunctor_Choice.Choice(function(){return profunctorForget},function(v){return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))},function(v){return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v)})};exports.Forget=Forget,exports.newtypeForget=newtypeForget,exports.profunctorForget=profunctorForget,exports.choiceForget=choiceForget,exports.strongForget=strongForget,exports.cochoiceForget=cochoiceForget,exports.wanderForget=function(dictMonoid){return new Data_Lens_Internal_Wander.Wander(function(){return choiceForget(dictMonoid)},function(){return strongForget},function(f){return function(v){return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Const.newtypeConst)(Data_Const.newtypeConst)(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v)}})}}(PS["Data.Lens.Internal.Forget"]=PS["Data.Lens.Internal.Forget"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Apply"];var Control_Category=PS["Control.Category"],Data_Either=(PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Foldable=(PS["Data.Eq"],PS["Data.Foldable"]),Data_Function=PS["Data.Function"],Data_Lens_Internal_Forget=(PS["Data.Functor"],PS["Data.HeytingAlgebra"],PS["Data.Lens.Internal.Forget"]),Data_List_Types=(PS["Data.Lens.Internal.Indexed"],PS["Data.Lens.Types"],PS["Data.List"],PS["Data.List.Types"]),Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Monoid_Endo=(PS["Data.Maybe.Last"],PS["Data.Monoid"],PS["Data.Monoid.Additive"],PS["Data.Monoid.Conj"],PS["Data.Monoid.Disj"],PS["Data.Monoid.Dual"],PS["Data.Monoid.Endo"]),Data_Newtype=(PS["Data.Monoid.Multiplicative"],PS["Data.Newtype"]),Data_Profunctor=(PS["Data.Ord"],PS["Data.Profunctor"]),Data_Profunctor_Choice=PS["Data.Profunctor.Choice"],foldMapOf=(PS["Data.Ring"],PS["Data.Semigroup"],PS["Data.Tuple"],PS["Data.Unit"],PS.Prelude,Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget)),foldrOf=function(p){return function(f){return function(r){return function($55){return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(r)(foldMapOf(p)(function($56){return Data_Monoid_Endo.Endo(f($56))})($55))}}}},toListOf=function(p){return foldrOf(p)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value)},preview=function(p){return function($64){return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function($65){return Data_Maybe_First.First(Data_Maybe.Just.create($65))})($64))}};exports.previewOn=function(s){return function(p){return preview(p)(s)}},exports.toListOfOn=function(s){return function(p){return toListOf(p)(s)}},exports.preview=preview,exports.foldMapOf=foldMapOf,exports.foldrOf=foldrOf,exports.toListOf=toListOf,exports.filtered=function(dictChoice){return function(f){return function($71){return Data_Profunctor.dimap(dictChoice.Profunctor0())(function(x){return f(x)?new Data_Either.Right(x):new Data_Either.Left(x)})(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)($71))}}},exports.folded=function(dictMonoid){return function(dictFoldable){return function(v){return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(v)}}}}(PS["Data.Lens.Fold"]=PS["Data.Lens.Fold"]||{}),function(exports){"use strict";var Control_Category=PS["Control.Category"],Control_Monad_State_Class=PS["Control.Monad.State.Class"],Data_Lens_Internal_Forget=(PS["Control.Semigroupoid"],PS["Data.Function"],PS["Data.Lens.Internal.Forget"]),Data_Newtype=(PS["Data.Lens.Internal.Indexed"],PS["Data.Lens.Types"],PS["Data.Newtype"]),view=(PS["Data.Profunctor.Strong"],PS["Data.Tuple"],PS.Prelude,function(l){return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.id(Control_Category.categoryFn)))}),viewOn=function(s){return function(l){return view(l)(s)}};exports.viewOn=viewOn,exports.view=view,exports.to=function(f){return function(p){return function($7){return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p)(f($7))}}},exports.use=function(dictMonadState){return function(p){return Control_Monad_State_Class.gets(dictMonadState)(function(v){return viewOn(v)(p)})}}}(PS["Data.Lens.Getter"]=PS["Data.Lens.Getter"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Data_Functor=(PS["Control.Semigroupoid"],PS["Data.Functor"]),Data_Newtype=(PS["Data.Monoid"],PS["Data.Newtype"]),Data_Tuple=PS["Data.Tuple"],Focusing=(PS.Prelude,function(x){return x}),newtypeFocusing=new Data_Newtype.Newtype(function(n){return n},Focusing),focusingFunctor=function(dictFunctor){return new Data_Functor.Functor(function(f){return function(v){return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Tuple.functorTuple)(f))(v)}})},focusingApply=function(dictApply){return function(dictSemigroup){return new Control_Apply.Apply(function(){return focusingFunctor(dictApply.Functor0())},function(v){return function(v1){return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(Data_Tuple.applyTuple(dictSemigroup)))(v))(v1)}})}};exports.Focusing=Focusing,exports.newtypeFocusing=newtypeFocusing,exports.focusingFunctor=focusingFunctor,exports.focusingApply=focusingApply,exports.focusingApplicative=function(dictApplicative){return function(dictMonoid){return new Control_Applicative.Applicative(function(){return focusingApply(dictApplicative.Apply0())(dictMonoid.Semigroup0())},function($15){return Focusing(Control_Applicative.pure(dictApplicative)(Control_Applicative.pure(Data_Tuple.applicativeTuple(dictMonoid))($15)))})}}}(PS["Data.Lens.Internal.Focusing"]=PS["Data.Lens.Internal.Focusing"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"];var Data_Newtype=PS["Data.Newtype"],Data_Profunctor=PS["Data.Profunctor"],Data_Profunctor_Choice=PS["Data.Profunctor.Choice"],Data_Profunctor_Cochoice=PS["Data.Profunctor.Cochoice"],Re=(PS["Data.Profunctor.Costrong"],PS["Data.Profunctor.Strong"],PS.Prelude,function(x){return x}),profunctorRe=function(dictProfunctor){return new Data_Profunctor.Profunctor(function(f){return function(g){return function(v){return function($28){return v(Data_Profunctor.dimap(dictProfunctor)(g)(f)($28))}}}})},newtypeRe=new Data_Newtype.Newtype(function(n){return n},Re);exports.Re=Re,exports.newtypeRe=newtypeRe,exports.profunctorRe=profunctorRe,exports.cochoiceRe=function(dictCochoice){return new Data_Profunctor_Choice.Choice(function(){return profunctorRe(dictCochoice.Profunctor0())},function(v){return function($33){return v(Data_Profunctor_Cochoice.unleft(dictCochoice)($33))}},function(v){return function($34){return v(Data_Profunctor_Cochoice.unright(dictCochoice)($34))}})}}(PS["Data.Lens.Internal.Re"]=PS["Data.Lens.Internal.Re"]||{}),function(exports){"use strict";var Data_Either=PS["Data.Either"],Data_Newtype=(PS["Data.Eq"],PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"],PS["Data.Newtype"]),Data_Profunctor=(PS["Data.Ord"],PS["Data.Profunctor"]),Data_Profunctor_Choice=PS["Data.Profunctor.Choice"],Tagged=(PS["Data.Profunctor.Closed"],PS["Data.Profunctor.Costrong"],PS["Data.Traversable"],PS["Data.Tuple"],PS.Prelude,function(x){return x}),taggedProfunctor=new Data_Profunctor.Profunctor(function(v){return function(g){return function(v1){return g(v1)}}}),taggedChoice=new Data_Profunctor_Choice.Choice(function(){return taggedProfunctor},function(v){return new Data_Either.Left(v)},function(v){return new Data_Either.Right(v)}),newtypeTagged=new Data_Newtype.Newtype(function(n){return n},Tagged);exports.Tagged=Tagged,exports.newtypeTagged=newtypeTagged,exports.taggedProfunctor=taggedProfunctor,exports.taggedChoice=taggedChoice}(PS["Data.Lens.Internal.Tagged"]=PS["Data.Lens.Internal.Tagged"]||{}),function(exports){"use strict";var Control_Category=PS["Control.Category"],Data_Lens_Internal_Re=(PS["Control.Semigroupoid"],PS["Data.Boolean"],PS["Data.Eq"],PS["Data.Function"],PS["Data.Functor"],PS["Data.Lens.Internal.Exchange"],PS["Data.Lens.Internal.Re"]),Data_Newtype=(PS["Data.Lens.Types"],PS["Data.Maybe"],PS["Data.Newtype"]),Data_Profunctor=PS["Data.Profunctor"];PS["Data.Tuple"],PS.Prelude;exports.iso=function(f){return function(g){return function(dictProfunctor){return function(pab){return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab)}}}},exports.re=function(t){return Data_Newtype.unwrap(Data_Lens_Internal_Re.newtypeRe)(t(Control_Category.id(Control_Category.categoryFn)))}}(PS["Data.Lens.Iso"]=PS["Data.Lens.Iso"]||{}),function(exports){"use strict";var Data_Lens_Iso=PS["Data.Lens.Iso"],Data_Newtype=PS["Data.Newtype"];exports._Newtype=function(dictNewtype){return function(dictNewtype1){return function(dictProfunctor){return Data_Lens_Iso.iso(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype1))(dictProfunctor)}}}}(PS["Data.Lens.Iso.Newtype"]=PS["Data.Lens.Iso.Newtype"]||{}),function(exports){"use strict";PS["Data.Lens.Lens"];var Data_Profunctor_Strong=PS["Data.Profunctor.Strong"];PS["Data.Tuple"];exports._1=function(dictStrong){return Data_Profunctor_Strong.first(dictStrong)},exports._2=function(dictStrong){return Data_Profunctor_Strong.second(dictStrong)}}(PS["Data.Lens.Lens.Tuple"]=PS["Data.Lens.Lens.Tuple"]||{}),function(exports){"use strict";var Data_Function=PS["Data.Function"],Data_Lens_Lens=PS["Data.Lens.Lens"],Data_Unit=PS["Data.Unit"];PS.Prelude;exports.united=function(dictStrong){return Data_Lens_Lens.lens(Data_Function.const(Data_Unit.unit))(Data_Function.const)(dictStrong)}}(PS["Data.Lens.Lens.Unit"]=PS["Data.Lens.Lens.Unit"]||{}),function(exports){"use strict";var Control_Category=PS["Control.Category"],Data_Either=(PS["Control.MonadPlus"],PS["Control.MonadZero"],PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Lens_Internal_Tagged=(PS["Data.Eq"],PS["Data.Function"],PS["Data.HeytingAlgebra"],PS["Data.Lens.Internal.Market"],PS["Data.Lens.Internal.Tagged"]),Data_Maybe=(PS["Data.Lens.Types"],PS["Data.Maybe"]),Data_Newtype=PS["Data.Newtype"],Data_Profunctor=PS["Data.Profunctor"],Data_Profunctor_Choice=PS["Data.Profunctor.Choice"],review=(PS.Prelude,Data_Newtype.under(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.Tagged)),prism=function(to){return function(fro){return function(dictChoice){return function(pab){return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)))}}}};exports.prism=prism,exports["prism'"]=function(to){return function(fro){return function(dictChoice){return prism(to)(function(s){return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s))})(dictChoice)}}},exports.review=review}(PS["Data.Lens.Prism"]=PS["Data.Lens.Prism"]||{}),function(exports){"use strict";PS["Data.Either"],PS["Data.Lens.Prism"];var Data_Profunctor_Choice=PS["Data.Profunctor.Choice"];exports._Right=function(dictChoice){return Data_Profunctor_Choice.right(dictChoice)}}(PS["Data.Lens.Prism.Either"]=PS["Data.Lens.Prism.Either"]||{}),function(exports){"use strict";var Data_Either=PS["Data.Either"],Data_Function=PS["Data.Function"],Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Maybe=PS["Data.Maybe"],Data_Unit=PS["Data.Unit"];PS.Prelude;exports._Nothing=function(dictChoice){return Data_Lens_Prism.prism(Data_Function.const(Data_Maybe.Nothing.value))(Data_Maybe.maybe(new Data_Either.Right(Data_Unit.unit))(Data_Function.const(new Data_Either.Left(Data_Maybe.Nothing.value))))(dictChoice)},exports._Just=function(dictChoice){return Data_Lens_Prism.prism(Data_Maybe.Just.create)(Data_Maybe.maybe(new Data_Either.Left(Data_Maybe.Nothing.value))(Data_Either.Right.create))(dictChoice)}}(PS["Data.Lens.Prism.Maybe"]=PS["Data.Lens.Prism.Maybe"]||{}),function(exports){"use strict";exports.unsafeGetFn=function(label,rec){return rec[label]},exports.unsafeSetFn=function(label,value,rec){var copy={};for(var key in rec)({}).hasOwnProperty.call(rec,key)&&(copy[key]=rec[key]);return copy[label]=value,copy}}(PS["Data.Record.Unsafe"]=PS["Data.Record.Unsafe"]||{}),function(exports){"use strict";var $foreign=PS["Data.Record.Unsafe"];PS["Data.Function.Uncurried"];exports.unsafeGetFn=$foreign.unsafeGetFn,exports.unsafeSetFn=$foreign.unsafeSetFn}(PS["Data.Record.Unsafe"]=PS["Data.Record.Unsafe"]||{}),function(exports){"use strict";PS["Type.Data.Boolean"],PS["Type.Data.Symbol"],PS["Type.Equality"];var RLProxy=function(){function RLProxy(){}return RLProxy.value=new RLProxy,RLProxy}(),RowLacking={},RowLacks={},rowLacking=RowLacking;exports.RowLacks=RowLacks,exports.RowLacking=RowLacking,exports.RLProxy=RLProxy,exports.rowLacking=rowLacking,exports.rowLacks=function(dictRowCons){return function(dictUnion){return function(dictRowCons1){return function(dictRowLacking){return RowLacks}}}}}(PS["Type.Row"]=PS["Type.Row"]||{}),function(exports){"use strict";PS["Data.Eq"],PS["Data.Function.Uncurried"],PS["Data.HeytingAlgebra"];var Data_Record_Unsafe=PS["Data.Record.Unsafe"],Data_Symbol=PS["Data.Symbol"];PS.Prelude,PS["Type.Row"];exports.get=function(dictIsSymbol){return function(dictRowCons){return function(l){return function(r){return Data_Record_Unsafe.unsafeGetFn(Data_Symbol.reflectSymbol(dictIsSymbol)(l),r)}}}},exports.set=function(dictIsSymbol){return function(dictRowCons){return function(dictRowCons1){return function(l){return function(b){return function(r){return Data_Record_Unsafe.unsafeSetFn(Data_Symbol.reflectSymbol(dictIsSymbol)(l),b,r)}}}}}}}(PS["Data.Record"]=PS["Data.Record"]||{}),function(exports){"use strict";var Data_Function=PS["Data.Function"],Data_Lens_Lens=(PS["Data.Lens"],PS["Data.Lens.Lens"]),Data_Record=PS["Data.Record"];PS["Data.Symbol"],PS.Prelude;exports.prop=function(dictIsSymbol){return function(dictRowCons){return function(dictRowCons1){return function(l){return function(dictStrong){return Data_Lens_Lens.lens(Data_Record.get(dictIsSymbol)(dictRowCons)(l))(Data_Function.flip(Data_Record.set(dictIsSymbol)(dictRowCons)(dictRowCons1)(l)))(dictStrong)}}}}}}(PS["Data.Lens.Record"]=PS["Data.Lens.Record"]||{}),function(exports){"use strict";var Control_Monad_State_Class=PS["Control.Monad.State.Class"],Data_Function=(PS["Control.Semigroupoid"],PS["Data.EuclideanRing"],PS["Data.Function"]),Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Lens.Internal.Indexed"],PS["Data.Lens.Types"],PS["Data.Maybe"]),Data_Semigroup=(PS["Data.Ring"],PS["Data.Semigroup"]),over=(PS["Data.Semiring"],PS["Data.Tuple"],PS.Prelude,function(l){return l}),set=function(l){return function(b){return over(l)(Data_Function.const(b))}},modifying=function(dictMonadState){return function(p){return function(f){return Control_Monad_State_Class.modify(dictMonadState)(over(p)(f))}}};exports.over=over,exports.set=set,exports.appendOver=function(dictSemigroup){return function(p){return function($36){return over(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($36))}}},exports.setJust=function(p){return function($24){return set(p)(Data_Maybe.Just.create($24))}},exports.assign=function(dictMonadState){return function(p){return function(b){return Control_Monad_State_Class.modify(dictMonadState)(set(p)(b))}}},exports.modifying=modifying,exports.appendModifying=function(dictMonadState){return function(dictSemigroup){return function(p){return function($37){return modifying(dictMonadState)(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($37))}}}}}(PS["Data.Lens.Setter"]=PS["Data.Lens.Setter"]||{}),function(exports){"use strict";PS["Control.Alternative"],PS["Control.Applicative"],PS["Control.Category"],PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Eq"],PS["Data.Function"],PS["Data.Lens.Indexed"],PS["Data.Lens.Internal.Indexed"];var Data_Lens_Internal_Wander=PS["Data.Lens.Internal.Wander"],Data_Traversable=(PS["Data.Lens.Types"],PS["Data.Monoid.Disj"],PS["Data.Newtype"],PS["Data.Profunctor.Star"],PS["Data.Traversable"]);PS["Data.Tuple"],PS.Prelude;exports.traversed=function(dictTraversable){return function(dictWander){return Data_Lens_Internal_Wander.wander(dictWander)(function(dictApplicative){return Data_Traversable.traverse(dictTraversable)(dictApplicative)})}}}(PS["Data.Lens.Traversal"]=PS["Data.Lens.Traversal"]||{}),function(exports){"use strict";var Control_Monad_State_Trans=PS["Control.Monad.State.Trans"],Data_Functor=(PS["Control.Semigroupoid"],PS["Data.Functor"]),Data_Lens_Internal_Focusing=PS["Data.Lens.Internal.Focusing"],Data_Newtype=(PS["Data.Lens.Types"],PS["Data.Newtype"]),Data_Profunctor_Star=PS["Data.Profunctor.Star"];PS.Prelude;exports.zoom=function(p){return function($0){return Control_Monad_State_Trans.StateT(Data_Newtype.underF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Lens_Internal_Focusing.newtypeFocusing)(Data_Lens_Internal_Focusing.newtypeFocusing)(Data_Lens_Internal_Focusing.Focusing)(Data_Newtype.under(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.Star)(p))(Control_Monad_State_Trans.runStateT($0)))}}}(PS["Data.Lens.Zoom"]=PS["Data.Lens.Zoom"]||{}),function(exports){"use strict";PS["Control.Alt"],PS["Control.Alternative"],PS["Control.Applicative"];var Control_Apply=PS["Control.Apply"],Data_Function=(PS["Control.Bind"],PS["Control.Plus"],PS["Control.Semigroupoid"],PS["Data.Eq"],PS["Data.Foldable"],PS["Data.Function"]),Data_List_Lazy=(PS["Data.Functor"],PS["Data.List.Lazy"]),Data_List_Lazy_Types=PS["Data.List.Lazy.Types"],functorZipList=(PS["Data.Monoid"],PS["Data.Newtype"],PS["Data.Ord"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.Traversable"],PS["Partial.Unsafe"],PS.Prelude,Data_List_Lazy_Types.functorList),foldableZipList=Data_List_Lazy_Types.foldableList,applyZipList=new Control_Apply.Apply(function(){return functorZipList},function(v){return function(v1){return Data_List_Lazy.zipWith(Data_Function.apply)(v)(v1)}});exports.foldableZipList=foldableZipList,exports.functorZipList=functorZipList,exports.applyZipList=applyZipList}(PS["Data.List.ZipList"]=PS["Data.List.ZipList"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"];var Data_Boolean=PS["Data.Boolean"],Data_Maybe=PS["Data.Maybe"],Global=PS.Global,$$isFinite=(PS.Prelude,Global.isFinite),fromString=function($1){return function(num){if($$isFinite(num))return new Data_Maybe.Just(num);if(Data_Boolean.otherwise)return Data_Maybe.Nothing.value;throw new Error("Failed pattern match at Data.Number line 45, column 5 - line 46, column 39: "+[num.constructor.name])}(Global.readFloat($1))};exports.fromString=fromString}(PS["Data.Number"]=PS["Data.Number"]||{}),function(exports){"use strict";exports.copyRecord=function(rec){var copy={};for(var key in rec)({}).hasOwnProperty.call(rec,key)&&(copy[key]=rec[key]);return copy},exports.unsafeInsert=function(l){return function(a){return function(rec){return rec[l]=a,rec}}},exports.unsafeMerge=function(r1){return function(r2){var copy={};for(var k1 in r2)({}).hasOwnProperty.call(r2,k1)&&(copy[k1]=r2[k1]);for(var k2 in r1)({}).hasOwnProperty.call(r1,k2)&&(copy[k2]=r1[k2]);return copy}}}(PS["Data.Record.Builder"]=PS["Data.Record.Builder"]||{}),function(exports){"use strict";var $foreign=PS["Data.Record.Builder"],Control_Category=PS["Control.Category"],Control_Semigroupoid=PS["Control.Semigroupoid"],Data_Symbol=PS["Data.Symbol"],semigroupoidBuilder=(PS.Prelude,PS["Type.Row"],Control_Semigroupoid.semigroupoidFn),categoryBuilder=Control_Category.categoryFn;exports.build=function(v){return function(r1){return v($foreign.copyRecord(r1))}},exports.insert=function(dictRowCons){return function(dictRowLacks){return function(dictIsSymbol){return function(l){return function(a){return function(r1){return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1)}}}}}},exports.merge=function(dictUnion){return function(r2){return function(r1){return $foreign.unsafeMerge(r1)(r2)}}},exports.semigroupoidBuilder=semigroupoidBuilder,exports.categoryBuilder=categoryBuilder}(PS["Data.Record.Builder"]=PS["Data.Record.Builder"]||{}),function(exports){"use strict";exports._decodeNode=function(Left,Right,str){var result,reValidBase64=new RegExp(["^$","|","^([A-Za-z0-9+/]{4})*","([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}(?:=)?|[A-Za-z0-9+/]{2}(?:=){0,2})$"].join(""));try{if(!reValidBase64.test(str))throw new Error("Invalid input string");result=Right(Buffer.from(str,"base64").toString("utf-8"))}catch(error){result=Left(error)}return result},exports._atob=function(Left,Right,str){var result;try{result=Right(atob(str))}catch(error){result=Left(error)}return result}}(PS["Data.String.Base64"]=PS["Data.String.Base64"]||{}),function(exports){"use strict";var atobIsDefined="function"==typeof atob;exports.atobIsDefined=atobIsDefined}(PS["Data.String.Base64.Internal"]=PS["Data.String.Base64.Internal"]||{}),function(exports){"use strict";function escapeRegex(str){return str.replace(/[.*+?^${}()|[\]\-\\]/g,"\\$&")}exports.escapeRegex=escapeRegex,exports.toCharArray=function(str){return Array.from(str)}}(PS["Data.String.Utils"]=PS["Data.String.Utils"]||{}),function(exports){"use strict";var $foreign=PS["Data.String.Utils"],Data_Either=(PS["Control.Semigroupoid"],PS["Data.Array"],PS["Data.Either"]),Data_String_Regex=(PS["Data.Functor"],PS["Data.Maybe"],PS["Data.Show"],PS["Data.String.Regex"]),Data_String_Regex_Flags=PS["Data.String.Regex.Flags"],replaceAll=(PS["Partial.Unsafe"],PS.Prelude,function($3){return Data_String_Regex.replace((str=$3,Data_Either.fromRight()(Data_String_Regex.regex($foreign.escapeRegex(str))(Data_String_Regex_Flags.global))));var str});exports.replaceAll=replaceAll,exports.toCharArray=$foreign.toCharArray}(PS["Data.String.Utils"]=PS["Data.String.Utils"]||{}),function(exports){"use strict";(PS["Data.TypedArray"]=PS["Data.TypedArray"]||{}).asUint8Array=function(array){return new Uint8Array(array)}}(),function(exports){"use strict";var $foreign=PS["Data.TypedArray"];PS["Data.ArrayBuffer.Types"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"],PS["Data.Ord"],PS.Prelude;exports.asUint8Array=$foreign.asUint8Array}(PS["Data.TypedArray"]=PS["Data.TypedArray"]||{}),function(exports){"use strict";var $foreign=PS["Data.String.Base64.Internal"],Data_Char_Utils=(PS["Control.Semigroupoid"],PS["Data.ArrayBuffer.Types"],PS["Data.Char.Utils"]),Data_Functor=PS["Data.Functor"],Data_String_Utils=PS["Data.String.Utils"],Data_TypedArray=PS["Data.TypedArray"];PS.Prelude;exports.unsafeStringToUint8ArrayOfCharCodes=function($0){return Data_TypedArray.asUint8Array(Data_Functor.map(Data_Functor.functorArray)(Data_Char_Utils.toCodePoint)(Data_String_Utils.toCharArray($0)))},exports.toRfc4648=function($2){return Data_String_Utils.replaceAll("-")("+")(Data_String_Utils.replaceAll("_")("/")($2))},exports.atobIsDefined=$foreign.atobIsDefined}(PS["Data.String.Base64.Internal"]=PS["Data.String.Base64.Internal"]||{}),function(exports){"use strict";var TextDecoder="object"==typeof window&&window.TextDecoder||"function"==typeof require&&require("text-encoding").TextDecoder;exports._decode=function(Left,Right,utfLabel,buffer){var result,decoder=new TextDecoder(utfLabel);try{result=Right(decoder.decode(buffer))}catch(error){result=Left(error)}return result}}(PS["Data.TextDecoder"]=PS["Data.TextDecoder"]||{}),function(exports){"use strict";var $foreign=PS["Data.TextDecoder"],Data_Either=(PS["Control.Monad.Eff.Exception"],PS["Data.ArrayBuffer.Types"],PS["Data.Either"]),Data_Show=(PS["Data.Function.Uncurried"],PS["Data.Show"]),Utf8=(PS.Prelude,function(){function Utf8(){}return Utf8.value=new Utf8,Utf8}()),Ibm866=function(){function Ibm866(){}return Ibm866.value=new Ibm866,Ibm866}(),Iso_8859_2=function(){function Iso_8859_2(){}return Iso_8859_2.value=new Iso_8859_2,Iso_8859_2}(),Iso_8859_3=function(){function Iso_8859_3(){}return Iso_8859_3.value=new Iso_8859_3,Iso_8859_3}(),Iso_8859_4=function(){function Iso_8859_4(){}return Iso_8859_4.value=new Iso_8859_4,Iso_8859_4}(),Iso_8859_5=function(){function Iso_8859_5(){}return Iso_8859_5.value=new Iso_8859_5,Iso_8859_5}(),Iso_8859_6=function(){function Iso_8859_6(){}return Iso_8859_6.value=new Iso_8859_6,Iso_8859_6}(),Iso_8859_7=function(){function Iso_8859_7(){}return Iso_8859_7.value=new Iso_8859_7,Iso_8859_7}(),Iso_8859_8=function(){function Iso_8859_8(){}return Iso_8859_8.value=new Iso_8859_8,Iso_8859_8}(),Iso_8859_8_I=function(){function Iso_8859_8_I(){}return Iso_8859_8_I.value=new Iso_8859_8_I,Iso_8859_8_I}(),Iso_8859_10=function(){function Iso_8859_10(){}return Iso_8859_10.value=new Iso_8859_10,Iso_8859_10}(),Iso_8859_13=function(){function Iso_8859_13(){}return Iso_8859_13.value=new Iso_8859_13,Iso_8859_13}(),Iso_8859_14=function(){function Iso_8859_14(){}return Iso_8859_14.value=new Iso_8859_14,Iso_8859_14}(),Iso_8859_15=function(){function Iso_8859_15(){}return Iso_8859_15.value=new Iso_8859_15,Iso_8859_15}(),Iso_8859_16=function(){function Iso_8859_16(){}return Iso_8859_16.value=new Iso_8859_16,Iso_8859_16}(),Koi8_R=function(){function Koi8_R(){}return Koi8_R.value=new Koi8_R,Koi8_R}(),Koi8_U=function(){function Koi8_U(){}return Koi8_U.value=new Koi8_U,Koi8_U}(),Macintosh=function(){function Macintosh(){}return Macintosh.value=new Macintosh,Macintosh}(),Windows_874=function(){function Windows_874(){}return Windows_874.value=new Windows_874,Windows_874}(),Windows_1250=function(){function Windows_1250(){}return Windows_1250.value=new Windows_1250,Windows_1250}(),Windows_1251=function(){function Windows_1251(){}return Windows_1251.value=new Windows_1251,Windows_1251}(),Windows_1252=function(){function Windows_1252(){}return Windows_1252.value=new Windows_1252,Windows_1252}(),Windows_1253=function(){function Windows_1253(){}return Windows_1253.value=new Windows_1253,Windows_1253}(),Windows_1254=function(){function Windows_1254(){}return Windows_1254.value=new Windows_1254,Windows_1254}(),Windows_1255=function(){function Windows_1255(){}return Windows_1255.value=new Windows_1255,Windows_1255}(),Windows_1256=function(){function Windows_1256(){}return Windows_1256.value=new Windows_1256,Windows_1256}(),Windows_1257=function(){function Windows_1257(){}return Windows_1257.value=new Windows_1257,Windows_1257}(),Windows_1258=function(){function Windows_1258(){}return Windows_1258.value=new Windows_1258,Windows_1258}(),X_Mac_Cyrillic=function(){function X_Mac_Cyrillic(){}return X_Mac_Cyrillic.value=new X_Mac_Cyrillic,X_Mac_Cyrillic}(),Gbk=function(){function Gbk(){}return Gbk.value=new Gbk,Gbk}(),Gb18030=function(){function Gb18030(){}return Gb18030.value=new Gb18030,Gb18030}(),Big5=function(){function Big5(){}return Big5.value=new Big5,Big5}(),Euc_Jp=function(){function Euc_Jp(){}return Euc_Jp.value=new Euc_Jp,Euc_Jp}(),Iso_2022_Jp=function(){function Iso_2022_Jp(){}return Iso_2022_Jp.value=new Iso_2022_Jp,Iso_2022_Jp}(),Shift_Jis=function(){function Shift_Jis(){}return Shift_Jis.value=new Shift_Jis,Shift_Jis}(),Euc_Kr=function(){function Euc_Kr(){}return Euc_Kr.value=new Euc_Kr,Euc_Kr}(),Replacement=function(){function Replacement(){}return Replacement.value=new Replacement,Replacement}(),Utf_16Be=function(){function Utf_16Be(){}return Utf_16Be.value=new Utf_16Be,Utf_16Be}(),Utf_16Le=function(){function Utf_16Le(){}return Utf_16Le.value=new Utf_16Le,Utf_16Le}(),X_User_Defined=function(){function X_User_Defined(){}return X_User_Defined.value=new X_User_Defined,X_User_Defined}(),showEncoding=new Data_Show.Show(function(v){if(v instanceof Utf8)return"utf-8";if(v instanceof Ibm866)return"ibm866";if(v instanceof Iso_8859_2)return"iso-8859-2";if(v instanceof Iso_8859_3)return"iso-8859-3";if(v instanceof Iso_8859_4)return"iso-8859-4";if(v instanceof Iso_8859_5)return"iso-8859-5";if(v instanceof Iso_8859_6)return"iso-8859-6";if(v instanceof Iso_8859_7)return"iso-8859-8";if(v instanceof Iso_8859_8)return"iso-8859-8";if(v instanceof Iso_8859_8_I)return"iso-8859-8-i";if(v instanceof Iso_8859_10)return"iso-8859-10";if(v instanceof Iso_8859_13)return"iso-8859-13";if(v instanceof Iso_8859_14)return"iso-8859-14";if(v instanceof Iso_8859_15)return"iso-8859-15";if(v instanceof Iso_8859_16)return"iso-8859-16";if(v instanceof Koi8_R)return"koi8-r";if(v instanceof Koi8_U)return"koi8-u";if(v instanceof Macintosh)return"macintosh";if(v instanceof Windows_874)return"windows-874";if(v instanceof Windows_1250)return"windows-1250";if(v instanceof Windows_1251)return"windows-1251";if(v instanceof Windows_1252)return"windows-1252";if(v instanceof Windows_1253)return"windows-1253";if(v instanceof Windows_1254)return"windows-1254";if(v instanceof Windows_1255)return"windows-1255";if(v instanceof Windows_1256)return"windows-1256";if(v instanceof Windows_1257)return"windows-1257";if(v instanceof Windows_1258)return"windows-1258";if(v instanceof X_Mac_Cyrillic)return"x-max-cyrillic";if(v instanceof Gbk)return"gbk";if(v instanceof Gb18030)return"gb18030";if(v instanceof Big5)return"big5";if(v instanceof Euc_Jp)return"euc-jp";if(v instanceof Iso_2022_Jp)return"iso-2022-jp";if(v instanceof Shift_Jis)return"shift-jis";if(v instanceof Euc_Kr)return"euc-kr";if(v instanceof Replacement)return"iso-2022-kr";if(v instanceof Utf_16Be)return"utf-16be";if(v instanceof Utf_16Le)return"utf-16le";if(v instanceof X_User_Defined)return"x-user-defined";throw new Error("Failed pattern match at Data.TextDecoder line 88, column 1 - line 88, column 39: "+[v.constructor.name])}),decode=function(encoding){return function(buffer){return $foreign._decode(Data_Either.Left.create,Data_Either.Right.create,Data_Show.show(showEncoding)(encoding),buffer)}},decodeUtf8=decode(Utf8.value);exports.Utf8=Utf8,exports.Ibm866=Ibm866,exports.Iso_8859_2=Iso_8859_2,exports.Iso_8859_3=Iso_8859_3,exports.Iso_8859_4=Iso_8859_4,exports.Iso_8859_5=Iso_8859_5,exports.Iso_8859_6=Iso_8859_6,exports.Iso_8859_7=Iso_8859_7,exports.Iso_8859_8=Iso_8859_8,exports.Iso_8859_8_I=Iso_8859_8_I,exports.Iso_8859_10=Iso_8859_10,exports.Iso_8859_13=Iso_8859_13,exports.Iso_8859_14=Iso_8859_14,exports.Iso_8859_15=Iso_8859_15,exports.Iso_8859_16=Iso_8859_16,exports.Koi8_R=Koi8_R,exports.Koi8_U=Koi8_U,exports.Macintosh=Macintosh,exports.Windows_874=Windows_874,exports.Windows_1250=Windows_1250,exports.Windows_1251=Windows_1251,exports.Windows_1252=Windows_1252,exports.Windows_1253=Windows_1253,exports.Windows_1254=Windows_1254,exports.Windows_1255=Windows_1255,exports.Windows_1256=Windows_1256,exports.Windows_1257=Windows_1257,exports.Windows_1258=Windows_1258,exports.X_Mac_Cyrillic=X_Mac_Cyrillic,exports.Gbk=Gbk,exports.Gb18030=Gb18030,exports.Big5=Big5,exports.Euc_Jp=Euc_Jp,exports.Iso_2022_Jp=Iso_2022_Jp,exports.Shift_Jis=Shift_Jis,exports.Euc_Kr=Euc_Kr,exports.Replacement=Replacement,exports.Utf_16Be=Utf_16Be,exports.Utf_16Le=Utf_16Le,exports.X_User_Defined=X_User_Defined,exports.decode=decode,exports.decodeUtf8=decodeUtf8,exports.showEncoding=showEncoding}(PS["Data.TextDecoder"]=PS["Data.TextDecoder"]||{}),function(exports){"use strict";var $foreign=PS["Data.String.Base64"],Control_Bind=PS["Control.Bind"],Data_Either=(PS["Control.Monad.Eff.Exception"],PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Functor=(PS["Data.Function"],PS["Data.Function.Uncurried"],PS["Data.Functor"]),Data_String_Base64_Internal=PS["Data.String.Base64.Internal"],Data_TextDecoder=PS["Data.TextDecoder"],atob=(PS["Data.TextEncoder"],PS["Partial.Unsafe"],PS.Prelude,function(str){return $foreign._atob(Data_Either.Left.create,Data_Either.Right.create,str)});exports.atob=atob,exports.decode=function(str){return Data_String_Base64_Internal.atobIsDefined?Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_String_Base64_Internal.unsafeStringToUint8ArrayOfCharCodes)(atob(Data_String_Base64_Internal.toRfc4648(str))))(Data_TextDecoder.decodeUtf8):$foreign._decodeNode(Data_Either.Left.create,Data_Either.Right.create,Data_String_Base64_Internal.toRfc4648(str))}}(PS["Data.String.Base64"]=PS["Data.String.Base64"]||{}),function(exports){"use strict";PS["Data.Typelevel.Num.Reps"];var d31=PS["Data.Typelevel.Undefined"][void 0];exports.d31=d31}(PS["Data.Typelevel.Num.Aliases"]=PS["Data.Typelevel.Num.Aliases"]||{}),function(exports){"use strict";PS["Data.Show"],PS["Data.Tuple"],PS["Data.Typelevel.Bool"],PS["Data.Typelevel.Num.Reps"];var Data_Typelevel_Num_Sets=PS["Data.Typelevel.Num.Sets"],Succ=(PS["Data.Typelevel.Undefined"],PS.Prelude,function(Nat0,Pos1){this.Nat0=Nat0,this.Pos1=Pos1}),SuccP={},DivMod10=function(Nat0,Nat1){this.Nat0=Nat0,this.Nat1=Nat1},Trich=function(Nat0,Nat1){this.Nat0=Nat0,this.Nat1=Nat1},CS={},Gt={},Lt={},GtEq={},IsZero={},trichD3D3=new Trich(function(){return Data_Typelevel_Num_Sets.natD3},function(){return Data_Typelevel_Num_Sets.natD3}),trichD2D1=new Trich(function(){return Data_Typelevel_Num_Sets.natD2},function(){return Data_Typelevel_Num_Sets.natD1}),succPxiD1xiD2=SuccP,csEQrr=CS;exports.Succ=Succ,exports.SuccP=SuccP,exports.DivMod10=DivMod10,exports.Trich=Trich,exports.CS=CS,exports.Gt=Gt,exports.Lt=Lt,exports.GtEq=GtEq,exports.IsZero=IsZero,exports.typelevelSucc=function(dictPos){return function(dictIsZero){return function(dictDivMod10){return function(dictSuccP){return function(dictDivMod101){return new Succ(dictDivMod10.Nat1,function(){return dictPos})}}}}},exports.succPxiD1xiD2=succPxiD1xiD2,exports.divMod10D3x=function(dictNat){return new DivMod10(function(){return Data_Typelevel_Num_Sets.natD3},function(){return dictNat})},exports.trichD2D1=trichD2D1,exports.trichD3D3=trichD3D3,exports.trichD5Dxx=function(dictPos){return new Trich(function(){return Data_Typelevel_Num_Sets.natD5},dictPos.Nat0)},exports.trichDxxD5=function(dictPos){return new Trich(dictPos.Nat0,function(){return Data_Typelevel_Num_Sets.natD5})},exports.trichDxxDxx=function(dictPos){return function(dictPos1){return function(dictTrich){return function(dictTrich1){return function(dictCS){return new Trich(dictPos.Nat0,dictPos1.Nat0)}}}}},exports.csEQrr=csEQrr,exports.trichGt=function(dictTrich){return Gt},exports.trichLt=function(dictTrich){return Lt},exports.trichGtEq=function(dictSucc){return function(dictTrich){return GtEq}},exports.isZeroPos=function(dictPos){return IsZero}}(PS["Data.Typelevel.Num.Ops"]=PS["Data.Typelevel.Num.Ops"]||{}),function(exports){"use strict";exports.from=function(val){return val>>>0},exports.toInt=function(uval){return 0|uval},exports.uintAdd=function(x){return function(y){return x+y>>>0}},exports.uintMul=function(x){return function(y){return x*y>>>0}},exports.uintSub=function(x){return function(y){return x-y>>>0}},exports.uintDiv=function(x){return function(y){return x/y>>>0}},exports.uintMod=function(x){return function(y){return x%y>>>0}},exports.uintDegree=function(x){return Math.abs(0|x)},exports.uintEq=function(x){return function(y){return x==y}},exports.uintCmp=function(lt){return function(eq){return function(gt){return function(x){return function(y){return x<y?lt:x===y?eq:gt}}}}},exports.complement=function(n){return~n>>>0}}(PS["Data.UInt"]=PS["Data.UInt"]||{}),function(exports){"use strict";var $foreign=PS["Data.UInt"],Data_CommutativeRing=(PS["Control.Semigroupoid"],PS["Data.Bounded"],PS["Data.CommutativeRing"]),Data_Eq=PS["Data.Eq"],Data_EuclideanRing=PS["Data.EuclideanRing"],Data_Ord=(PS["Data.Function"],PS["Data.Maybe"],PS["Data.Ord"]),Data_Ordering=PS["Data.Ordering"],Data_Ring=PS["Data.Ring"],Data_Semiring=(PS["Data.Semigroup"],PS["Data.Semiring"]),uintEqInstance=(PS["Data.Show"],PS.Math,new Data_Eq.Eq($foreign.uintEq)),uintOrd=new Data_Ord.Ord(function(){return uintEqInstance},$foreign.uintCmp(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value)),fromNumber=$foreign.from,fromInt=$foreign.from,uintSemiring=new Data_Semiring.Semiring($foreign.uintAdd,$foreign.uintMul,fromInt(1),fromInt(0)),uintRing=new Data_Ring.Ring(function(){return uintSemiring},$foreign.uintSub),uintCommutativeRing=new Data_CommutativeRing.CommutativeRing(function(){return uintRing}),uintEulideanRing=new Data_EuclideanRing.EuclideanRing(function(){return uintCommutativeRing},$foreign.uintDegree,$foreign.uintDiv,$foreign.uintMod);exports.fromInt=fromInt,exports.fromNumber=fromNumber,exports.uintSemiring=uintSemiring,exports.uintRing=uintRing,exports.uintCommutativeRing=uintCommutativeRing,exports.uintEulideanRing=uintEulideanRing,exports.uintEqInstance=uintEqInstance,exports.uintOrd=uintOrd,exports.toInt=$foreign.toInt,exports.complement=$foreign.complement}(PS["Data.UInt"]=PS["Data.UInt"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"];var Data_BigInt=PS["Data.BigInt"],Data_Bounded=(PS["Data.BooleanAlgebra"],PS["Data.Bounded"]),Data_CommutativeRing=PS["Data.CommutativeRing"],Data_Eq=PS["Data.Eq"],Data_EuclideanRing=PS["Data.EuclideanRing"],Data_Integral=(PS["Data.Function"],PS["Data.HeytingAlgebra"],PS["Data.Int"],PS["Data.Integral"]),Data_Num=(PS["Data.Maybe"],PS["Data.Num"]),Data_Ord=PS["Data.Ord"],Data_Rational=PS["Data.Rational"],Data_Real=PS["Data.Real"],Data_Ring=PS["Data.Ring"],Data_Semiring=(PS["Data.Semigroup"],PS["Data.Semiring"]),Data_UInt=(PS["Data.Shift"],PS["Data.Show"],PS["Data.String"],PS["Data.UInt"]),Word32=(PS.Prelude,function(x){return x}),eqWord32=new Data_Eq.Eq(function(v){return function(v1){return Data_Eq.eq(Data_UInt.uintEqInstance)(v)(v1)}}),ordWord32=new Data_Ord.Ord(function(){return eqWord32},function(v){return function(v1){return Data_Ord.compare(Data_UInt.uintOrd)(v)(v1)}}),boundedWord32=new Data_Bounded.Bounded(function(){return ordWord32},Word32(Data_UInt.fromInt(0)),Word32(Data_UInt.complement(Data_UInt.fromInt(0)))),semiringWord32=new Data_Semiring.Semiring(function(v){return function(v1){return Data_Semiring.add(Data_UInt.uintSemiring)(v)(v1)}},function(v){return function(v1){return Data_Semiring.mul(Data_UInt.uintSemiring)(v)(v1)}},Word32(Data_UInt.fromInt(1)),Data_Bounded.bottom(boundedWord32)),ring32=new Data_Ring.Ring(function(){return semiringWord32},function(v){return function(v1){return Data_Ring.sub(Data_UInt.uintRing)(v)(v1)}}),commutativeRing32=new Data_CommutativeRing.CommutativeRing(function(){return ring32}),euclideanRing32=new Data_EuclideanRing.EuclideanRing(function(){return commutativeRing32},function(v){return Data_EuclideanRing.degree(Data_UInt.uintEulideanRing)(v)},function(v){return function(v1){return Word32(Data_EuclideanRing.div(Data_UInt.uintEulideanRing)(v)(v1))}},function(v){return function(v1){return Word32(Data_EuclideanRing.mod(Data_UInt.uintEulideanRing)(v)(v1))}}),word32Num=new Data_Num.Num(function(){return commutativeRing32},function(){return eqWord32},function(){return ring32},function(){return semiringWord32},Data_Ord.abs(ordWord32)(ring32),function(bi){return Word32(Data_UInt.fromNumber(Data_BigInt.toNumber(bi)))},Data_Ring.negate(ring32),Data_Ord.signum(ordWord32)(ring32)),realWord32=new Data_Real.Real(function(){return word32Num},function(){return ordWord32},function(v){return Data_Rational.fromInt(Data_UInt.toInt(v))}),word32Integral=new Data_Integral.Integral(function(){return euclideanRing32},function(){return realWord32},function(v){return Data_BigInt.fromInt(Data_UInt.toInt(v))});exports.eqWord32=eqWord32,exports.ordWord32=ordWord32,exports.boundedWord32=boundedWord32,exports.semiringWord32=semiringWord32,exports.ring32=ring32,exports.commutativeRing32=commutativeRing32,exports.euclideanRing32=euclideanRing32,exports.word32Num=word32Num,exports.realWord32=realWord32,exports.word32Integral=word32Integral}(PS["Data.Word"]=PS["Data.Word"]||{}),function(exports){"use strict";exports.intDiv=function(x){return function(y){return 0===y?0:0<y?Math.floor(x/y):-Math.floor(x/-y)}},exports.intMod=function(x){return function(y){if(0===y)return 0;var yy=Math.abs(y);return(x%yy+yy)%yy}}}(PS.Forestay=PS.Forestay||{}),function(exports){"use strict";var $foreign=PS.Forestay,Control_Bind=(PS["Control.Alternative"],PS["Control.Apply"],PS["Control.Bind"]),Control_Comonad=PS["Control.Comonad"],Control_Extend=PS["Control.Extend"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Aff_Class=PS["Control.Monad.Aff.Class"],Control_Monad_State=(PS["Control.Monad.Eff"],PS["Control.Monad.Eff.Console"],PS["Control.Monad.Eff.Exception"],PS["Control.Monad.State"]),Control_Monad_State_Class=PS["Control.Monad.State.Class"],Control_Plus=PS["Control.Plus"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Either=PS["Data.Either"],Data_Function=PS["Data.Function"],Data_Lens_Fold=(PS["Data.Functor"],PS["Data.Lens"],PS["Data.Lens.Fold"]),Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Lens=PS["Data.Lens.Lens"],Data_Maybe=PS["Data.Maybe"],Data_String_Regex=(PS["Data.Maybe.First"],PS["Data.Ring"],PS["Data.String.Regex"]),Data_String_Regex_Flags=PS["Data.String.Regex.Flags"],onJust$prime=(PS["Data.Tuple"],PS["Data.Unit"],PS.Prelude,Data_Function.flip(function($24){return Data_Function.flip(Data_Maybe["maybe'"]($24))})),onJust=Data_Function.flip(function($25){return Data_Function.flip(Data_Maybe.maybe($25))}),execState$prime=Data_Function.flip(Control_Monad_State.execState),enumerated=Data_Lens_Getter.to(function(x){return Data_Array.zip(Data_Array.range(0)(Data_Array.length(x)-1|0))(x)});exports.onJust=onJust,exports["onJust'"]=onJust$prime,exports.just=function(dictAlternative){return Data_Function.flip(Data_Maybe.maybe(Control_Plus.empty(dictAlternative.Plus1())))},exports.nothing=function(dictAlternative){return Data_Function.flip(Data_Function.flip(Data_Maybe["maybe'"])(Data_Function.const(Control_Plus.empty(dictAlternative.Plus1()))))},exports["execState'"]=execState$prime,exports["liftAff'"]=function(dictMonadAff){return function($27){return Control_Monad_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Aff["liftEff'"]($27))}},exports.matches=function(v){return function(input){return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function($26){return Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array.head($26))})(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Data_Function.flip(Data_String_Regex.match)(input))(Data_Either.hush))(Data_String_Regex.regex(v)(Data_String_Regex_Flags.noFlags))}},exports.preuse=function(dictMonadState){return function($23){return Control_Monad_State_Class.gets(dictMonadState)(Data_Lens_Fold.preview($23))}},exports.enumerated=enumerated,exports.extracted=function(dictComonad){return function(dictStrong){return Data_Lens_Lens.lens(Control_Comonad.extract(dictComonad))(function(wa){return function($29){return Control_Extend.extendFlipped(dictComonad.Extend0())(wa)(Data_Function.const($29))}})(dictStrong)}},exports.intDiv=$foreign.intDiv,exports.intMod=$foreign.intMod}(PS.Forestay=PS.Forestay||{}),function(exports){"use strict";PS["Control.Alt"];var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad_Except=PS["Control.Monad.Except"],Control_Monad_Except_Trans=PS["Control.Monad.Except.Trans"],Control_Semigroupoid=PS["Control.Semigroupoid"],Data_Foreign=(PS["Data.Either"],PS["Data.Eq"],PS["Data.Foreign"]),Data_Foreign_Index=PS["Data.Foreign.Index"],Data_Foreign_JSON=(PS["Data.Foreign.Internal"],PS["Data.Foreign.JSON"]),Data_Foreign_NullOrUndefined=PS["Data.Foreign.NullOrUndefined"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Identity=PS["Data.Identity"],Data_List_Types=PS["Data.List.Types"],Data_Record_Builder=(PS["Data.Maybe"],PS["Data.Nullable"],PS["Data.Record"],PS["Data.Record.Builder"]),Data_Symbol=(PS["Data.Semigroup"],PS["Data.StrMap"],PS["Data.Symbol"]),Type_Row=(PS["Data.Traversable"],PS["Data.Variant"],PS["Global.Unsafe"],PS["Partial.Unsafe"],PS.Prelude,PS["Type.Row"]),ReadForeign=function(readImpl){this.readImpl=readImpl},ReadForeignFields=function(getFields){this.getFields=getFields},readString=new ReadForeign(Data_Foreign.readString),readImpl=function(dict){return dict.readImpl},readFieldsNil=new ReadForeignFields(function(v){return function(v1){return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.id(Data_Record_Builder.categoryBuilder))}}),getFields=function(dict){return dict.getFields};exports.readJSON=function(dictReadForeign){return function($70){return Control_Monad_Except.runExcept(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))(Data_Foreign_JSON.parseJSON)($70))}},exports.ReadForeign=ReadForeign,exports.readImpl=readImpl,exports.ReadForeignFields=ReadForeignFields,exports.getFields=getFields,exports.readString=readString,exports.readMaybe=function(dictReadForeign){return new ReadForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(readImpl(dictReadForeign)))},exports.readRecord=function(dictRowToList){return function(dictReadForeignFields){return new ReadForeign(function(o){return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(getFields(dictReadForeignFields)(Type_Row.RLProxy.value)(o))(function(v){return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Record_Builder.build(v)({}))})})}},exports.readFieldsCons=function(dictIsSymbol){return function(dictReadForeign){return function(dictReadForeignFields){return function(dictRowLacks){return function(dictRowCons){return new ReadForeignFields(function(v){return function(obj){var name=Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value),withExcept$prime=Control_Monad_Except.withExcept(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Foreign.ErrorAtProperty.create(name)));return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(withExcept$prime(Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))(Data_Foreign_Index.readProp(name)(obj))))(function(v1){return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(getFields(dictReadForeignFields)(Type_Row.RLProxy.value)(obj))(function(v2){var first=Data_Record_Builder.insert(dictRowCons)(dictRowLacks)(dictIsSymbol)(Data_Symbol.SProxy.value)(v1);return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Semigroupoid.compose(Data_Record_Builder.semigroupoidBuilder)(first)(v2))})})}})}}}}},exports.readFieldsNil=readFieldsNil}(PS["Simple.JSON"]=PS["Simple.JSON"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Eff=PS["Control.Monad.Eff"],Control_Monad_Eff_Class=PS["Control.Monad.Eff.Class"],Control_Monad_Eff_Exception=PS["Control.Monad.Eff.Exception"],Control_Monad_Eff_Now=PS["Control.Monad.Eff.Now"],Data_Cookie=(PS["Control.Semigroupoid"],PS.DOM,PS["Data.Cookie"]),Data_Date=PS["Data.Date"],Data_DateTime_Locale=PS["Data.DateTime.Locale"],Data_Either=PS["Data.Either"],Data_Functor=(PS["Data.Eq"],PS["Data.Function"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_Lens_Prism_Maybe=(PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"],PS["Data.Lens"],PS["Data.Lens.Prism.Maybe"]),Data_Lens_Record=PS["Data.Lens.Record"],Data_Lens_Setter=PS["Data.Lens.Setter"],Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Profunctor_Choice=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Profunctor.Choice"]),Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Record_Builder=PS["Data.Record.Builder"],Data_String=(PS["Data.Semigroup"],PS["Data.Show"],PS["Data.String"]),Data_String_Base64=PS["Data.String.Base64"],Data_Symbol=PS["Data.Symbol"],Data_Unit=PS["Data.Unit"],Forestay=PS.Forestay,Simple_JSON=(PS.Prelude,PS["Simple.JSON"]),Type_Row=PS["Type.Row"],Config=function(x){return x},withTerminalSolidus=function($57){return Control_Apply.apply(Control_Apply.applyFn)(Data_Maybe.fromMaybe)(Data_String.stripSuffix("/"))($57)+"/"},oldGenericSerializedConfig=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Config.Config"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Config))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&3===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(baseURL2){return function(crestURL2){return function(localDate2){return{baseURL:baseURL2,crestURL:crestURL2,localDate:localDate2}}}}))(Data_Generic.fromSpine(Data_Generic.genericString)(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(Data_Generic.genericString))(r.value0[1].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_DateTime_Locale.genericLocalValue(Data_Date.genericDate))(r.value0[2].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Config.SerializedConfig",[{sigConstructor:"EmmaMCR.Config.Config",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"baseURL",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}},{recLabel:"crestURL",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericMaybe(Data_Generic.genericString))(Data_Generic.anyProxy)}},{recLabel:"localDate",recValue:function($dollarq2){return Data_Generic.toSignature(Data_DateTime_Locale.genericLocalValue(Data_Date.genericDate))(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Config.Config",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"baseURL",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericString)(v.baseURL)}},{recLabel:"crestURL",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericMaybe(Data_Generic.genericString))(v.crestURL)}},{recLabel:"localDate",recValue:function($dollarq1){return Data_Generic.toSpine(Data_DateTime_Locale.genericLocalValue(Data_Date.genericDate))(v.localDate)}}])}])}),newtypeSerializedConfig=new Data_Newtype.Newtype(function(n){return n},Config),baseURL=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"baseURL"}))()()(Data_Symbol.SProxy.value)(dictStrong)},readConfig=Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function($58){return Data_Lens_Setter.over(function($59){return Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)(baseURL(Data_Profunctor_Strong.strongFn)($59))})(withTerminalSolidus)(Data_Either.hush(Simple_JSON.readJSON(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function(){return"baseURL"}))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function(){return"crestURL"}))(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)(Type_Row.rowLacks()()()(Type_Row.rowLacking))())(Type_Row.rowLacks()()()(Type_Row.rowLacking))()))($58)))})(function($60){return Data_Either.hush(Data_String_Base64.decode(Data_Newtype.unwrap(Data_Cookie.newtypeCookie)($60)))}),getConfig=function(f){return function(){var v=Control_Monad_Eff_Now.nowDate(),v1=Data_Functor.map(Control_Monad_Eff.functorEff)(readConfig)(f("JS-CONFIG"))();return Forestay.just(Data_Maybe.alternativeMaybe)(v1)(function(cconf){return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Record_Builder.build(Data_Record_Builder.merge()(cconf))({localDate:v}))})}},getConfigCookie=Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Data_Maybe["maybe'"](function(v){return Control_Monad_Eff_Exception.throw("No cookie configuration")})(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)))(Control_Apply.applyFirst(Control_Monad_Eff.applyEff)(getConfig(Data_Cookie.getCookie))(Data_Cookie.deleteCookie("JS-CONFIG"))));exports.Config=Config,exports.getConfig=getConfig,exports.getConfigCookie=getConfigCookie,exports.baseURL=baseURL,exports.oldGenericSerializedConfig=oldGenericSerializedConfig,exports.newtypeSerializedConfig=newtypeSerializedConfig}(PS["EmmaMCR.Config"]=PS["EmmaMCR.Config"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Data_Binary_UnsignedInt=(PS["Control.Semigroupoid"],PS["Data.Binary.UnsignedInt"]),Data_Enum=PS["Data.Enum"],Data_Eq=PS["Data.Eq"],Data_Finance_Currency=PS["Data.Finance.Currency"],Data_Finance_Money=PS["Data.Finance.Money"],Data_Finance_Money_Format=PS["Data.Finance.Money.Format"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_Generic_Rep=PS["Data.Generic.Rep"],Data_Generic_Rep_Monoid=PS["Data.Generic.Rep.Monoid"],Data_Generic_Rep_Semigroup=PS["Data.Generic.Rep.Semigroup"],Data_Int=(PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"],PS["Data.Int"]),Data_Intl_DateTimeFormat=PS["Data.Intl.DateTimeFormat"],Data_Lens_Fold=(PS["Data.Lens"],PS["Data.Lens.Fold"]),Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Re=PS["Data.Lens.Internal.Re"],Data_Lens_Internal_Tagged=PS["Data.Lens.Internal.Tagged"],Data_Lens_Iso=PS["Data.Lens.Iso"],Data_Lens_Iso_Newtype=PS["Data.Lens.Iso.Newtype"],Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Lens_Record=PS["Data.Lens.Record"],Data_List_Types=PS["Data.List.Types"],Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Ord=PS["Data.Ord"],Data_Ordering=PS["Data.Ordering"],Data_Rational=PS["Data.Rational"],Data_Semigroup=PS["Data.Semigroup"],Data_Show=(PS["Data.Semiring"],PS["Data.Show"]),Data_String_Yarn=PS["Data.String.Yarn"],Data_Symbol=PS["Data.Symbol"],Data_Tuple=PS["Data.Tuple"],Data_Typelevel_Num_Aliases=(PS["Data.Tuple.Nested"],PS["Data.Typelevel.Num"],PS["Data.Typelevel.Num.Aliases"]),Data_Typelevel_Num_Ops=PS["Data.Typelevel.Num.Ops"],Data_Typelevel_Num_Sets=PS["Data.Typelevel.Num.Sets"],Data_Unit=PS["Data.Unit"],Type_Proxy=(PS.Prelude,PS["Type.Proxy"]),Year=function(x){return x},Wine=function(){function Wine(){}return Wine.value=new Wine,Wine}(),NoWine=function(){function NoWine(){}return NoWine.value=new NoWine,NoWine}(),Timezone=function(x){return x},Michaelmas=function(){function Michaelmas(){}return Michaelmas.value=new Michaelmas,Michaelmas}(),Lent=function(){function Lent(){}return Lent.value=new Lent,Lent}(),Easter=function(){function Easter(){}return Easter.value=new Easter,Easter}(),LongVac=function(){function LongVac(){}return LongVac.value=new LongVac,LongVac}(),EverybodyCanRead=function(){function EverybodyCanRead(){}return EverybodyCanRead.value=new EverybodyCanRead,EverybodyCanRead}(),MCRCanRead=function(){function MCRCanRead(){}return MCRCanRead.value=new MCRCanRead,MCRCanRead}(),CommitteeCanRead=function(){function CommitteeCanRead(){}return CommitteeCanRead.value=new CommitteeCanRead,CommitteeCanRead}(),OnlyFromDatabase=function(){function OnlyFromDatabase(){}return OnlyFromDatabase.value=new OnlyFromDatabase,OnlyFromDatabase}(),JustMe=function(){function JustMe(){}return JustMe.value=new JustMe,JustMe}(),Pounds=function(x){return x},PersonName=function(x){return x},Nuts=function(){function Nuts(){}return Nuts.value=new Nuts,Nuts}(),NoNuts=function(){function NoNuts(){}return NoNuts.value=new NoNuts,NoNuts}(),IsMember=function(){function IsMember(){}return IsMember.value=new IsMember,IsMember}(),IsAffiliate=function(){function IsAffiliate(){}return IsAffiliate.value=new IsAffiliate,IsAffiliate}(),IsAssociate=function(){function IsAssociate(){}return IsAssociate.value=new IsAssociate,IsAssociate}(),IsAlum=function(){function IsAlum(){}return IsAlum.value=new IsAlum,IsAlum}(),Gluten=function(){function Gluten(){}return Gluten.value=new Gluten,Gluten}(),NoGluten=function(){function NoGluten(){}return NoGluten.value=new NoGluten,NoGluten}(),Diet=function(x){return x},DietMap=function(x){return x},Email=function(){function Email(value0){this.value0=value0}return Email.create=function(value0){return new Email(value0)},Email}(),Phone=function(){function Phone(value0){this.value0=value0}return Phone.create=function(value0){return new Phone(value0)},Phone}(),Department=function(){function Department(value0){this.value0=value0}return Department.create=function(value0){return new Department(value0)},Department}(),Supervisor=function(){function Supervisor(value0){this.value0=value0}return Supervisor.create=function(value0){return new Supervisor(value0)},Supervisor}(),URL=function(){function URL(value0){this.value0=value0}return URL.create=function(value0){return new URL(value0)},URL}(),MakeCRSid=function(x){return x},CRSid=function(){function CRSid(value0){this.value0=value0}return CRSid.create=function(value0){return new CRSid(value0)},CRSid}(),UserId=function(){function UserId(value0){this.value0=value0}return UserId.create=function(value0){return new UserId(value0)},UserId}(),MCRMember=function(){function MCRMember(){}return MCRMember.value=new MCRMember,MCRMember}(),Affiliate=function(){function Affiliate(){}return Affiliate.value=new Affiliate,Affiliate}(),Associate=function(){function Associate(){}return Associate.value=new Associate,Associate}(),Guest=function(){function Guest(){}return Guest.value=new Guest,Guest}(),FirstComeFirstServed=function(){function FirstComeFirstServed(){}return FirstComeFirstServed.value=new FirstComeFirstServed,FirstComeFirstServed}(),FullBallot=function(){function FullBallot(){}return FullBallot.value=new FullBallot,FullBallot}(),showTerm=new Data_Show.Show(function(v){if(v instanceof Michaelmas)return"Michaelmas";if(v instanceof Lent)return"Lent";if(v instanceof Easter)return"Easter";if(v instanceof LongVac)return"Long Vac";throw new Error("Failed pattern match at EmmaMCR.Types.Core line 537, column 1 - line 537, column 31: "+[v.constructor.name])}),poundFormat=Data_Finance_Money_Format.sbind(Data_List_Types.semigroupList)(Data_Finance_Money_Format.ifNegative(Data_Finance_Money_Format.literal("−")))(function(){return Data_Finance_Money_Format.sbind(Data_List_Types.semigroupList)(Data_Finance_Money_Format.literal("£ "))(function(){return Data_Finance_Money_Format.absolute})}),oldgenericWine=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Wine"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Wine.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.NoWine"===v.value0&&0===v.value1.length?new Data_Maybe.Just(NoWine.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.Wine",[{sigConstructor:"EmmaMCR.Types.Core.Wine",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.NoWine",sigValues:[]}])},function(v){if(v instanceof Wine)return new Data_Generic.SProd("EmmaMCR.Types.Core.Wine",[]);if(v instanceof NoWine)return new Data_Generic.SProd("EmmaMCR.Types.Core.NoWine",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 635, column 8 - line 635, column 47: "+[v.constructor.name])}),oldgenericTimezone=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SString?Data_Maybe.Just.create(Timezone(Data_Intl_DateTimeFormat.TimeZone(v.value0))):Data_Maybe.Nothing.value},function(v){return Data_Generic.SigString.value},function(v){return new Data_Generic.SString(v)}),oldgenericReadAccess=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.EverybodyCanRead"===v.value0&&0===v.value1.length?new Data_Maybe.Just(EverybodyCanRead.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.MCRCanRead"===v.value0&&0===v.value1.length?new Data_Maybe.Just(MCRCanRead.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.CommitteeCanRead"===v.value0&&0===v.value1.length?new Data_Maybe.Just(CommitteeCanRead.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.OnlyFromDatabase"===v.value0&&0===v.value1.length?new Data_Maybe.Just(OnlyFromDatabase.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.JustMe"===v.value0&&0===v.value1.length?new Data_Maybe.Just(JustMe.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.ReadAccess",[{sigConstructor:"EmmaMCR.Types.Core.EverybodyCanRead",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.MCRCanRead",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.CommitteeCanRead",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.OnlyFromDatabase",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.JustMe",sigValues:[]}])},function(v){if(v instanceof EverybodyCanRead)return new Data_Generic.SProd("EmmaMCR.Types.Core.EverybodyCanRead",[]);if(v instanceof MCRCanRead)return new Data_Generic.SProd("EmmaMCR.Types.Core.MCRCanRead",[]);if(v instanceof CommitteeCanRead)return new Data_Generic.SProd("EmmaMCR.Types.Core.CommitteeCanRead",[]);if(v instanceof OnlyFromDatabase)return new Data_Generic.SProd("EmmaMCR.Types.Core.OnlyFromDatabase",[]);if(v instanceof JustMe)return new Data_Generic.SProd("EmmaMCR.Types.Core.JustMe",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 460, column 8 - line 460, column 59: "+[v.constructor.name])}),oldgenericNuts=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Nuts"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Nuts.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.NoNuts"===v.value0&&0===v.value1.length?new Data_Maybe.Just(NoNuts.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.Nuts",[{sigConstructor:"EmmaMCR.Types.Core.Nuts",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.NoNuts",sigValues:[]}])},function(v){if(v instanceof Nuts)return new Data_Generic.SProd("EmmaMCR.Types.Core.Nuts",[]);if(v instanceof NoNuts)return new Data_Generic.SProd("EmmaMCR.Types.Core.NoNuts",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 346, column 8 - line 346, column 47: "+[v.constructor.name])}),oldgenericMembership=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.IsMember"===v.value0&&0===v.value1.length?new Data_Maybe.Just(IsMember.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.IsAffiliate"===v.value0&&0===v.value1.length?new Data_Maybe.Just(IsAffiliate.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.IsAssociate"===v.value0&&0===v.value1.length?new Data_Maybe.Just(IsAssociate.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.IsAlum"===v.value0&&0===v.value1.length?new Data_Maybe.Just(IsAlum.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.Membership",[{sigConstructor:"EmmaMCR.Types.Core.IsMember",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.IsAffiliate",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.IsAssociate",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.IsAlum",sigValues:[]}])},function(v){if(v instanceof IsMember)return new Data_Generic.SProd("EmmaMCR.Types.Core.IsMember",[]);if(v instanceof IsAffiliate)return new Data_Generic.SProd("EmmaMCR.Types.Core.IsAffiliate",[]);if(v instanceof IsAssociate)return new Data_Generic.SProd("EmmaMCR.Types.Core.IsAssociate",[]);if(v instanceof IsAlum)return new Data_Generic.SProd("EmmaMCR.Types.Core.IsAlum",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 309, column 8 - line 309, column 59: "+[v.constructor.name])}),oldgenericCRSid=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SString?Data_Maybe.Just.create(MakeCRSid({unCRSid:v.value0})):Data_Maybe.Nothing.value},function(v){return Data_Generic.SigString.value},function(v){return new Data_Generic.SString(v.unCRSid)}),oldgenericAttendee=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.MCRMember"===v.value0&&0===v.value1.length?new Data_Maybe.Just(MCRMember.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Affiliate"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Affiliate.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Associate"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Associate.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Guest"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Guest.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.Attendee",[{sigConstructor:"EmmaMCR.Types.Core.MCRMember",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.Affiliate",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.Associate",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.Guest",sigValues:[]}])},function(v){if(v instanceof MCRMember)return new Data_Generic.SProd("EmmaMCR.Types.Core.MCRMember",[]);if(v instanceof Affiliate)return new Data_Generic.SProd("EmmaMCR.Types.Core.Affiliate",[]);if(v instanceof Associate)return new Data_Generic.SProd("EmmaMCR.Types.Core.Associate",[]);if(v instanceof Guest)return new Data_Generic.SProd("EmmaMCR.Types.Core.Guest",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 77, column 8 - line 77, column 55: "+[v.constructor.name])}),oldGenericYear=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SInt?Data_Maybe.Just.create(Year({unYear:v.value0})):Data_Maybe.Nothing.value},function(v){return Data_Generic.SigInt.value},function(v){return new Data_Generic.SInt(v.unYear)}),oldGenericUserId=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.CRSid"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(CRSid.create))(Data_Generic.fromSpine(oldgenericCRSid)(v.value1[0](Data_Unit.unit))):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.UserId"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(UserId.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.UserId",[{sigConstructor:"EmmaMCR.Types.Core.CRSid",sigValues:[function($dollarq1){return Data_Generic.toSignature(oldgenericCRSid)(Data_Generic.anyProxy)}]},{sigConstructor:"EmmaMCR.Types.Core.UserId",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}]}])},function(v){if(v instanceof CRSid)return new Data_Generic.SProd("EmmaMCR.Types.Core.CRSid",[function($dollarq){return Data_Generic.toSpine(oldgenericCRSid)(v.value0)}]);if(v instanceof UserId)return new Data_Generic.SProd("EmmaMCR.Types.Core.UserId",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericString)(v.value0)}]);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 605, column 8 - line 605, column 51: "+[v.constructor.name])}),oldGenericTerm=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SString&&"Michaelmas"===v.value0?new Data_Maybe.Just(Michaelmas.value):v instanceof Data_Generic.SString&&"Lent"===v.value0?new Data_Maybe.Just(Lent.value):v instanceof Data_Generic.SString&&"Easter"===v.value0?new Data_Maybe.Just(Easter.value):v instanceof Data_Generic.SString&&"Long Vac"===v.value0?new Data_Maybe.Just(LongVac.value):Data_Maybe.Nothing.value},function(v){return Data_Generic.SigString.value},function($870){return Data_Generic.SString.create(Data_Show.show(showTerm)($870))}),oldGenericPersonName=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.PersonName"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(PersonName))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&2===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(firstname2){return function(surname2){return{firstname:firstname2,surname:surname2}}}))(Data_Generic.fromSpine(Data_Generic.genericString)(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)(r.value0[1].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.PersonName",[{sigConstructor:"EmmaMCR.Types.Core.PersonName",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"firstname",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}},{recLabel:"surname",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Core.PersonName",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"firstname",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericString)(v.firstname)}},{recLabel:"surname",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericString)(v.surname)}}])}])}),oldgenericContact=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Email"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Email.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit))):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Phone"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Phone.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit))):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Department"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Department.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit))):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Supervisor"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Supervisor.create))(Data_Generic.fromSpine(oldGenericPersonName)(v.value1[0](Data_Unit.unit))):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.URL"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(URL.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit))):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.Contact",[{sigConstructor:"EmmaMCR.Types.Core.Email",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}]},{sigConstructor:"EmmaMCR.Types.Core.Phone",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}]},{sigConstructor:"EmmaMCR.Types.Core.Department",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}]},{sigConstructor:"EmmaMCR.Types.Core.Supervisor",sigValues:[function($dollarq1){return Data_Generic.toSignature(oldGenericPersonName)(Data_Generic.anyProxy)}]},{sigConstructor:"EmmaMCR.Types.Core.URL",sigValues:[function($dollarq1){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}]}])},function(v){if(v instanceof Email)return new Data_Generic.SProd("EmmaMCR.Types.Core.Email",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericString)(v.value0)}]);if(v instanceof Phone)return new Data_Generic.SProd("EmmaMCR.Types.Core.Phone",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericString)(v.value0)}]);if(v instanceof Department)return new Data_Generic.SProd("EmmaMCR.Types.Core.Department",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericString)(v.value0)}]);if(v instanceof Supervisor)return new Data_Generic.SProd("EmmaMCR.Types.Core.Supervisor",[function($dollarq){return Data_Generic.toSpine(oldGenericPersonName)(v.value0)}]);if(v instanceof URL)return new Data_Generic.SProd("EmmaMCR.Types.Core.URL",[function($dollarq){return Data_Generic.toSpine(Data_Generic.genericString)(v.value0)}]);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 141, column 8 - line 141, column 53: "+[v.constructor.name])}),oldGenericAssignGuests=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.FirstComeFirstServed"===v.value0&&0===v.value1.length?new Data_Maybe.Just(FirstComeFirstServed.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.FullBallot"===v.value0&&0===v.value1.length?new Data_Maybe.Just(FullBallot.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.AssignGuests",[{sigConstructor:"EmmaMCR.Types.Core.FirstComeFirstServed",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.FullBallot",sigValues:[]}])},function(v){if(v instanceof FirstComeFirstServed)return new Data_Generic.SProd("EmmaMCR.Types.Core.FirstComeFirstServed",[]);if(v instanceof FullBallot)return new Data_Generic.SProd("EmmaMCR.Types.Core.FullBallot",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 42, column 8 - line 42, column 63: "+[v.constructor.name])}),newtypeYear=new Data_Newtype.Newtype(function(n){return n},Year),newtypeTimezone=new Data_Newtype.Newtype(function(n){return n},Timezone),newtypePounds=new Data_Newtype.Newtype(function(n){return n},Pounds),newtypePersonName=new Data_Newtype.Newtype(function(n){return n},PersonName),surname=function(dictStrong){return function($871){return Data_Lens_Iso_Newtype._Newtype(newtypePersonName)(newtypePersonName)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"surname"}))()()(Data_Symbol.SProxy.value)(dictStrong)($871))}},newtypeDietaryRequirement=new Data_Newtype.Newtype(function(n){return n},Diet),newtypeDietMap=new Data_Newtype.Newtype(function(n){return n},DietMap),newtypeCRSid=new Data_Newtype.Newtype(function(n){return n},MakeCRSid),genericGluten=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.Gluten"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Gluten.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Core.NoGluten"===v.value0&&0===v.value1.length?new Data_Maybe.Just(NoGluten.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Core.Gluten",[{sigConstructor:"EmmaMCR.Types.Core.Gluten",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Core.NoGluten",sigValues:[]}])},function(v){if(v instanceof Gluten)return new Data_Generic.SProd("EmmaMCR.Types.Core.Gluten",[]);if(v instanceof NoGluten)return new Data_Generic.SProd("EmmaMCR.Types.Core.NoGluten",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 273, column 8 - line 273, column 48: "+[v.constructor.name])}),genericDietMap=new Data_Generic_Rep.Generic(function(x){return x.unDietMap},function(x){return{unDietMap:x}}),semigroupDietMap=new Data_Semigroup.Semigroup(Data_Generic_Rep_Semigroup.genericAppend(genericDietMap)(Data_Generic_Rep_Semigroup.genericSemigroupConstructor(Data_Generic_Rep_Semigroup.genericSemigroupRec(Data_Generic_Rep_Semigroup.genericSemigroupField(Data_Semigroup.semigroupArray))))),monoidDietMap=new Data_Monoid.Monoid(function(){return semigroupDietMap},Data_Generic_Rep_Monoid.genericMempty(genericDietMap)(Data_Generic_Rep_Monoid.genericMonoidConstructor(Data_Generic_Rep_Monoid.genericMonoidRec(Data_Generic_Rep_Monoid.genericMonoidField(Data_Monoid.monoidArray))))),firstname=function(dictStrong){return function($875){return Data_Lens_Iso_Newtype._Newtype(newtypePersonName)(newtypePersonName)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"firstname"}))()()(Data_Symbol.SProxy.value)(dictStrong)($875))}},showPersonName=new Data_Show.Show(function(pn){return Data_String_Yarn.unwords([Data_Lens_Getter.viewOn(pn)(firstname(Data_Lens_Internal_Forget.strongForget)),Data_Lens_Getter.viewOn(pn)(surname(Data_Lens_Internal_Forget.strongForget))])}),eqYear=new Data_Eq.Eq(function(x){return function(y){return x.unYear===y.unYear}}),ordYear=new Data_Ord.Ord(function(){return eqYear},function(x){return function(y){return Data_Ord.compare(Data_Ord.ordInt)(x.unYear)(y.unYear)}}),eqTimezone=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Intl_DateTimeFormat.eqTimeZone)(x)(y)}}),eqTerm=new Data_Eq.Eq(function(x){return function(y){return x instanceof Michaelmas&&y instanceof Michaelmas||(x instanceof Lent&&y instanceof Lent||(x instanceof Easter&&y instanceof Easter||x instanceof LongVac&&y instanceof LongVac))}}),ordTerm=new Data_Ord.Ord(function(){return eqTerm},function(x){return function(y){if(x instanceof Michaelmas&&y instanceof Michaelmas)return Data_Ordering.EQ.value;if(x instanceof Michaelmas)return Data_Ordering.LT.value;if(y instanceof Michaelmas)return Data_Ordering.GT.value;if(x instanceof Lent&&y instanceof Lent)return Data_Ordering.EQ.value;if(x instanceof Lent)return Data_Ordering.LT.value;if(y instanceof Lent)return Data_Ordering.GT.value;if(x instanceof Easter&&y instanceof Easter)return Data_Ordering.EQ.value;if(x instanceof Easter)return Data_Ordering.LT.value;if(y instanceof Easter)return Data_Ordering.GT.value;if(x instanceof LongVac&&y instanceof LongVac)return Data_Ordering.EQ.value;throw new Error("Failed pattern match at EmmaMCR.Types.Core line 525, column 8 - line 525, column 36: "+[x.constructor.name,y.constructor.name])}}),eqPounds=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Finance_Money.eqDiscrete)(x.pounds)(y.pounds)}}),eqPersonName=new Data_Eq.Eq(function(x){return function(y){return x.firstname===y.firstname&&x.surname===y.surname}}),eqCRSid=new Data_Eq.Eq(function(x){return function(y){return x.unCRSid===y.unCRSid}}),eqUserId=new Data_Eq.Eq(function(x){return function(y){return x instanceof CRSid&&y instanceof CRSid?Data_Eq.eq(eqCRSid)(x.value0)(y.value0):x instanceof UserId&&y instanceof UserId&&x.value0===y.value0}}),ordCRSid=new Data_Ord.Ord(function(){return eqCRSid},function(x){return function(y){return Data_Ord.compare(Data_Ord.ordString)(x.unCRSid)(y.unCRSid)}}),ordUserId=new Data_Ord.Ord(function(){return eqUserId},function(x){return function(y){if(x instanceof CRSid&&y instanceof CRSid)return Data_Ord.compare(ordCRSid)(x.value0)(y.value0);if(x instanceof CRSid)return Data_Ordering.LT.value;if(y instanceof CRSid)return Data_Ordering.GT.value;if(x instanceof UserId&&y instanceof UserId)return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 604, column 8 - line 604, column 40: "+[x.constructor.name,y.constructor.name])}}),eqAssignGuests=new Data_Eq.Eq(function(x){return function(y){return x instanceof FirstComeFirstServed&&y instanceof FirstComeFirstServed||x instanceof FullBallot&&y instanceof FullBallot}}),enumTerm=new Data_Enum.Enum(function(){return ordTerm},function(v){if(v instanceof Michaelmas)return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(LongVac.value);if(v instanceof Lent)return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Michaelmas.value);if(v instanceof Easter)return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Lent.value);if(v instanceof LongVac)return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Easter.value);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 543, column 1 - line 543, column 31: "+[v.constructor.name])},function(v){if(v instanceof Michaelmas)return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Lent.value);if(v instanceof Lent)return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Easter.value);if(v instanceof Easter)return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(LongVac.value);if(v instanceof LongVac)return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Michaelmas.value);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 543, column 1 - line 543, column 31: "+[v.constructor.name])}),_Pounds=function(dictProfunctor){var rev=function($880){return{pounds:Data_Finance_Money.Discrete(Data_Int.round(100*$880))}},fwd=function($881){return Data_Rational.toNumber(Data_Newtype.unwrap(Data_Finance_Money.newtypeDense)(Data_Finance_Money.fromDiscrete(Data_Finance_Currency.currencyGBP)($881.pounds)))};return function($882){return Data_Lens_Iso_Newtype._Newtype(newtypePounds)(newtypePounds)(dictProfunctor)(Data_Lens_Iso.iso(fwd)(rev)(dictProfunctor)($882))}},oldGenericPounds=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SNumber?Data_Maybe.Just.create(Data_Lens_Prism.review(_Pounds(Data_Lens_Internal_Tagged.taggedProfunctor))(v.value0)):Data_Maybe.Nothing.value},function(v){return Data_Generic.SigNumber.value},function($883){return Data_Generic.SNumber.create(Data_Lens_Getter.view(_Pounds(Data_Lens_Internal_Forget.profunctorForget))($883))}),semigroupPounds=new Data_Semigroup.Semigroup(function(x){return function(y){return Data_Lens_Prism.review(_Pounds(Data_Lens_Internal_Tagged.taggedProfunctor))(Data_Lens_Getter.view(_Pounds(Data_Lens_Internal_Forget.profunctorForget))(x)+Data_Lens_Getter.view(_Pounds(Data_Lens_Internal_Forget.profunctorForget))(y))}}),monoidPounds=new Data_Monoid.Monoid(function(){return semigroupPounds},Data_Lens_Prism.review(_Pounds(Data_Lens_Internal_Tagged.taggedProfunctor))(0)),_MakeCRSid=function(dictProfunctor){return function($884){return Data_Lens_Iso_Newtype._Newtype(newtypeCRSid)(newtypeCRSid)(dictProfunctor)(Data_Lens_Iso.iso(function(v){return v.unCRSid})(function(v){return{unCRSid:v}})(dictProfunctor)($884))}},showCRSid=new Data_Show.Show(Data_Lens_Getter.view(_MakeCRSid(Data_Lens_Internal_Forget.profunctorForget))),_DietKey=function(dictChoice){return Data_Lens_Prism["prism'"](Data_Binary_UnsignedInt.toInt(Data_Typelevel_Num_Sets.posD5)(Data_Typelevel_Num_Ops.trichLt(Data_Typelevel_Num_Ops.trichD5Dxx(Data_Typelevel_Num_Sets.posPosD2(Data_Typelevel_Num_Sets.posD3)))))(function($886){return Data_Binary_UnsignedInt.tryAsBits(Data_Typelevel_Num_Sets.posPosD1(Data_Typelevel_Num_Sets.posD3))(Data_Typelevel_Num_Sets.posD5)(Data_Typelevel_Num_Ops.trichGt(Data_Typelevel_Num_Ops.trichDxxD5(Data_Typelevel_Num_Sets.posPosD1(Data_Typelevel_Num_Sets.posD3))))(Data_Binary_UnsignedInt.fromInt(Data_Typelevel_Num_Sets.posPosD1(Data_Typelevel_Num_Sets.posD3))(Data_Typelevel_Num_Ops.trichGtEq(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posPosD2(Data_Typelevel_Num_Sets.posD3))(Data_Typelevel_Num_Ops.isZeroPos(Data_Typelevel_Num_Sets.posD3))(Data_Typelevel_Num_Ops.divMod10D3x(Data_Typelevel_Num_Sets.posNatD1(Data_Typelevel_Num_Sets.posD3)))(Data_Typelevel_Num_Ops.succPxiD1xiD2)(Data_Typelevel_Num_Ops.divMod10D3x(Data_Typelevel_Num_Sets.posNatD2(Data_Typelevel_Num_Sets.posD3))))(Data_Typelevel_Num_Ops.trichDxxDxx(Data_Typelevel_Num_Sets.posPosD2(Data_Typelevel_Num_Sets.posD3))(Data_Typelevel_Num_Sets.posPosD1(Data_Typelevel_Num_Sets.posD3))(Data_Typelevel_Num_Ops.trichD2D1)(Data_Typelevel_Num_Ops.trichD3D3)(Data_Typelevel_Num_Ops.csEQrr)))(Data_Typelevel_Num_Aliases.d31)($886))})(dictChoice)},oldgenericDietRef=new Data_Generic.Generic(function(v){var v1=function(v2){return Data_Maybe.Nothing.value};if(v instanceof Data_Generic.SRecord&&4===v.value0.length&&"diet"===v.value0[0].recLabel&&"wine"===v.value0[1].recLabel&&"nuts"===v.value0[2].recLabel&&"gluten"===v.value0[3].recLabel){var $834=new Data_Tuple.Tuple(v.value0[0].recValue(Data_Unit.unit),new Data_Tuple.Tuple(Data_Generic.fromSpine(oldgenericWine)(v.value0[1].recValue(Data_Unit.unit)),new Data_Tuple.Tuple(Data_Generic.fromSpine(oldgenericNuts)(v.value0[2].recValue(Data_Unit.unit)),Data_Generic.fromSpine(genericGluten)(v.value0[3].recValue(Data_Unit.unit)))));return $834.value0 instanceof Data_Generic.SInt&&$834.value1.value0 instanceof Data_Maybe.Just&&$834.value1.value1.value0 instanceof Data_Maybe.Just&&$834.value1.value1.value1 instanceof Data_Maybe.Just?Data_Functor.map(Data_Maybe.functorMaybe)(function($887){return Diet({diet:$887,wine:$834.value1.value0.value0,nuts:$834.value1.value1.value0.value0,gluten:$834.value1.value1.value1.value0})})(Data_Lens_Fold.previewOn($834.value0.value0)(_DietKey(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)))):v1()}return v1()},function(v){return new Data_Generic.SigRecord([{recLabel:"diet",recValue:function(v1){return Data_Generic.SigInt.value}},{recLabel:"wine",recValue:function(v1){return Data_Generic.toSignature(oldgenericWine)(Type_Proxy.Proxy.value)}},{recLabel:"nuts",recValue:function(v1){return Data_Generic.toSignature(oldgenericNuts)(Type_Proxy.Proxy.value)}},{recLabel:"gluten",recValue:function(v1){return Data_Generic.toSignature(genericGluten)(Type_Proxy.Proxy.value)}}])},function(v){return new Data_Generic.SRecord([{recLabel:"diet",recValue:function(v1){return Data_Generic.SInt.create(Data_Lens_Getter.viewOn(v.diet)(Data_Lens_Iso.re(_DietKey(Data_Lens_Internal_Re.cochoiceRe(Data_Lens_Internal_Forget.cochoiceForget)))))}},{recLabel:"wine",recValue:function(v1){return Data_Generic.toSpine(oldgenericWine)(v.wine)}},{recLabel:"nuts",recValue:function(v1){return Data_Generic.toSpine(oldgenericNuts)(v.nuts)}},{recLabel:"gluten",recValue:function(v1){return Data_Generic.toSpine(genericGluten)(v.gluten)}}])});exports.FirstComeFirstServed=FirstComeFirstServed,exports.FullBallot=FullBallot,exports.MCRMember=MCRMember,exports.Affiliate=Affiliate,exports.Associate=Associate,exports.Guest=Guest,exports.MakeCRSid=MakeCRSid,exports._MakeCRSid=_MakeCRSid,exports.Email=Email,exports.Phone=Phone,exports.Department=Department,exports.Supervisor=Supervisor,exports.URL=URL,exports._Email=function(dictChoice){return Data_Lens_Prism["prism'"](Email.create)(function(v){return v instanceof Email?Data_Maybe.Just.create(v.value0):Data_Maybe.Nothing.value})(dictChoice)},exports.DietMap=DietMap,exports._DietMap=function(dictProfunctor){return function($885){return Data_Lens_Iso_Newtype._Newtype(newtypeDietMap)(newtypeDietMap)(dictProfunctor)(Data_Lens_Iso.iso(function(v){return v.unDietMap})(function(v){return{unDietMap:v}})(dictProfunctor)($885))}},exports.Diet=Diet,exports._DietKey=_DietKey,exports.diet=function(dictStrong){return function($877){return Data_Lens_Iso_Newtype._Newtype(newtypeDietaryRequirement)(newtypeDietaryRequirement)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"diet"}))()()(Data_Symbol.SProxy.value)(dictStrong)($877))}},exports.wine=function(dictStrong){return function($873){return Data_Lens_Iso_Newtype._Newtype(newtypeDietaryRequirement)(newtypeDietaryRequirement)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"wine"}))()()(Data_Symbol.SProxy.value)(dictStrong)($873))}},exports.nuts=function(dictStrong){return function($872){return Data_Lens_Iso_Newtype._Newtype(newtypeDietaryRequirement)(newtypeDietaryRequirement)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"nuts"}))()()(Data_Symbol.SProxy.value)(dictStrong)($872))}},exports.gluten=function(dictStrong){return function($874){return Data_Lens_Iso_Newtype._Newtype(newtypeDietaryRequirement)(newtypeDietaryRequirement)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"gluten"}))()()(Data_Symbol.SProxy.value)(dictStrong)($874))}},exports.Gluten=Gluten,exports.NoGluten=NoGluten,exports.glutenFree=function(dictProfunctor){return Data_Lens_Iso.iso(function(v){if(v instanceof Gluten)return!1;if(v instanceof NoGluten)return!0;throw new Error("Failed pattern match at EmmaMCR.Types.Core line 280, column 5 - line 280, column 23: "+[v.constructor.name])})(function(v){if(!v)return Gluten.value;if(v)return NoGluten.value;throw new Error("Failed pattern match at EmmaMCR.Types.Core line 283, column 5 - line 283, column 23: "+[v.constructor.name])})(dictProfunctor)},exports.IsMember=IsMember,exports.IsAffiliate=IsAffiliate,exports.IsAssociate=IsAssociate,exports.IsAlum=IsAlum,exports.Nuts=Nuts,exports.NoNuts=NoNuts,exports.nutFree=function(dictProfunctor){return Data_Lens_Iso.iso(function(v){if(v instanceof Nuts)return!1;if(v instanceof NoNuts)return!0;throw new Error("Failed pattern match at EmmaMCR.Types.Core line 353, column 5 - line 353, column 21: "+[v.constructor.name])})(function(v){if(!v)return Nuts.value;if(v)return NoNuts.value;throw new Error("Failed pattern match at EmmaMCR.Types.Core line 356, column 5 - line 356, column 21: "+[v.constructor.name])})(dictProfunctor)},exports.PersonName=PersonName,exports.firstname=firstname,exports.surname=surname,exports.displayPersonName=function(pn){return Data_String_Yarn.unwords([Data_Lens_Getter.viewOn(pn)(firstname(Data_Lens_Internal_Forget.strongForget)),Data_Lens_Getter.viewOn(pn)(surname(Data_Lens_Internal_Forget.strongForget))])},exports.Pounds=Pounds,exports._Pounds=_Pounds,exports.displayPounds=function($876){return Data_Finance_Money.formatDiscrete(Data_Finance_Currency.currencyGBP)(poundFormat)(Data_Newtype.unwrap(newtypePounds)($876).pounds)},exports.poundFormat=poundFormat,exports.EverybodyCanRead=EverybodyCanRead,exports.MCRCanRead=MCRCanRead,exports.CommitteeCanRead=CommitteeCanRead,exports.OnlyFromDatabase=OnlyFromDatabase,exports.JustMe=JustMe,exports.Michaelmas=Michaelmas,exports.Lent=Lent,exports.Easter=Easter,exports.LongVac=LongVac,exports.Timezone=Timezone,exports._Timezone=function(dictProfunctor){return Data_Lens_Iso_Newtype._Newtype(newtypeTimezone)(newtypeTimezone)(dictProfunctor)},exports.CRSid=CRSid,exports.UserId=UserId,exports._CRSid=function(dictChoice){return Data_Lens_Prism["prism'"](CRSid.create)(function(v){return v instanceof CRSid?Data_Maybe.Just.create(v.value0):Data_Maybe.Nothing.value})(dictChoice)},exports.foldUserId=function(v){return function(v1){return function(v2){if(v2 instanceof CRSid)return v(v2.value0);if(v2 instanceof UserId)return v1(v2.value0);throw new Error("Failed pattern match at EmmaMCR.Types.Core line 623, column 1 - line 623, column 70: "+[v.constructor.name,v1.constructor.name,v2.constructor.name])}}},exports.Wine=Wine,exports.NoWine=NoWine,exports.withWine=function(dictProfunctor){return Data_Lens_Iso.iso(function(v){if(v instanceof Wine)return!0;if(v instanceof NoWine)return!1;throw new Error("Failed pattern match at EmmaMCR.Types.Core line 642, column 5 - line 642, column 20: "+[v.constructor.name])})(function(v){if(v)return Wine.value;if(!v)return NoWine.value;throw new Error("Failed pattern match at EmmaMCR.Types.Core line 645, column 5 - line 645, column 20: "+[v.constructor.name])})(dictProfunctor)},exports.Year=Year,exports._Year=function(dictProfunctor){return function($878){return Data_Lens_Iso_Newtype._Newtype(newtypeYear)(newtypeYear)(dictProfunctor)(Data_Lens_Iso.iso(function(v){return v.unYear})(function(v){return{unYear:v}})(dictProfunctor)($878))}},exports.eqAssignGuests=eqAssignGuests,exports.oldGenericAssignGuests=oldGenericAssignGuests,exports.oldgenericAttendee=oldgenericAttendee,exports.eqCRSid=eqCRSid,exports.ordCRSid=ordCRSid,exports.oldgenericCRSid=oldgenericCRSid,exports.newtypeCRSid=newtypeCRSid,exports.showCRSid=showCRSid,exports.oldgenericContact=oldgenericContact,exports.genericDietMap=genericDietMap,exports.newtypeDietMap=newtypeDietMap,exports.semigroupDietMap=semigroupDietMap,exports.monoidDietMap=monoidDietMap,exports.newtypeDietaryRequirement=newtypeDietaryRequirement,exports.oldgenericDietRef=oldgenericDietRef,exports.genericGluten=genericGluten,exports.oldgenericMembership=oldgenericMembership,exports.oldgenericNuts=oldgenericNuts,exports.eqPersonName=eqPersonName,exports.oldGenericPersonName=oldGenericPersonName,exports.newtypePersonName=newtypePersonName,exports.showPersonName=showPersonName,exports.eqPounds=eqPounds,exports.oldGenericPounds=oldGenericPounds,exports.newtypePounds=newtypePounds,exports.semigroupPounds=semigroupPounds,exports.monoidPounds=monoidPounds,exports.oldgenericReadAccess=oldgenericReadAccess,exports.eqTerm=eqTerm,exports.ordTerm=ordTerm,exports.oldGenericTerm=oldGenericTerm,exports.showTerm=showTerm,exports.enumTerm=enumTerm,exports.eqTimezone=eqTimezone,exports.newtypeTimezone=newtypeTimezone,exports.oldgenericTimezone=oldgenericTimezone,exports.eqUserId=eqUserId,exports.ordUserId=ordUserId,exports.oldGenericUserId=oldGenericUserId,exports.oldgenericWine=oldgenericWine,exports.eqYear=eqYear,exports.ordYear=ordYear,exports.newtypeYear=newtypeYear,exports.oldGenericYear=oldGenericYear}(PS["EmmaMCR.Types.Core"]=PS["EmmaMCR.Types.Core"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_Eq=(PS["Control.Semigroupoid"],PS["Data.Eq"]),Data_Generic=(PS["Data.Function"],PS["Data.Generic"]),Data_Lens_Iso_Newtype=(PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"],PS["Data.Lens"],PS["Data.Lens.Iso.Newtype"]),Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Lens_Record=PS["Data.Lens.Record"],Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Symbol=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Show"],PS["Data.Symbol"]),Data_Time_Duration=PS["Data.Time.Duration"],Data_Unit=PS["Data.Unit"],EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],ExMember=(PS.Prelude,function(){function ExMember(){}return ExMember.value=new ExMember,ExMember}()),AnyMember=function(){function AnyMember(){}return AnyMember.value=new AnyMember,AnyMember}(),FullMember=function(){function FullMember(){}return FullMember.value=new FullMember,FullMember}(),RetiredCommittee=function(){function RetiredCommittee(){}return RetiredCommittee.value=new RetiredCommittee,RetiredCommittee}(),CurrentCommittee=function(){function CurrentCommittee(){}return CurrentCommittee.value=new CurrentCommittee,CurrentCommittee}(),Treasurer=function(){function Treasurer(){}return Treasurer.value=new Treasurer,Treasurer}(),President=function(){function President(){}return President.value=new President,President}(),ComputerOfficer=function(){function ComputerOfficer(){}return ComputerOfficer.value=new ComputerOfficer,ComputerOfficer}(),MakeOrigin=function(x){return x},MakeMCRUser=function(x){return x},oldGenericUserAuth=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Auth.ExMember"===v.value0&&0===v.value1.length?new Data_Maybe.Just(ExMember.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Auth.AnyMember"===v.value0&&0===v.value1.length?new Data_Maybe.Just(AnyMember.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Auth.FullMember"===v.value0&&0===v.value1.length?new Data_Maybe.Just(FullMember.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Auth.RetiredCommittee"===v.value0&&0===v.value1.length?new Data_Maybe.Just(RetiredCommittee.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Auth.CurrentCommittee"===v.value0&&0===v.value1.length?new Data_Maybe.Just(CurrentCommittee.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Auth.Treasurer"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Treasurer.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Auth.President"===v.value0&&0===v.value1.length?new Data_Maybe.Just(President.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Auth.ComputerOfficer"===v.value0&&0===v.value1.length?new Data_Maybe.Just(ComputerOfficer.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Auth.UserAuth",[{sigConstructor:"EmmaMCR.Types.Auth.ExMember",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Auth.AnyMember",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Auth.FullMember",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Auth.RetiredCommittee",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Auth.CurrentCommittee",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Auth.Treasurer",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Auth.President",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Auth.ComputerOfficer",sigValues:[]}])},function(v){if(v instanceof ExMember)return new Data_Generic.SProd("EmmaMCR.Types.Auth.ExMember",[]);if(v instanceof AnyMember)return new Data_Generic.SProd("EmmaMCR.Types.Auth.AnyMember",[]);if(v instanceof FullMember)return new Data_Generic.SProd("EmmaMCR.Types.Auth.FullMember",[]);if(v instanceof RetiredCommittee)return new Data_Generic.SProd("EmmaMCR.Types.Auth.RetiredCommittee",[]);if(v instanceof CurrentCommittee)return new Data_Generic.SProd("EmmaMCR.Types.Auth.CurrentCommittee",[]);if(v instanceof Treasurer)return new Data_Generic.SProd("EmmaMCR.Types.Auth.Treasurer",[]);if(v instanceof President)return new Data_Generic.SProd("EmmaMCR.Types.Auth.President",[]);if(v instanceof ComputerOfficer)return new Data_Generic.SProd("EmmaMCR.Types.Auth.ComputerOfficer",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Auth line 95, column 8 - line 95, column 55: "+[v.constructor.name])}),oldGenericOrigin=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SString?Data_Maybe.Just.create(MakeOrigin({unOrigin:v.value0})):Data_Maybe.Nothing.value},function(v){return Data_Generic.SigString.value},function(v){return new Data_Generic.SString(v.unOrigin)}),oldGenericMCRUser=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Auth.MakeMCRUser"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(MakeMCRUser))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&6===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(clientOrigin2){return function(exp2){return function(iat2){return function(userAuths2){return function(userId2){return function(userName2){return{clientOrigin:clientOrigin2,exp:exp2,iat:iat2,userAuths:userAuths2,userId:userId2,userName:userName2}}}}}}}))(Data_Generic.fromSpine(Data_Generic.genericMaybe(oldGenericOrigin))(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Duration.genericSeconds)(r.value0[1].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Duration.genericSeconds)(r.value0[2].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericArray(oldGenericUserAuth))(r.value0[3].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldGenericUserId)(r.value0[4].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)(r.value0[5].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Auth.MCRUser",[{sigConstructor:"EmmaMCR.Types.Auth.MakeMCRUser",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"clientOrigin",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericMaybe(oldGenericOrigin))(Data_Generic.anyProxy)}},{recLabel:"exp",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Time_Duration.genericSeconds)(Data_Generic.anyProxy)}},{recLabel:"iat",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Time_Duration.genericSeconds)(Data_Generic.anyProxy)}},{recLabel:"userAuths",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericArray(oldGenericUserAuth))(Data_Generic.anyProxy)}},{recLabel:"userId",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldGenericUserId)(Data_Generic.anyProxy)}},{recLabel:"userName",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Auth.MakeMCRUser",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"clientOrigin",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericMaybe(oldGenericOrigin))(v.clientOrigin)}},{recLabel:"exp",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Time_Duration.genericSeconds)(v.exp)}},{recLabel:"iat",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Time_Duration.genericSeconds)(v.iat)}},{recLabel:"userAuths",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericArray(oldGenericUserAuth))(v.userAuths)}},{recLabel:"userId",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldGenericUserId)(v.userId)}},{recLabel:"userName",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericString)(v.userName)}}])}])}),newtypeMCRUser=new Data_Newtype.Newtype(function(n){return n},MakeMCRUser),eqUserAuth=new Data_Eq.Eq(function(x){return function(y){return x instanceof ExMember&&y instanceof ExMember||(x instanceof AnyMember&&y instanceof AnyMember||(x instanceof FullMember&&y instanceof FullMember||(x instanceof RetiredCommittee&&y instanceof RetiredCommittee||(x instanceof CurrentCommittee&&y instanceof CurrentCommittee||(x instanceof Treasurer&&y instanceof Treasurer||(x instanceof President&&y instanceof President||x instanceof ComputerOfficer&&y instanceof ComputerOfficer))))))}}),eqOrigin=new Data_Eq.Eq(function(x){return function(y){return x.unOrigin===y.unOrigin}}),eqMCRUser=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Maybe.eqMaybe(eqOrigin))(x.clientOrigin)(y.clientOrigin)&&Data_Eq.eq(Data_Time_Duration.eqSeconds)(x.exp)(y.exp)&&Data_Eq.eq(Data_Time_Duration.eqSeconds)(x.iat)(y.iat)&&Data_Eq.eq(Data_Eq.eqArray(eqUserAuth))(x.userAuths)(y.userAuths)&&Data_Eq.eq(EmmaMCR_Types_Core.eqUserId)(x.userId)(y.userId)&&x.userName===y.userName}});exports.MakeMCRUser=MakeMCRUser,exports.userId=function(dictStrong){return function($205){return Data_Lens_Iso_Newtype._Newtype(newtypeMCRUser)(newtypeMCRUser)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"userId"}))()()(Data_Symbol.SProxy.value)(dictStrong)($205))}},exports.userName=function(dictStrong){return function($206){return Data_Lens_Iso_Newtype._Newtype(newtypeMCRUser)(newtypeMCRUser)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"userName"}))()()(Data_Symbol.SProxy.value)(dictStrong)($206))}},exports.userAuths=function(dictStrong){return function($204){return Data_Lens_Iso_Newtype._Newtype(newtypeMCRUser)(newtypeMCRUser)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"userAuths"}))()()(Data_Symbol.SProxy.value)(dictStrong)($204))}},exports.clientOrigin=function(dictStrong){return function($209){return Data_Lens_Iso_Newtype._Newtype(newtypeMCRUser)(newtypeMCRUser)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"clientOrigin"}))()()(Data_Symbol.SProxy.value)(dictStrong)($209))}},exports.iat=function(dictStrong){return function($207){return Data_Lens_Iso_Newtype._Newtype(newtypeMCRUser)(newtypeMCRUser)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"iat"}))()()(Data_Symbol.SProxy.value)(dictStrong)($207))}},exports.exp=function(dictStrong){return function($208){return Data_Lens_Iso_Newtype._Newtype(newtypeMCRUser)(newtypeMCRUser)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"exp"}))()()(Data_Symbol.SProxy.value)(dictStrong)($208))}},exports.MakeOrigin=MakeOrigin,exports.ExMember=ExMember,exports.AnyMember=AnyMember,exports.FullMember=FullMember,exports.RetiredCommittee=RetiredCommittee,exports.CurrentCommittee=CurrentCommittee,exports.Treasurer=Treasurer,exports.President=President,exports.ComputerOfficer=ComputerOfficer,exports._FullMember=function(dictChoice){return Data_Lens_Prism["prism'"](function(v){return FullMember.value})(function(v){return v instanceof FullMember?new Data_Maybe.Just(Data_Unit.unit):Data_Maybe.Nothing.value})(dictChoice)},exports._CurrentCommittee=function(dictChoice){return Data_Lens_Prism["prism'"](function(v){return CurrentCommittee.value})(function(v){return v instanceof CurrentCommittee?new Data_Maybe.Just(Data_Unit.unit):Data_Maybe.Nothing.value})(dictChoice)},exports.eqMCRUser=eqMCRUser,exports.oldGenericMCRUser=oldGenericMCRUser,exports.newtypeMCRUser=newtypeMCRUser,exports.eqOrigin=eqOrigin,exports.oldGenericOrigin=oldGenericOrigin,exports.eqUserAuth=eqUserAuth,exports.oldGenericUserAuth=oldGenericUserAuth}(PS["EmmaMCR.Types.Auth"]=PS["EmmaMCR.Types.Auth"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad_State_Trans=PS["Control.Monad.State.Trans"],Data_Bifunctor=(PS["Control.Semigroupoid"],PS["Data.Bifunctor"]),Data_Bounded=PS["Data.Bounded"],Data_Date_Component=(PS["Data.Date"],PS["Data.Date.Component"]),Data_DateTime=PS["Data.DateTime"],Data_DateTime_Locale=PS["Data.DateTime.Locale"],Data_Either=PS["Data.Either"],Data_Enum=PS["Data.Enum"],Data_Foldable=(PS["Data.EuclideanRing"],PS["Data.Foldable"]),Data_Formatter_DateTime=PS["Data.Formatter.DateTime"],Data_Formatter_Number=PS["Data.Formatter.Number"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Identity=PS["Data.Identity"],Data_Int=PS["Data.Int"],Data_Intl_DateTimeFormat=PS["Data.Intl.DateTimeFormat"],Data_Lens_Getter=(PS["Data.Lens"],PS["Data.Lens.Getter"]),Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Tagged=PS["Data.Lens.Internal.Tagged"],Data_Lens_Lens=PS["Data.Lens.Lens"],Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Lens_Record=(PS["Data.Lens.Prism.Maybe"],PS["Data.Lens.Record"]),Data_Lens_Setter=PS["Data.Lens.Setter"],Data_List_Types=(PS["Data.List"],PS["Data.List.Types"]),Data_Maybe=PS["Data.Maybe"],Data_Monoid=(PS["Data.Maybe.First"],PS["Data.Monoid"]),Data_Newtype=PS["Data.Newtype"],Data_Num=PS["Data.Num"],Data_Ord=PS["Data.Ord"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Ring=PS["Data.Ring"],Data_Semiring=PS["Data.Semiring"],Data_String=PS["Data.String"],Data_String_Yarn=PS["Data.String.Yarn"],Data_Symbol=PS["Data.Symbol"],Data_Time=PS["Data.Time"],Data_Time_Duration=PS["Data.Time.Duration"],Data_Unfoldable=PS["Data.Unfoldable"],Forestay=PS.Forestay,$$Math=PS.Math,Text_Parsing_StringParser=(PS.Prelude,PS["Text.Parsing.StringParser"]),Text_Parsing_StringParser_Combinators=PS["Text.Parsing.StringParser.Combinators"],Text_Parsing_StringParser_String=PS["Text.Parsing.StringParser.String"],unformatLDT$prime=function(la){return function(v){return function(fr){return function(s){return Data_Either.note(s)(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_DateTime.adjust(Data_Time_Duration.durationMinutes)(Data_Ring.sub(Data_Time_Duration.ringMinutes)(Data_Semiring.zero(Data_Time_Duration.semiringMinutes))(v.value0.value1))(v.value1))(function(v1){return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Data_Functor.map(Data_Either.functorEither)(Data_Lens_Getter.view(la(Data_Lens_Internal_Forget.strongForget)))(Data_Formatter_DateTime.unformat(fr)(s))))(function(v2){var ldt=Forestay["execState'"](v1)(Data_Lens_Setter.assign(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(la(Data_Profunctor_Strong.strongFn))(v2));return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_DateTime.adjust(Data_Time_Duration.durationMinutes)(v.value0.value1)(ldt))(function(v3){return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Functor.map(Data_DateTime_Locale.functorLocalValue)(Data_Function.const(v3))(v))})})}))}}}},timeL=function(dictStrong){return Data_Lens_Lens.lens(Data_DateTime.time)(Data_Function.flip(function($70){return Data_DateTime.modifyTime(Data_Function.const($70))}))(dictStrong)},unformatLT=unformatLDT$prime(function(dictStrong){return timeL(dictStrong)}),timeInputFormat=new Data_List_Types.Cons(Data_Formatter_DateTime.Hours24.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(":"),new Data_List_Types.Cons(Data_Formatter_DateTime.MinutesTwoDigits.value,Data_List_Types.Nil.value))),timeFormat=new Data_List_Types.Cons(Data_Formatter_DateTime.Hours24.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(" "),new Data_List_Types.Cons(Data_Formatter_DateTime.MinutesTwoDigits.value,Data_List_Types.Nil.value))),parseFixedInt=function(n){return digits=Data_Unfoldable.replicateA(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.unfoldableList)(Data_List_Types.traversableList)(n)(Text_Parsing_StringParser_String.anyDigit),sign=Text_Parsing_StringParser_Combinators.optionMaybe(Text_Parsing_StringParser_String.oneOf(Data_Foldable.foldableArray)(["-","+"])),Control_Bind.composeKleisliFlipped(Text_Parsing_StringParser.bindParser)(Data_Maybe["maybe'"](function(v){return Text_Parsing_StringParser.fail("Not a number")})(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(function($72){return Data_Int.fromString(Data_String_Yarn.fromChars(Data_List_Types.foldableList)($72))}))(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.maybe(Control_Category.id(Control_Category.categoryFn))(Data_List_Types.Cons.create))(sign))(digits));var digits,sign},parseTZOffset=Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.choice(Data_Foldable.foldableArray)([Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.char("-"))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Semiring.add(Data_Time_Duration.semiringMinutes))),Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.char("+"))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Ring.sub(Data_Time_Duration.ringMinutes)))]))(function(v){return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(function($73){return Data_Time_Duration.Hours(Data_Int.toNumber($73))})(parseFixedInt(2)))(function(v1){return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.char(":"))(function(v2){return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(function($74){return Data_Time_Duration.Minutes(Data_Int.toNumber($74))})(parseFixedInt(2)))(function(v3){return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v(0)(Data_Semiring.add(Data_Time_Duration.semiringMinutes)(Data_Time_Duration.convertDuration(Data_Time_Duration.durationHours)(Data_Time_Duration.durationMinutes)(v1))(v3)))})})})}),iso8601Format=new Data_List_Types.Cons(Data_Formatter_DateTime.YearFull.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder("-"),new Data_List_Types.Cons(Data_Formatter_DateTime.MonthTwoDigits.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder("-"),new Data_List_Types.Cons(Data_Formatter_DateTime.DayOfMonthTwoDigits.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder("T"),new Data_List_Types.Cons(Data_Formatter_DateTime.Hours24.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(":"),new Data_List_Types.Cons(Data_Formatter_DateTime.MinutesTwoDigits.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(":"),new Data_List_Types.Cons(Data_Formatter_DateTime.SecondsTwoDigits.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder("Z"),Data_List_Types.Nil.value)))))))))))),formatZ=function(v){return function(fr){return function(dt){return Data_Either.note(dt)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Formatter_DateTime.format(fr))(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Text_Parsing_StringParser.runParser(parseTZOffset)(v)))(function(v1){return Data_DateTime.adjust(Data_Time_Duration.durationMinutes)(Data_Ring.sub(Data_Time_Duration.ringMinutes)(Data_Semiring.zero(Data_Time_Duration.semiringMinutes))(v1))(dt)})))}}},displayMinutes=function(m){var v=function(m){var sign=Data_Ord.lessThan(Data_Time_Duration.ordMinutes)(m)(0)?"+":"-",mins=Data_Newtype.over(Data_Time_Duration.newtypeMinutes)(Data_Time_Duration.newtypeMinutes)(Data_Time_Duration.Minutes)(function($71){return Data_Int.toNumber(Data_Int.floor(Data_Num.abs(Data_Num.numNumber)($71))%60)})(m),hFromM=Data_Time_Duration.convertDuration(Data_Time_Duration.durationMinutes)(Data_Time_Duration.durationHours);return{sign:sign,hrs:Data_Newtype.over(Data_Time_Duration.newtypeHours)(Data_Time_Duration.newtypeHours)(Data_Time_Duration.Hours)($$Math.trunc)(hFromM(m)),mins:mins}}(m),stripMinus=Data_String.replace("-")(""),fmt={abbreviations:!1,after:0,before:2,comma:!1,sign:!1};return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([v.sign,stripMinus(Data_Formatter_Number.format(fmt)(Data_Newtype.unwrap(Data_Time_Duration.newtypeHours)(v.hrs))),":",Data_Formatter_Number.format(fmt)(Data_Newtype.unwrap(Data_Time_Duration.newtypeMinutes)(v.mins))])},localized=function(dictChoice){return Data_Lens_Prism["prism'"](function(v){return{dateTime:v.value1,timeZone:displayMinutes(v.value0.value1)}})(function(v){return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Text_Parsing_StringParser.runParser(parseTZOffset)(Data_Newtype.unwrap(Data_Intl_DateTimeFormat.newtypeTimeZone)(v.timeZone))))(function(v1){return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_DateTime_Locale.LocalValue(new Data_DateTime_Locale.Locale(Data_Maybe.Nothing.value,v1),v.dateTime))})})(dictChoice)},dateL=function(dictStrong){return Data_Lens_Lens.lens(Data_DateTime.date)(Data_Function.flip(function($76){return Data_DateTime.modifyDate(Data_Function.const($76))}))(dictStrong)},unformatLD=unformatLDT$prime(function(dictStrong){return dateL(dictStrong)}),dateFormat=new Data_List_Types.Cons(Data_Formatter_DateTime.YearFull.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder("-"),new Data_List_Types.Cons(Data_Formatter_DateTime.MonthTwoDigits.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder("-"),new Data_List_Types.Cons(Data_Formatter_DateTime.DayOfMonthTwoDigits.value,Data_List_Types.Nil.value))))),dateDisplayFormat=new Data_List_Types.Cons(Data_Formatter_DateTime.DayOfMonth.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(" "),new Data_List_Types.Cons(Data_Formatter_DateTime.MonthFull.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(" "),new Data_List_Types.Cons(Data_Formatter_DateTime.YearFull.value,Data_List_Types.Nil.value))))),dateFullFormat=new Data_List_Types.Cons(Data_Formatter_DateTime.DayOfWeekName.value,new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(" "),dateDisplayFormat));exports.dateFormat=dateFormat,exports.timeFormat=timeFormat,exports.timeInputFormat=timeInputFormat,exports.dateFullFormat=dateFullFormat,exports.dateDisplayFormat=dateDisplayFormat,exports.iso8601Format=iso8601Format,exports.formatZ=formatZ,exports.formatLDT=function(fr){return function(ldt){var v=Data_Lens_Prism.review(localized(Data_Lens_Internal_Tagged.taggedChoice))(ldt);return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Function.const(ldt))(formatZ(v.timeZone)(fr)(v.dateTime))}},exports.unformatLT=unformatLT,exports.unformatLD=unformatLD,exports.dateTime=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"dateTime"}))()()(Data_Symbol.SProxy.value)(dictStrong)},exports.timeZone=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"timeZone"}))()()(Data_Symbol.SProxy.value)(dictStrong)},exports.timeL=timeL,exports.dateL=dateL,exports.formatDate=function(f){return function($75){return Data_Formatter_DateTime.format(f)(Data_Function.flip(Data_DateTime.DateTime.create)(Data_Bounded.bottom(Data_Time.boundedTime))($75))}},exports.adjustDate=function(dictDuration){return function(d){return function($77){return Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.date)(Data_DateTime.adjust(dictDuration)(d)(Data_Function.flip(Data_DateTime.DateTime.create)(Data_Bounded.bottom(Data_Time.boundedTime))($77)))}}},exports.adjustMonthYear=function(n){return function(i){var changed=Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(i.month)+n|0;return{month:Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(12-Forestay.intMod(12-changed|0)(12)|0),year:Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(i.year)+Forestay.intDiv(changed-1|0)(12)|0)}}},exports.localValue=function(dictStrong){return Forestay.extracted(Data_DateTime_Locale.comonadLocalValue)(dictStrong)},exports.parseTZOffset=parseTZOffset,exports.parseFixedInt=parseFixedInt,exports.displayMinutes=displayMinutes,exports.localized=localized}(PS["Extra.DateTime"]=PS["Extra.DateTime"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_DateTime=(PS["Control.Semigroupoid"],PS["Data.DateTime"]),Data_Either=(PS["Data.DateTime.Locale"],PS["Data.Either"]),Data_Eq=PS["Data.Eq"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_Generic_Rep=PS["Data.Generic.Rep"],Data_Generic_Rep_Monoid=PS["Data.Generic.Rep.Monoid"],Data_Generic_Rep_Semigroup=PS["Data.Generic.Rep.Semigroup"],Data_Integral=(PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"],PS["Data.Integral"]),Data_Lens_Getter=(PS["Data.Lens"],PS["Data.Lens.Getter"]),Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Tagged=PS["Data.Lens.Internal.Tagged"],Data_Lens_Internal_Wander=PS["Data.Lens.Internal.Wander"],Data_Lens_Iso=PS["Data.Lens.Iso"],Data_Lens_Iso_Newtype=PS["Data.Lens.Iso.Newtype"],Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Lens_Record=PS["Data.Lens.Record"],Data_Maybe=PS["Data.Maybe"],Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Ord=PS["Data.Ord"],Data_Semigroup=(PS["Data.Ordering"],PS["Data.Semigroup"]),Data_Symbol=(PS["Data.Show"],PS["Data.Symbol"]),Data_Tuple=PS["Data.Tuple"],Data_Unit=PS["Data.Unit"],Data_Word=PS["Data.Word"],EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],Extra_DateTime=PS["Extra.DateTime"],DinnerPrices=(PS.Prelude,function(x){return x}),DinnerMax=function(x){return x},DinnerSignup=function(x){return x},MakeDinnerId=function(x){return x},DinnerMeta=function(x){return x},DinnerDetails=function(x){return x},Dinner=function(x){return x},oldgenericDinnerMax=new Data_Generic.Generic(function(v){var v1=function(v2){return Data_Maybe.Nothing.value};if(v instanceof Data_Generic.SRecord&&2===v.value0.length&&"_maxAttendees"===v.value0[0].recLabel&&"_maxGuestPerA"===v.value0[1].recLabel){var $193=new Data_Tuple.Tuple(v.value0[0].recValue(Data_Unit.unit),v.value0[1].recValue(Data_Unit.unit));return $193.value0 instanceof Data_Generic.SInt&&$193.value1 instanceof Data_Generic.SInt?Data_Maybe.Just.create({_maxAttendees:Data_Integral.fromIntegral(Data_Integral.integralInt)(Data_Word.word32Integral)($193.value0.value0),_maxGuestPerA:Data_Integral.fromIntegral(Data_Integral.integralInt)(Data_Word.word32Integral)($193.value1.value0)}):v1()}return v1()},function(v){return new Data_Generic.SigRecord([{recLabel:"_maxAttendees",recValue:function(v1){return Data_Generic.SigInt.value}},{recLabel:"_maxGuestPerA",recValue:function(v1){return Data_Generic.SigInt.value}}])},function(v){return new Data_Generic.SRecord([{recLabel:"_maxAttendees",recValue:function(v1){return Data_Generic.SInt.create(Data_Integral.fromIntegral(Data_Word.word32Integral)(Data_Integral.integralInt)(v._maxAttendees))}},{recLabel:"_maxGuestPerA",recValue:function(v1){return Data_Generic.SInt.create(Data_Integral.fromIntegral(Data_Word.word32Integral)(Data_Integral.integralInt)(v._maxGuestPerA))}}])}),oldgenericDinnerId=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SInt?Data_Maybe.Just.create({unDinnerId:Data_Integral.fromIntegral(Data_Integral.integralInt)(Data_Word.word32Integral)(v.value0)}):Data_Maybe.Nothing.value},function(v){return Data_Generic.SigInt.value},function(v){return Data_Generic.SInt.create(Data_Integral.fromIntegral(Data_Word.word32Integral)(Data_Integral.integralInt)(v.unDinnerId))}),oldgenericDinnerMeta=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Dinners.DinnerMeta"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DinnerMeta))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&7===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(__dinnerContact1){return function(__dinnerDate1){return function(__dinnerDescription1){return function(__dinnerId1){return function(__dinnerTerm1){return function(__dinnerTimeZone1){return function(__dinnerTitle1){return{_dinnerContact:__dinnerContact1,_dinnerDate:__dinnerDate1,_dinnerDescription:__dinnerDescription1,_dinnerId:__dinnerId1,_dinnerTerm:__dinnerTerm1,_dinnerTimeZone:__dinnerTimeZone1,_dinnerTitle:__dinnerTitle1}}}}}}}}))(Data_Generic.fromSpine(Data_Generic.genericString)(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_DateTime.genericDateTime)(r.value0[1].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)(r.value0[2].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(oldgenericDinnerId))(r.value0[3].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldGenericTerm)(r.value0[4].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldgenericTimezone)(r.value0[5].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)(r.value0[6].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Dinners.DinnerMeta",[{sigConstructor:"EmmaMCR.Types.Dinners.DinnerMeta",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"_dinnerContact",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}},{recLabel:"_dinnerDate",recValue:function($dollarq2){return Data_Generic.toSignature(Data_DateTime.genericDateTime)(Data_Generic.anyProxy)}},{recLabel:"_dinnerDescription",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}},{recLabel:"_dinnerId",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericMaybe(oldgenericDinnerId))(Data_Generic.anyProxy)}},{recLabel:"_dinnerTerm",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldGenericTerm)(Data_Generic.anyProxy)}},{recLabel:"_dinnerTimeZone",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldgenericTimezone)(Data_Generic.anyProxy)}},{recLabel:"_dinnerTitle",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Dinners.DinnerMeta",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"_dinnerContact",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericString)(v._dinnerContact)}},{recLabel:"_dinnerDate",recValue:function($dollarq1){return Data_Generic.toSpine(Data_DateTime.genericDateTime)(v._dinnerDate)}},{recLabel:"_dinnerDescription",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericString)(v._dinnerDescription)}},{recLabel:"_dinnerId",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericMaybe(oldgenericDinnerId))(v._dinnerId)}},{recLabel:"_dinnerTerm",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldGenericTerm)(v._dinnerTerm)}},{recLabel:"_dinnerTimeZone",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldgenericTimezone)(v._dinnerTimeZone)}},{recLabel:"_dinnerTitle",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericString)(v._dinnerTitle)}}])}])}),oldGenericDinnerSignup=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Dinners.DinnerSignup"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DinnerSignup))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&4===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(__dinnerAssignGuests1){return function(__dinnerMax1){return function(__dinnerSignupDeadline1){return function(__dinnerSignupOpen1){return{_dinnerAssignGuests:__dinnerAssignGuests1,_dinnerMax:__dinnerMax1,_dinnerSignupDeadline:__dinnerSignupDeadline1,_dinnerSignupOpen:__dinnerSignupOpen1}}}}}))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldGenericAssignGuests)(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(oldgenericDinnerMax)(r.value0[1].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_DateTime.genericDateTime)(r.value0[2].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericEither(Data_Generic.genericBool)(Data_DateTime.genericDateTime))(r.value0[3].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Dinners.DinnerSignup",[{sigConstructor:"EmmaMCR.Types.Dinners.DinnerSignup",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"_dinnerAssignGuests",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldGenericAssignGuests)(Data_Generic.anyProxy)}},{recLabel:"_dinnerMax",recValue:function($dollarq2){return Data_Generic.toSignature(oldgenericDinnerMax)(Data_Generic.anyProxy)}},{recLabel:"_dinnerSignupDeadline",recValue:function($dollarq2){return Data_Generic.toSignature(Data_DateTime.genericDateTime)(Data_Generic.anyProxy)}},{recLabel:"_dinnerSignupOpen",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericEither(Data_Generic.genericBool)(Data_DateTime.genericDateTime))(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Dinners.DinnerSignup",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"_dinnerAssignGuests",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldGenericAssignGuests)(v._dinnerAssignGuests)}},{recLabel:"_dinnerMax",recValue:function($dollarq1){return Data_Generic.toSpine(oldgenericDinnerMax)(v._dinnerMax)}},{recLabel:"_dinnerSignupDeadline",recValue:function($dollarq1){return Data_Generic.toSpine(Data_DateTime.genericDateTime)(v._dinnerSignupDeadline)}},{recLabel:"_dinnerSignupOpen",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericEither(Data_Generic.genericBool)(Data_DateTime.genericDateTime))(v._dinnerSignupOpen)}}])}])}),oldGenericDinnerPrices=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Dinners.DinnerPrices"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DinnerPrices))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&4===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(__priceAffiliate1){return function(__priceAssociate1){return function(__priceGuest1){return function(__priceMember1){return{_priceAffiliate:__priceAffiliate1,_priceAssociate:__priceAssociate1,_priceGuest:__priceGuest1,_priceMember:__priceMember1}}}}}))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldGenericPounds)(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldGenericPounds)(r.value0[1].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldGenericPounds)(r.value0[2].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldGenericPounds)(r.value0[3].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Dinners.DinnerPrices",[{sigConstructor:"EmmaMCR.Types.Dinners.DinnerPrices",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"_priceAffiliate",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldGenericPounds)(Data_Generic.anyProxy)}},{recLabel:"_priceAssociate",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldGenericPounds)(Data_Generic.anyProxy)}},{recLabel:"_priceGuest",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldGenericPounds)(Data_Generic.anyProxy)}},{recLabel:"_priceMember",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldGenericPounds)(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Dinners.DinnerPrices",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"_priceAffiliate",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldGenericPounds)(v._priceAffiliate)}},{recLabel:"_priceAssociate",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldGenericPounds)(v._priceAssociate)}},{recLabel:"_priceGuest",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldGenericPounds)(v._priceGuest)}},{recLabel:"_priceMember",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldGenericPounds)(v._priceMember)}}])}])}),oldGenericDinnerDetails=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Dinners.DinnerDetails"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DinnerDetails))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&2===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(__dinnerMenu1){return function(__dinnerPrices1){return{_dinnerMenu:__dinnerMenu1,_dinnerPrices:__dinnerPrices1}}}))(Data_Generic.fromSpine(Data_Generic.genericString)(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(oldGenericDinnerPrices)(r.value0[1].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Dinners.DinnerDetails",[{sigConstructor:"EmmaMCR.Types.Dinners.DinnerDetails",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"_dinnerMenu",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy)}},{recLabel:"_dinnerPrices",recValue:function($dollarq2){return Data_Generic.toSignature(oldGenericDinnerPrices)(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Dinners.DinnerDetails",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"_dinnerMenu",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericString)(v._dinnerMenu)}},{recLabel:"_dinnerPrices",recValue:function($dollarq1){return Data_Generic.toSpine(oldGenericDinnerPrices)(v._dinnerPrices)}}])}])}),oldGenericDinner=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Dinners.Dinner"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Dinner))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&3===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(__dinnerDetails1){return function(__dinnerMeta1){return function(__dinnerSignup1){return{_dinnerDetails:__dinnerDetails1,_dinnerMeta:__dinnerMeta1,_dinnerSignup:__dinnerSignup1}}}}))(Data_Generic.fromSpine(Data_Generic.genericMaybe(oldGenericDinnerDetails))(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(oldgenericDinnerMeta)(r.value0[1].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(oldGenericDinnerSignup))(r.value0[2].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Dinners.Dinner",[{sigConstructor:"EmmaMCR.Types.Dinners.Dinner",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"_dinnerDetails",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericMaybe(oldGenericDinnerDetails))(Data_Generic.anyProxy)}},{recLabel:"_dinnerMeta",recValue:function($dollarq2){return Data_Generic.toSignature(oldgenericDinnerMeta)(Data_Generic.anyProxy)}},{recLabel:"_dinnerSignup",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericMaybe(oldGenericDinnerSignup))(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Dinners.Dinner",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"_dinnerDetails",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericMaybe(oldGenericDinnerDetails))(v._dinnerDetails)}},{recLabel:"_dinnerMeta",recValue:function($dollarq1){return Data_Generic.toSpine(oldgenericDinnerMeta)(v._dinnerMeta)}},{recLabel:"_dinnerSignup",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericMaybe(oldGenericDinnerSignup))(v._dinnerSignup)}}])}])}),newtypeDinnerSignup=new Data_Newtype.Newtype(function(n){return n},DinnerSignup),newtypeDinnerPrices=new Data_Newtype.Newtype(function(n){return n},DinnerPrices),newtypeDinnerMeta=new Data_Newtype.Newtype(function(n){return n},DinnerMeta),newtypeDinnerMax=new Data_Newtype.Newtype(function(n){return n},DinnerMax),newtypeDinnerId=new Data_Newtype.Newtype(function(n){return n},MakeDinnerId),newtypeDinnerDetails=new Data_Newtype.Newtype(function(n){return n},DinnerDetails),newtypeDinner=new Data_Newtype.Newtype(function(n){return n},Dinner),genericDinnerPrices=new Data_Generic_Rep.Generic(function(x){return new Data_Generic_Rep.Product(x._priceAffiliate,new Data_Generic_Rep.Product(x._priceAssociate,new Data_Generic_Rep.Product(x._priceGuest,x._priceMember)))},function(x){return{_priceAffiliate:x.value0,_priceAssociate:x.value1.value0,_priceGuest:x.value1.value1.value0,_priceMember:x.value1.value1.value1}}),semigroupDinnerPrices=new Data_Semigroup.Semigroup(Data_Generic_Rep_Semigroup.genericAppend(genericDinnerPrices)(Data_Generic_Rep_Semigroup.genericSemigroupConstructor(Data_Generic_Rep_Semigroup.genericSemigroupRec(Data_Generic_Rep_Semigroup.genericSemigroupProduct(Data_Generic_Rep_Semigroup.genericSemigroupField(EmmaMCR_Types_Core.semigroupPounds))(Data_Generic_Rep_Semigroup.genericSemigroupProduct(Data_Generic_Rep_Semigroup.genericSemigroupField(EmmaMCR_Types_Core.semigroupPounds))(Data_Generic_Rep_Semigroup.genericSemigroupProduct(Data_Generic_Rep_Semigroup.genericSemigroupField(EmmaMCR_Types_Core.semigroupPounds))(Data_Generic_Rep_Semigroup.genericSemigroupField(EmmaMCR_Types_Core.semigroupPounds)))))))),monoidDinnerPrices=new Data_Monoid.Monoid(function(){return semigroupDinnerPrices},Data_Generic_Rep_Monoid.genericMempty(genericDinnerPrices)(Data_Generic_Rep_Monoid.genericMonoidConstructor(Data_Generic_Rep_Monoid.genericMonoidRec(Data_Generic_Rep_Monoid.genericMonoidProduct(Data_Generic_Rep_Monoid.genericMonoidField(EmmaMCR_Types_Core.monoidPounds))(Data_Generic_Rep_Monoid.genericMonoidProduct(Data_Generic_Rep_Monoid.genericMonoidField(EmmaMCR_Types_Core.monoidPounds))(Data_Generic_Rep_Monoid.genericMonoidProduct(Data_Generic_Rep_Monoid.genericMonoidField(EmmaMCR_Types_Core.monoidPounds))(Data_Generic_Rep_Monoid.genericMonoidField(EmmaMCR_Types_Core.monoidPounds)))))))),genericDinnerDetails=new Data_Generic_Rep.Generic(function(x){return new Data_Generic_Rep.Product(x._dinnerMenu,x._dinnerPrices)},function(x){return{_dinnerMenu:x.value0,_dinnerPrices:x.value1}}),semigroupDinnerDetails=new Data_Semigroup.Semigroup(Data_Generic_Rep_Semigroup.genericAppend(genericDinnerDetails)(Data_Generic_Rep_Semigroup.genericSemigroupConstructor(Data_Generic_Rep_Semigroup.genericSemigroupRec(Data_Generic_Rep_Semigroup.genericSemigroupProduct(Data_Generic_Rep_Semigroup.genericSemigroupField(Data_Semigroup.semigroupString))(Data_Generic_Rep_Semigroup.genericSemigroupField(semigroupDinnerPrices)))))),monoidDinnerDetails=new Data_Monoid.Monoid(function(){return semigroupDinnerDetails},Data_Generic_Rep_Monoid.genericMempty(genericDinnerDetails)(Data_Generic_Rep_Monoid.genericMonoidConstructor(Data_Generic_Rep_Monoid.genericMonoidRec(Data_Generic_Rep_Monoid.genericMonoidProduct(Data_Generic_Rep_Monoid.genericMonoidField(Data_Monoid.monoidString))(Data_Generic_Rep_Monoid.genericMonoidField(monoidDinnerPrices)))))),eqDinnerPrices=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(EmmaMCR_Types_Core.eqPounds)(x._priceAffiliate)(y._priceAffiliate)&&Data_Eq.eq(EmmaMCR_Types_Core.eqPounds)(x._priceAssociate)(y._priceAssociate)&&Data_Eq.eq(EmmaMCR_Types_Core.eqPounds)(x._priceGuest)(y._priceGuest)&&Data_Eq.eq(EmmaMCR_Types_Core.eqPounds)(x._priceMember)(y._priceMember)}}),eqDinnerMax=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Word.eqWord32)(x._maxAttendees)(y._maxAttendees)&&Data_Eq.eq(Data_Word.eqWord32)(x._maxGuestPerA)(y._maxGuestPerA)}}),eqDinnerSignup=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(EmmaMCR_Types_Core.eqAssignGuests)(x._dinnerAssignGuests)(y._dinnerAssignGuests)&&Data_Eq.eq(eqDinnerMax)(x._dinnerMax)(y._dinnerMax)&&Data_Eq.eq(Data_DateTime.eqDateTime)(x._dinnerSignupDeadline)(y._dinnerSignupDeadline)&&Data_Eq.eq(Data_Either.eqEither(Data_Eq.eqBoolean)(Data_DateTime.eqDateTime))(x._dinnerSignupOpen)(y._dinnerSignupOpen)}}),eqDinnerId=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Word.eqWord32)(x.unDinnerId)(y.unDinnerId)}}),eqDinnerMeta=new Data_Eq.Eq(function(x){return function(y){return x._dinnerContact===y._dinnerContact&&Data_Eq.eq(Data_DateTime.eqDateTime)(x._dinnerDate)(y._dinnerDate)&&x._dinnerDescription===y._dinnerDescription&&Data_Eq.eq(Data_Maybe.eqMaybe(eqDinnerId))(x._dinnerId)(y._dinnerId)&&Data_Eq.eq(EmmaMCR_Types_Core.eqTerm)(x._dinnerTerm)(y._dinnerTerm)&&Data_Eq.eq(EmmaMCR_Types_Core.eqTimezone)(x._dinnerTimeZone)(y._dinnerTimeZone)&&x._dinnerTitle===y._dinnerTitle}}),eqDinnerDetails=new Data_Eq.Eq(function(x){return function(y){return x._dinnerMenu===y._dinnerMenu&&Data_Eq.eq(eqDinnerPrices)(x._dinnerPrices)(y._dinnerPrices)}}),eqDinner=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Maybe.eqMaybe(eqDinnerDetails))(x._dinnerDetails)(y._dinnerDetails)&&Data_Eq.eq(eqDinnerMeta)(x._dinnerMeta)(y._dinnerMeta)&&Data_Eq.eq(Data_Maybe.eqMaybe(eqDinnerSignup))(x._dinnerSignup)(y._dinnerSignup)}}),emptyDinnerMeta=function(_dinnerContact){return function(l){var v=Data_Lens_Prism.review(Extra_DateTime.localized(Data_Lens_Internal_Tagged.taggedChoice))(l);return{_dinnerTitle:Data_Monoid.mempty(Data_Monoid.monoidString),_dinnerId:Data_Maybe.Nothing.value,_dinnerDescription:Data_Monoid.mempty(Data_Monoid.monoidString),_dinnerContact:_dinnerContact,_dinnerTerm:EmmaMCR_Types_Core.Easter.value,_dinnerDate:v.dateTime,_dinnerTimeZone:v.timeZone}}},dinnerDate=function(dictStrong){return function($408){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerMeta)(newtypeDinnerMeta)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerDate"}))()()(Data_Symbol.SProxy.value)(dictStrong)($408))}},ordDinnerMeta=new Data_Ord.Ord(function(){return eqDinnerMeta},Data_Ord.comparing(Data_DateTime.ordDateTime)(Data_Lens_Getter.view(dinnerDate(Data_Lens_Internal_Forget.strongForget))));exports.Dinner=Dinner,exports.emptyDinner=function(contact){return function(l){return{_dinnerMeta:emptyDinnerMeta(contact)(l),_dinnerSignup:Data_Maybe.Nothing.value,_dinnerDetails:Data_Maybe.Nothing.value}}},exports.dinnerMeta=function(dictStrong){return function($402){return Data_Lens_Iso_Newtype._Newtype(newtypeDinner)(newtypeDinner)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerMeta"}))()()(Data_Symbol.SProxy.value)(dictStrong)($402))}},exports.dinnerSignup=function(dictStrong){return function($400){return Data_Lens_Iso_Newtype._Newtype(newtypeDinner)(newtypeDinner)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerSignup"}))()()(Data_Symbol.SProxy.value)(dictStrong)($400))}},exports.dinnerDetails=function(dictStrong){return function($406){return Data_Lens_Iso_Newtype._Newtype(newtypeDinner)(newtypeDinner)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerDetails"}))()()(Data_Symbol.SProxy.value)(dictStrong)($406))}},exports.DinnerDetails=DinnerDetails,exports.dinnerMenu=function(dictStrong){return function($403){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerDetails)(newtypeDinnerDetails)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerMenu"}))()()(Data_Symbol.SProxy.value)(dictStrong)($403))}},exports.dinnerPrices=function(dictStrong){return function($401){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerDetails)(newtypeDinnerDetails)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerPrices"}))()()(Data_Symbol.SProxy.value)(dictStrong)($401))}},exports.MakeDinnerId=MakeDinnerId,exports._MakeDinnerId=function(dictProfunctor){var rev=function($411){return{unDinnerId:Data_Integral.fromIntegral(Data_Integral.integralInt)(Data_Word.word32Integral)($411)}},fwd=function($412){return Data_Integral.fromIntegral(Data_Word.word32Integral)(Data_Integral.integralInt)($412.unDinnerId)};return function($413){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerId)(newtypeDinnerId)(dictProfunctor)(Data_Lens_Iso.iso(fwd)(rev)(dictProfunctor)($413))}},exports.DinnerMax=DinnerMax,exports.maxAttendees=function(dictStrong){return function($394){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerMax)(newtypeDinnerMax)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_maxAttendees"}))()()(Data_Symbol.SProxy.value)(dictStrong)(Data_Lens_Iso.iso(Data_Integral.fromIntegral(Data_Word.word32Integral)(Data_Integral.integralInt))(Data_Integral.fromIntegral(Data_Integral.integralInt)(Data_Word.word32Integral))(dictStrong.Profunctor0())($394)))}},exports.maxGuestPerA=function(dictStrong){return function($393){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerMax)(newtypeDinnerMax)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_maxGuestPerA"}))()()(Data_Symbol.SProxy.value)(dictStrong)(Data_Lens_Iso.iso(Data_Integral.fromIntegral(Data_Word.word32Integral)(Data_Integral.integralInt))(Data_Integral.fromIntegral(Data_Integral.integralInt)(Data_Word.word32Integral))(dictStrong.Profunctor0())($393)))}},exports.DinnerMeta=DinnerMeta,exports.emptyDinnerMeta=emptyDinnerMeta,exports.dinnerTitle=function(dictStrong){return function($395){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerMeta)(newtypeDinnerMeta)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerTitle"}))()()(Data_Symbol.SProxy.value)(dictStrong)($395))}},exports.dinnerId=function(dictStrong){return function($405){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerMeta)(newtypeDinnerMeta)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerId"}))()()(Data_Symbol.SProxy.value)(dictStrong)($405))}},exports.dinnerDescription=function(dictStrong){return function($407){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerMeta)(newtypeDinnerMeta)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerDescription"}))()()(Data_Symbol.SProxy.value)(dictStrong)($407))}},exports.dinnerContact=function(dictStrong){return function($409){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerMeta)(newtypeDinnerMeta)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerContact"}))()()(Data_Symbol.SProxy.value)(dictStrong)($409))}},exports.dinnerDate=dinnerDate,exports.dinnerTimeZone=function(dictStrong){return function($396){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerMeta)(newtypeDinnerMeta)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerTimeZone"}))()()(Data_Symbol.SProxy.value)(dictStrong)($396))}},exports.DinnerPrices=DinnerPrices,exports.priceMember=function(dictStrong){return function($390){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerPrices)(newtypeDinnerPrices)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_priceMember"}))()()(Data_Symbol.SProxy.value)(dictStrong)($390))}},exports.priceAffiliate=function(dictStrong){return function($387){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerPrices)(newtypeDinnerPrices)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_priceAffiliate"}))()()(Data_Symbol.SProxy.value)(dictStrong)($387))}},exports.priceAssociate=function(dictStrong){return function($388){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerPrices)(newtypeDinnerPrices)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_priceAssociate"}))()()(Data_Symbol.SProxy.value)(dictStrong)($388))}},exports.priceGuest=function(dictStrong){return function($389){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerPrices)(newtypeDinnerPrices)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_priceGuest"}))()()(Data_Symbol.SProxy.value)(dictStrong)($389))}},exports.pricesMember=function(dictWander){return function($392){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerPrices)(newtypeDinnerPrices)(dictWander.Choice1().Profunctor0())(Data_Lens_Internal_Wander.wander(dictWander)(function(dictApplicative){return function(f){return function(x){return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(function(v){return function(v1){var $271={};for(var $272 in x)({}).hasOwnProperty.call(x,$272)&&($271[$272]=x[$272]);return $271._priceMember=v,$271._priceAffiliate=v1,$271}})(f(x._priceMember)))(f(x._priceAffiliate))}}})($392))}},exports.pricesGuest=function(dictWander){return function($391){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerPrices)(newtypeDinnerPrices)(dictWander.Choice1().Profunctor0())(Data_Lens_Internal_Wander.wander(dictWander)(function(dictApplicative){return function(f){return function(x){return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(function(v){return function(v1){var $268={};for(var $269 in x)({}).hasOwnProperty.call(x,$269)&&($268[$269]=x[$269]);return $268._priceAssociate=v,$268._priceGuest=v1,$268}})(f(x._priceAssociate)))(f(x._priceGuest))}}})($391))}},exports.DinnerSignup=DinnerSignup,exports.emptyDinnerSignup=function(t){return{_dinnerMax:{_maxAttendees:Data_Integral.fromIntegral(Data_Integral.integralInt)(Data_Word.word32Integral)(0),_maxGuestPerA:Data_Integral.fromIntegral(Data_Integral.integralInt)(Data_Word.word32Integral)(0)},_dinnerSignupOpen:new Data_Either.Right(t),_dinnerSignupDeadline:t,_dinnerAssignGuests:EmmaMCR_Types_Core.FirstComeFirstServed.value}},exports.dinnerMax=function(dictStrong){return function($404){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerSignup)(newtypeDinnerSignup)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerMax"}))()()(Data_Symbol.SProxy.value)(dictStrong)($404))}},exports.dinnerSignupOpen=function(dictStrong){return function($398){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerSignup)(newtypeDinnerSignup)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerSignupOpen"}))()()(Data_Symbol.SProxy.value)(dictStrong)($398))}},exports.dinnerSignupDeadline=function(dictStrong){return function($399){return Data_Lens_Iso_Newtype._Newtype(newtypeDinnerSignup)(newtypeDinnerSignup)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_dinnerSignupDeadline"}))()()(Data_Symbol.SProxy.value)(dictStrong)($399))}},exports.eqDinner=eqDinner,exports.oldGenericDinner=oldGenericDinner,exports.newtypeDinner=newtypeDinner,exports.eqDinnerDetails=eqDinnerDetails,exports.oldGenericDinnerDetails=oldGenericDinnerDetails,exports.genericDinnerDetails=genericDinnerDetails,exports.newtypeDinnerDetails=newtypeDinnerDetails,exports.semigroupDinnerDetails=semigroupDinnerDetails,exports.monoidDinnerDetails=monoidDinnerDetails,exports.eqDinnerId=eqDinnerId,exports.newtypeDinnerId=newtypeDinnerId,exports.oldgenericDinnerId=oldgenericDinnerId,exports.eqDinnerMax=eqDinnerMax,exports.newtypeDinnerMax=newtypeDinnerMax,exports.oldgenericDinnerMax=oldgenericDinnerMax,exports.eqDinnerMeta=eqDinnerMeta,exports.ordDinnerMeta=ordDinnerMeta,exports.oldgenericDinnerMeta=oldgenericDinnerMeta,exports.newtypeDinnerMeta=newtypeDinnerMeta,exports.eqDinnerPrices=eqDinnerPrices,exports.oldGenericDinnerPrices=oldGenericDinnerPrices,exports.genericDinnerPrices=genericDinnerPrices,exports.newtypeDinnerPrices=newtypeDinnerPrices,exports.semigroupDinnerPrices=semigroupDinnerPrices,exports.monoidDinnerPrices=monoidDinnerPrices,exports.eqDinnerSignup=eqDinnerSignup,exports.oldGenericDinnerSignup=oldGenericDinnerSignup,exports.newtypeDinnerSignup=newtypeDinnerSignup}(PS["EmmaMCR.Types.Dinners"]=PS["EmmaMCR.Types.Dinners"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_Generic=(PS["Control.Semigroupoid"],PS["Data.Date"],PS["Data.DateTime"],PS["Data.Eq"],PS["Data.Generic"]),Data_Lens_Iso_Newtype=(PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"],PS["Data.Lens"],PS["Data.Lens.Iso.Newtype"]),Data_Lens_Record=PS["Data.Lens.Record"],Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Symbol=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Show"],PS["Data.Symbol"]),Data_Unit=(PS["Data.Tuple"],PS["Data.Unit"]),EmmaMCR_Types_Core=(PS["EmmaMCR.Types.Auth"],PS["EmmaMCR.Types.Core"]),MemberDetails=(PS.Prelude,function(x){return x}),oldgenericMemberDetails=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Members.MemberDetails"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(MemberDetails))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&4===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(contacts1){return function(id1){return function(name1){return function(status1){return{contacts:contacts1,id:id1,name:name1,status:status1}}}}}))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericTuple(EmmaMCR_Types_Core.oldgenericReadAccess)(EmmaMCR_Types_Core.oldgenericContact)))(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldGenericUserId)(r.value0[1].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldGenericPersonName)(r.value0[2].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericArray(EmmaMCR_Types_Core.oldgenericMembership))(r.value0[3].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Members.MemberDetails",[{sigConstructor:"EmmaMCR.Types.Members.MemberDetails",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"contacts",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericTuple(EmmaMCR_Types_Core.oldgenericReadAccess)(EmmaMCR_Types_Core.oldgenericContact)))(Data_Generic.anyProxy)}},{recLabel:"id",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldGenericUserId)(Data_Generic.anyProxy)}},{recLabel:"name",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldGenericPersonName)(Data_Generic.anyProxy)}},{recLabel:"status",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericArray(EmmaMCR_Types_Core.oldgenericMembership))(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Members.MemberDetails",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"contacts",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericTuple(EmmaMCR_Types_Core.oldgenericReadAccess)(EmmaMCR_Types_Core.oldgenericContact)))(v.contacts)}},{recLabel:"id",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldGenericUserId)(v.id)}},{recLabel:"name",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldGenericPersonName)(v.name)}},{recLabel:"status",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericArray(EmmaMCR_Types_Core.oldgenericMembership))(v.status)}}])}])}),newtypeMemberDetails=new Data_Newtype.Newtype(function(n){return n},MemberDetails);exports.MemberDetails=MemberDetails,exports.memberId=function(dictStrong){return function($197){return Data_Lens_Iso_Newtype._Newtype(newtypeMemberDetails)(newtypeMemberDetails)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"id"}))()()(Data_Symbol.SProxy.value)(dictStrong)($197))}},exports.memberName=function(dictStrong){return function($194){return Data_Lens_Iso_Newtype._Newtype(newtypeMemberDetails)(newtypeMemberDetails)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"name"}))()()(Data_Symbol.SProxy.value)(dictStrong)($194))}},exports.memberContacts=function(dictStrong){return function($199){return Data_Lens_Iso_Newtype._Newtype(newtypeMemberDetails)(newtypeMemberDetails)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"contacts"}))()()(Data_Symbol.SProxy.value)(dictStrong)($199))}},exports.oldgenericMemberDetails=oldgenericMemberDetails,exports.newtypeMemberDetails=newtypeMemberDetails}(PS["EmmaMCR.Types.Members"]=PS["EmmaMCR.Types.Members"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_DateTime=(PS["Data.Binary.UnsignedInt"],PS["Data.DateTime"]),Data_Function=(PS["Data.Eq"],PS["Data.Function"]),Data_Functor=PS["Data.Functor"],Data_Generic=PS["Data.Generic"],Data_Lens_Getter=(PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"],PS["Data.Lens"],PS["Data.Lens.Getter"]),Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Tagged=PS["Data.Lens.Internal.Tagged"],Data_Lens_Iso_Newtype=PS["Data.Lens.Iso.Newtype"],Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Lens_Record=PS["Data.Lens.Record"],Data_Maybe=(PS["Data.Map"],PS["Data.Maybe"]),Data_Newtype=PS["Data.Newtype"],Data_Symbol=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Show"],PS["Data.Symbol"]),Data_Tuple=PS["Data.Tuple"],Data_Unit=(PS["Data.Tuple.Nested"],PS["Data.Typelevel.Num.Sets"],PS["Data.Unit"]),EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],EmmaMCR_Types_Members=(PS["EmmaMCR.Types.Dinners"],PS["EmmaMCR.Types.Members"]),Type_Proxy=(PS.Prelude,PS["Type.Proxy"]),GenericBookingAdd=function(){function GenericBookingAdd(value0){this.value0=value0}return GenericBookingAdd.create=function(value0){return new GenericBookingAdd(value0)},GenericBookingAdd}(),GenericBookingUpdate=function(){function GenericBookingUpdate(value0){this.value0=value0}return GenericBookingUpdate.create=function(value0){return new GenericBookingUpdate(value0)},GenericBookingUpdate}(),BookingTicket=function(x){return x},GenericBooking=function(x){return x},oldGenericBookingTicket=new Data_Generic.Generic(function(v){var v1=function(v2){return Data_Maybe.Nothing.value};if(v instanceof Data_Generic.SRecord&&3===v.value0.length&&"attendee"===v.value0[0].recLabel&&"diet"===v.value0[1].recLabel&&"name"===v.value0[2].recLabel){var $111=new Data_Tuple.Tuple(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldgenericAttendee)(v.value0[0].recValue(Data_Unit.unit)),new Data_Tuple.Tuple(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldgenericDietRef)(v.value0[1].recValue(Data_Unit.unit)),Data_Generic.fromSpine(Data_Generic.genericMaybe(EmmaMCR_Types_Core.oldGenericPersonName))(v.value0[2].recValue(Data_Unit.unit))));return $111.value0 instanceof Data_Maybe.Just&&$111.value1.value0 instanceof Data_Maybe.Just&&$111.value1.value1 instanceof Data_Maybe.Just?Data_Maybe.Just.create({attendee:$111.value0.value0,diet:$111.value1.value0.value0,name:$111.value1.value1.value0}):v1()}return v1()},function(v){return new Data_Generic.SigRecord([{recLabel:"attendee",recValue:function(v1){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldgenericAttendee)(Type_Proxy.Proxy.value)}},{recLabel:"diet",recValue:function(v1){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldgenericDietRef)(Type_Proxy.Proxy.value)}},{recLabel:"name",recValue:function(v1){return Data_Generic.toSignature(Data_Generic.genericMaybe(EmmaMCR_Types_Core.oldGenericPersonName))(Type_Proxy.Proxy.value)}}])},function(v){return new Data_Generic.SRecord([{recLabel:"attendee",recValue:function(v1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldgenericAttendee)(v.attendee)}},{recLabel:"diet",recValue:function(v1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldgenericDietRef)(v.diet)}},{recLabel:"name",recValue:function(v1){return Data_Generic.toSpine(Data_Generic.genericMaybe(EmmaMCR_Types_Core.oldGenericPersonName))(v.name)}}])}),newtypeGenericBooking=new Data_Newtype.Newtype(function(n){return n},GenericBooking),newtypeBookingTicket=new Data_Newtype.Newtype(function(n){return n},BookingTicket),bookingMember=function(dictStrong){return function($222){return Data_Lens_Iso_Newtype._Newtype(newtypeGenericBooking)(newtypeGenericBooking)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"member"}))()()(Data_Symbol.SProxy.value)(dictStrong)($222))}},keyedBookingDetails=Control_Apply.apply(Control_Apply.applyFn)(Data_Function.flip(Data_Tuple.Tuple.create))(Data_Lens_Getter.view(function($223){return bookingMember(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Members.memberId(Data_Lens_Internal_Forget.strongForget)($223))})),_BookingUpdate=function(dictChoice){return Data_Lens_Prism["prism'"](GenericBookingUpdate.create)(function(v){return v instanceof GenericBookingUpdate?new Data_Maybe.Just(v.value0):Data_Maybe.Nothing.value})(dictChoice)},_BookingAdd=function(dictChoice){return Data_Lens_Prism["prism'"](GenericBookingAdd.create)(function(v){return v instanceof GenericBookingAdd?new Data_Maybe.Just(v.value0):Data_Maybe.Nothing.value})(dictChoice)},oldGenericBookingAction=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"BookingAdd"===v.value0?Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(function($228){return Data_Maybe.Just.create(Data_Lens_Prism.review(_BookingAdd(Data_Lens_Internal_Tagged.taggedChoice))($228))})(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Generic.fromSpine(Data_DateTime.genericDateTime))(Data_Array.head(Data_Functor.map(Data_Functor.functorArray)(function(v1){return v1(Data_Unit.unit)})(v.value1)))):v instanceof Data_Generic.SProd&&"BookingUpdate"===v.value0?Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(function($229){return Data_Maybe.Just.create(Data_Lens_Prism.review(_BookingUpdate(Data_Lens_Internal_Tagged.taggedChoice))($229))})(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Generic.fromSpine(Data_DateTime.genericDateTime))(Data_Array.head(Data_Functor.map(Data_Functor.functorArray)(function(v1){return v1(Data_Unit.unit)})(v.value1)))):Data_Maybe.Nothing.value},function(v){return new Data_Generic.SigProd("BookingAction",[{sigConstructor:"BookingAdd",sigValues:[function(v1){return Data_Generic.toSignature(Data_DateTime.genericDateTime)(Type_Proxy.Proxy.value)}]},{sigConstructor:"BookingUpdate",sigValues:[function(v1){return Data_Generic.toSignature(Data_DateTime.genericDateTime)(Type_Proxy.Proxy.value)}]}])},function(v){if(v instanceof GenericBookingAdd)return new Data_Generic.SProd("BookingAdd",[function(v1){return Data_Generic.toSpine(Data_DateTime.genericDateTime)(v.value0)}]);if(v instanceof GenericBookingUpdate)return new Data_Generic.SProd("BookingUpdate",[function(v1){return Data_Generic.toSpine(Data_DateTime.genericDateTime)(v.value0)}]);throw new Error("Failed pattern match at EmmaMCR.Types.Bookings line 37, column 1 - line 37, column 72: "+[v.constructor.name])});exports.GenericBookingAdd=GenericBookingAdd,exports.GenericBookingUpdate=GenericBookingUpdate,exports._BookingAdd=_BookingAdd,exports._BookingUpdate=_BookingUpdate,exports.GenericBooking=GenericBooking,exports.bookingDinner=function(dictStrong){return function($224){return Data_Lens_Iso_Newtype._Newtype(newtypeGenericBooking)(newtypeGenericBooking)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"dinner"}))()()(Data_Symbol.SProxy.value)(dictStrong)($224))}},exports.bookingMember=bookingMember,exports.bookingTickets=function(dictStrong){return function($220){return Data_Lens_Iso_Newtype._Newtype(newtypeGenericBooking)(newtypeGenericBooking)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"tickets"}))()()(Data_Symbol.SProxy.value)(dictStrong)($220))}},exports.BookingTicket=BookingTicket,exports.bookingAttendee=function(dictStrong){return function($226){return Data_Lens_Iso_Newtype._Newtype(newtypeBookingTicket)(newtypeBookingTicket)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"attendee"}))()()(Data_Symbol.SProxy.value)(dictStrong)($226))}},exports.bookingDiet=function(dictStrong){return function($225){return Data_Lens_Iso_Newtype._Newtype(newtypeBookingTicket)(newtypeBookingTicket)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"diet"}))()()(Data_Symbol.SProxy.value)(dictStrong)($225))}},exports.bookingName=function(dictStrong){return function($221){return Data_Lens_Iso_Newtype._Newtype(newtypeBookingTicket)(newtypeBookingTicket)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"name"}))()()(Data_Symbol.SProxy.value)(dictStrong)($221))}},exports.keyedBookingDetails=keyedBookingDetails,exports.oldGenericBookingAction=oldGenericBookingAction,exports.oldGenericGenericBooking=function(dictGeneric){return function(dictGeneric1){return new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Bookings.GenericBooking"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(GenericBooking))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&4===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(actions1){return function(dinner1){return function(member1){return function(tickets1){return{actions:actions1,dinner:dinner1,member:member1,tickets:tickets1}}}}}))(Data_Generic.fromSpine(Data_Generic.genericArray(oldGenericBookingAction))(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(dictGeneric1)(r.value0[1].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(dictGeneric)(r.value0[2].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericArray(oldGenericBookingTicket))(r.value0[3].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Bookings.GenericBooking",[{sigConstructor:"EmmaMCR.Types.Bookings.GenericBooking",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"actions",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericArray(oldGenericBookingAction))(Data_Generic.anyProxy)}},{recLabel:"dinner",recValue:function($dollarq2){return Data_Generic.toSignature(dictGeneric1)(Data_Generic.anyProxy)}},{recLabel:"member",recValue:function($dollarq2){return Data_Generic.toSignature(dictGeneric)(Data_Generic.anyProxy)}},{recLabel:"tickets",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericArray(oldGenericBookingTicket))(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Bookings.GenericBooking",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"actions",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericArray(oldGenericBookingAction))(v.actions)}},{recLabel:"dinner",recValue:function($dollarq1){return Data_Generic.toSpine(dictGeneric1)(v.dinner)}},{recLabel:"member",recValue:function($dollarq1){return Data_Generic.toSpine(dictGeneric)(v.member)}},{recLabel:"tickets",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericArray(oldGenericBookingTicket))(v.tickets)}}])}])})}},exports.newtypeGenericBooking=newtypeGenericBooking,exports.newtypeBookingTicket=newtypeBookingTicket,exports.oldGenericBookingTicket=oldGenericBookingTicket}(PS["EmmaMCR.Types.Bookings"]=PS["EmmaMCR.Types.Bookings"]||{}),function(exports){"use strict";var Control_Apply=PS["Control.Apply"],Data_Bounded=(PS["Control.Semigroupoid"],PS["Data.Bounded"]),Data_Date=PS["Data.Date"],Data_DateTime=PS["Data.DateTime"],Data_Either=PS["Data.Either"],Data_Eq=PS["Data.Eq"],Data_Formatter_DateTime=PS["Data.Formatter.DateTime"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Generic=PS["Data.Generic"],Data_Generic_Rep=PS["Data.Generic.Rep"],Data_Generic_Rep_Show=PS["Data.Generic.Rep.Show"],Data_Lens_Getter=(PS["Data.HeytingAlgebra"],PS["Data.Lens"],PS["Data.Lens.Getter"]),Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Re=PS["Data.Lens.Internal.Re"],Data_Lens_Iso=PS["Data.Lens.Iso"],Data_Lens_Iso_Newtype=PS["Data.Lens.Iso.Newtype"],Data_Lens_Record=(PS["Data.Lens.Prism"],PS["Data.Lens.Record"]),Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Show=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Show"]),Data_Symbol=PS["Data.Symbol"],Data_Time=PS["Data.Time"],Data_Tuple=PS["Data.Tuple"],Data_Unit=PS["Data.Unit"],EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],Extra_DateTime=PS["Extra.DateTime"],Interested=(PS.Prelude,function(){function Interested(){}return Interested.value=new Interested,Interested}()),Booked=function(){function Booked(){}return Booked.value=new Booked,Booked}(),DateS=function(x){return x},Attended=function(){function Attended(){}return Attended.value=new Attended,Attended}(),Cancelled=function(){function Cancelled(){}return Cancelled.value=new Cancelled,Cancelled}(),Skipped=function(){function Skipped(){}return Skipped.value=new Skipped,Skipped}(),PuntBooking=function(x){return x},showDateS=new Data_Show.Show(function(v){return Data_Formatter_DateTime.format(Extra_DateTime.dateFormat)(Data_Function.flip(Data_DateTime.DateTime.create)(Data_Bounded.bottom(Data_Time.boundedTime))(v.unDateS))}),oldgenericDeclared=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Punting.Interested"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Interested.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Punting.Booked"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Booked.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Punting.Declared",[{sigConstructor:"EmmaMCR.Types.Punting.Interested",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Punting.Booked",sigValues:[]}])},function(v){if(v instanceof Interested)return new Data_Generic.SProd("EmmaMCR.Types.Punting.Interested",[]);if(v instanceof Booked)return new Data_Generic.SProd("EmmaMCR.Types.Punting.Booked",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Punting line 156, column 8 - line 156, column 55: "+[v.constructor.name])}),oldgenericAttended=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Punting.Attended"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Attended.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Punting.Cancelled"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Cancelled.value):v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Punting.Skipped"===v.value0&&0===v.value1.length?new Data_Maybe.Just(Skipped.value):Data_Maybe.Nothing.value},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Punting.Attended",[{sigConstructor:"EmmaMCR.Types.Punting.Attended",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Punting.Cancelled",sigValues:[]},{sigConstructor:"EmmaMCR.Types.Punting.Skipped",sigValues:[]}])},function(v){if(v instanceof Attended)return new Data_Generic.SProd("EmmaMCR.Types.Punting.Attended",[]);if(v instanceof Cancelled)return new Data_Generic.SProd("EmmaMCR.Types.Punting.Cancelled",[]);if(v instanceof Skipped)return new Data_Generic.SProd("EmmaMCR.Types.Punting.Skipped",[]);throw new Error("Failed pattern match at EmmaMCR.Types.Punting line 30, column 8 - line 30, column 55: "+[v.constructor.name])}),oldGenericDateS=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SString?Data_Either.hush(Data_Functor.map(Data_Either.functorEither)(function($209){return DateS({unDateS:Data_DateTime.date($209)})})(Data_Formatter_DateTime.unformat(Extra_DateTime.dateFormat)(v.value0))):Data_Maybe.Nothing.value},function(v){return Data_Generic.SigString.value},function($210){return Data_Generic.SString.create(Data_Show.show(showDateS)($210))}),oldgenericPuntBooking=new Data_Generic.Generic(function(v){return v instanceof Data_Generic.SProd&&"EmmaMCR.Types.Punting.PuntBooking"===v.value0&&1===v.value1.length?Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(PuntBooking))((r=v.value1[0](Data_Unit.unit))instanceof Data_Generic.SRecord&&5===r.value0.length?Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function(attended1){return function(date1){return function(declared1){return function(name1){return function(punter1){return{attended:attended1,date:date1,declared:declared1,name:name1,punter:punter1}}}}}}))(Data_Generic.fromSpine(Data_Generic.genericMaybe(oldgenericAttended))(r.value0[0].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(oldGenericDateS)(r.value0[1].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(oldgenericDeclared)(r.value0[2].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(EmmaMCR_Types_Core.oldGenericPersonName))(r.value0[3].recValue(Data_Unit.unit))))(Data_Generic.fromSpine(EmmaMCR_Types_Core.oldgenericCRSid)(r.value0[4].recValue(Data_Unit.unit))):Data_Maybe.Nothing.value):Data_Maybe.Nothing.value;var r},function($dollarq){return new Data_Generic.SigProd("EmmaMCR.Types.Punting.PuntBooking",[{sigConstructor:"EmmaMCR.Types.Punting.PuntBooking",sigValues:[function($dollarq1){return new Data_Generic.SigRecord([{recLabel:"attended",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericMaybe(oldgenericAttended))(Data_Generic.anyProxy)}},{recLabel:"date",recValue:function($dollarq2){return Data_Generic.toSignature(oldGenericDateS)(Data_Generic.anyProxy)}},{recLabel:"declared",recValue:function($dollarq2){return Data_Generic.toSignature(oldgenericDeclared)(Data_Generic.anyProxy)}},{recLabel:"name",recValue:function($dollarq2){return Data_Generic.toSignature(Data_Generic.genericMaybe(EmmaMCR_Types_Core.oldGenericPersonName))(Data_Generic.anyProxy)}},{recLabel:"punter",recValue:function($dollarq2){return Data_Generic.toSignature(EmmaMCR_Types_Core.oldgenericCRSid)(Data_Generic.anyProxy)}}])}]}])},function(v){return new Data_Generic.SProd("EmmaMCR.Types.Punting.PuntBooking",[function($dollarq){return new Data_Generic.SRecord([{recLabel:"attended",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericMaybe(oldgenericAttended))(v.attended)}},{recLabel:"date",recValue:function($dollarq1){return Data_Generic.toSpine(oldGenericDateS)(v.date)}},{recLabel:"declared",recValue:function($dollarq1){return Data_Generic.toSpine(oldgenericDeclared)(v.declared)}},{recLabel:"name",recValue:function($dollarq1){return Data_Generic.toSpine(Data_Generic.genericMaybe(EmmaMCR_Types_Core.oldGenericPersonName))(v.name)}},{recLabel:"punter",recValue:function($dollarq1){return Data_Generic.toSpine(EmmaMCR_Types_Core.oldgenericCRSid)(v.punter)}}])}])}),newtypePuntBooking=new Data_Newtype.Newtype(function(n){return n},PuntBooking),newtypeDateS=new Data_Newtype.Newtype(function(n){return n},DateS),genericDeclared=new Data_Generic_Rep.Generic(function(x){if(x instanceof Interested)return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);if(x instanceof Booked)return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);throw new Error("Failed pattern match at EmmaMCR.Types.Punting line 157, column 8 - line 157, column 58: "+[x.constructor.name])},function(x){if(x instanceof Data_Generic_Rep.Inl)return Interested.value;if(x instanceof Data_Generic_Rep.Inr)return Booked.value;throw new Error("Failed pattern match at EmmaMCR.Types.Punting line 157, column 8 - line 157, column 58: "+[x.constructor.name])}),showDeclared=new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericDeclared)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function(){return"Interested"})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function(){return"Booked"}))))),eqDeclared=new Data_Eq.Eq(function(x){return function(y){return x instanceof Interested&&y instanceof Interested||x instanceof Booked&&y instanceof Booked}}),eqDateS=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Date.eqDate)(x.unDateS)(y.unDateS)}}),eqAttended=new Data_Eq.Eq(function(x){return function(y){return x instanceof Attended&&y instanceof Attended||(x instanceof Cancelled&&y instanceof Cancelled||x instanceof Skipped&&y instanceof Skipped)}}),eqPuntBooking=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(Data_Maybe.eqMaybe(eqAttended))(x.attended)(y.attended)&&Data_Eq.eq(eqDateS)(x.date)(y.date)&&Data_Eq.eq(eqDeclared)(x.declared)(y.declared)&&Data_Eq.eq(Data_Maybe.eqMaybe(EmmaMCR_Types_Core.eqPersonName))(x.name)(y.name)&&Data_Eq.eq(EmmaMCR_Types_Core.eqCRSid)(x.punter)(y.punter)}}),_DateS=function(dictProfunctor){return function($218){return Data_Lens_Iso_Newtype._Newtype(newtypeDateS)(newtypeDateS)(dictProfunctor)(Data_Lens_Iso.iso(function(v){return v.unDateS})(function(v){return{unDateS:v}})(dictProfunctor)($218))}},puntDate=function(dictStrong){return function($219){return Data_Lens_Iso_Newtype._Newtype(newtypePuntBooking)(newtypePuntBooking)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"date"}))()()(Data_Symbol.SProxy.value)(dictStrong)(_DateS(dictStrong.Profunctor0())($219)))}},keyedPuntBooking=Control_Apply.apply(Control_Apply.applyFn)(Data_Function.flip(Data_Tuple.Tuple.create))(Data_Lens_Getter.view(puntDate(Data_Lens_Internal_Forget.strongForget)));exports.Attended=Attended,exports.Cancelled=Cancelled,exports.Skipped=Skipped,exports.PuntBooking=PuntBooking,exports.makePuntBooking=function(punter){return function(date){return{punter:punter,name:Data_Maybe.Nothing.value,date:Data_Lens_Getter.viewOn(date)(Data_Lens_Iso.re(_DateS(Data_Lens_Internal_Re.profunctorRe(Data_Lens_Internal_Forget.profunctorForget)))),declared:Interested.value,attended:Data_Maybe.Nothing.value}}},exports.keyedPuntBooking=keyedPuntBooking,exports.puntPunter=function(dictStrong){return function($217){return Data_Lens_Iso_Newtype._Newtype(newtypePuntBooking)(newtypePuntBooking)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"punter"}))()()(Data_Symbol.SProxy.value)(dictStrong)($217))}},exports.puntName=function(dictStrong){return function($216){return Data_Lens_Iso_Newtype._Newtype(newtypePuntBooking)(newtypePuntBooking)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"name"}))()()(Data_Symbol.SProxy.value)(dictStrong)($216))}},exports.puntDate=puntDate,exports.puntDeclared=function(dictStrong){return function($215){return Data_Lens_Iso_Newtype._Newtype(newtypePuntBooking)(newtypePuntBooking)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"declared"}))()()(Data_Symbol.SProxy.value)(dictStrong)($215))}},exports.DateS=DateS,exports._DateS=_DateS,exports.Interested=Interested,exports.Booked=Booked,exports.toggleDeclared=function(v){if(v instanceof Interested)return Booked.value;if(v instanceof Booked)return Interested.value;throw new Error("Failed pattern match at EmmaMCR.Types.Punting line 161, column 1 - line 161, column 39: "+[v.constructor.name])},exports.eqAttended=eqAttended,exports.oldgenericAttended=oldgenericAttended,exports.eqPuntBooking=eqPuntBooking,exports.oldgenericPuntBooking=oldgenericPuntBooking,exports.newtypePuntBooking=newtypePuntBooking,exports.eqDateS=eqDateS,exports.newtypeDateS=newtypeDateS,exports.showDateS=showDateS,exports.oldGenericDateS=oldGenericDateS,exports.eqDeclared=eqDeclared,exports.oldgenericDeclared=oldgenericDeclared,exports.genericDeclared=genericDeclared,exports.showDeclared=showDeclared}(PS["EmmaMCR.Types.Punting"]=PS["EmmaMCR.Types.Punting"]||{}),function(exports){"use strict";exports._ajax=function(mkHeader,options,canceler,errback,callback){var platformSpecific={};return void 0!==module&&module.require?(platformSpecific.newXHR=function(){return new(module.require("xhr2"))},platformSpecific.fixupUrl=function(url){var urllib=module.require("url"),u=urllib.parse(url);return u.protocol=u.protocol||"http:",u.hostname=u.hostname||"localhost",urllib.format(u)}):(platformSpecific.newXHR=function(){return new XMLHttpRequest},platformSpecific.fixupUrl=function(url){return url||"/"}),platformSpecific.getResponse=function(xhr){return xhr.response},function(){var xhr=platformSpecific.newXHR(),fixedUrl=platformSpecific.fixupUrl(options.url);if(xhr.open(options.method||"GET",fixedUrl,!0,options.username,options.password),options.headers)try{for(var header,i=0;null!=(header=options.headers[i]);i++)xhr.setRequestHeader(header.field,header.value)}catch(e){errback(e)()}return xhr.onerror=function(){errback(new Error("AJAX request failed: "+options.method+" "+options.url))()},xhr.onload=function(){callback({status:xhr.status,headers:xhr.getAllResponseHeaders().split("\n").filter(function(header){return 0<header.length}).map(function(header){var i=header.indexOf(":");return mkHeader(header.substring(0,i))(header.substring(i+2))}),response:platformSpecific.getResponse(xhr)})()},xhr.responseType=options.responseType,xhr.withCredentials=options.withCredentials,xhr.send(options.content),canceler(xhr)}},exports._cancelAjax=function(xhr,cancelError,errback,callback){return function(){try{xhr.abort()}catch(e){return callback(!1)()}return callback(!0)()}}}(PS["Servant.PureScript.Affjax"]=PS["Servant.PureScript.Affjax"]||{}),function(exports){"use strict";PS["Control.Apply"],PS["Data.Eq"],PS["Data.Generic"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"],PS["Data.Semigroup"],PS["Data.Show"],PS["Data.Unit"],PS.Prelude;var ResponseHeader=function(){function ResponseHeader(value0,value1){this.value0=value0,this.value1=value1}return ResponseHeader.create=function(value0){return function(value1){return new ResponseHeader(value0,value1)}},ResponseHeader}();exports.responseHeader=function(field){return function(value){return new ResponseHeader(field,value)}}}(PS["Network.HTTP.ResponseHeader"]=PS["Network.HTTP.ResponseHeader"]||{}),function(exports){"use strict";var $foreign=PS["Servant.PureScript.Affjax"],Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Aff_Class=PS["Control.Monad.Aff.Class"],Control_Monad_Eff=PS["Control.Monad.Eff"],Control_Monad_Eff_Exception=PS["Control.Monad.Eff.Exception"],Control_Monad_Error_Class=PS["Control.Monad.Error.Class"],Data_Either=(PS["Control.Semigroupoid"],PS["DOM.XHR.Types"],PS["Data.Either"]),Data_Function=PS["Data.Function"],Data_Functor=(PS["Data.Function.Uncurried"],PS["Data.Functor"]),Data_Maybe=PS["Data.Maybe"],Data_Monoid=PS["Data.Monoid"],Data_Nullable=PS["Data.Nullable"],Data_Unit=PS["Data.Unit"],Network_HTTP_ResponseHeader=(PS["Network.HTTP.Affjax"],PS["Network.HTTP.ResponseHeader"]),UnexpectedHTTPStatus=(PS.Prelude,function(){function UnexpectedHTTPStatus(value0){this.value0=value0}return UnexpectedHTTPStatus.create=function(value0){return new UnexpectedHTTPStatus(value0)},UnexpectedHTTPStatus}()),ParsingError=function(){function ParsingError(value0){this.value0=value0}return ParsingError.create=function(value0){return new ParsingError(value0)},ParsingError}(),DecodingError=function(){function DecodingError(value0){this.value0=value0}return DecodingError.create=function(value0){return new DecodingError(value0)},DecodingError}(),ConnectionError=function(){function ConnectionError(value0){this.value0=value0}return ConnectionError.create=function(value0){return new ConnectionError(value0)},ConnectionError}(),defaultRequest={method:"GET",url:"",headers:[{field:"Accept",value:"application/json"},{field:"content-type",value:"application/json"}],content:Data_Nullable.toNullable(Data_Maybe.Nothing.value),responseType:"text",username:Data_Nullable.toNullable(Data_Maybe.Nothing.value),password:Data_Nullable.toNullable(Data_Maybe.Nothing.value),withCredentials:!1},cancelAjax=function(xhr){return function(err){return Control_Monad_Aff.makeAff(function(cb){return Data_Functor.voidRight(Control_Monad_Eff.functorEff)(Data_Monoid.mempty(Control_Monad_Aff.monoidCanceler))($foreign._cancelAjax(xhr,err,function($7){return cb(Data_Either.Left.create($7))},Data_Function.const(cb(new Data_Either.Right(Data_Unit.unit)))))})}},ajax=function(req){return function(eb){return function(cb){return $foreign._ajax(Network_HTTP_ResponseHeader.responseHeader,req,cancelAjax,eb,cb)}}};exports.UnexpectedHTTPStatus=UnexpectedHTTPStatus,exports.ParsingError=ParsingError,exports.DecodingError=DecodingError,exports.ConnectionError=ConnectionError,exports.makeAjaxError=function(req){return function(desc){return{request:req,description:desc}}},exports.defaultRequest=defaultRequest,exports.affjax=function(dictMonadError){return function(dictMonadAff){return function(req){return Control_Bind.composeKleisliFlipped(dictMonadAff.MonadEff0().Monad0().Bind1())(function(r){if(r instanceof Data_Either.Left)return Control_Monad_Error_Class.throwError(dictMonadError.MonadThrow0())({request:req,description:new ConnectionError(r.value0)});if(r instanceof Data_Either.Right)return Control_Applicative.pure(dictMonadAff.MonadEff0().Monad0().Applicative0())(r.value0);throw new Error("Failed pattern match at Servant.PureScript.Affjax line 90, column 21 - line 95, column 27: "+[r.constructor.name])})(function($8){return Control_Monad_Aff_Class.liftAff(dictMonadAff)((action=$8,Control_Monad_Error_Class.catchError(Control_Monad_Aff.monadErrorAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Either.Right.create)(action))(function(e){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Data_Either.Left(Control_Monad_Eff_Exception.message(e)))})));var action})(Control_Monad_Aff.makeAff(function(cb){return ajax(req)(function($9){return cb(Data_Either.Left.create($9))})(function($10){return cb(Data_Either.Right.create($10))})}))}}},exports.ajax=ajax,exports.cancelAjax=cancelAjax}(PS["Servant.PureScript.Affjax"]=PS["Servant.PureScript.Affjax"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"];var Data_Argonaut_Core=PS["Data.Argonaut.Core"],Data_Argonaut_Generic_Aeson=PS["Data.Argonaut.Generic.Aeson"],Data_Generic=(PS["Data.Either"],PS["Data.Function"],PS["Data.Generic"]),Data_Show=PS["Data.Show"],gDefaultEncodeHeader=(PS.Global,PS.Prelude,function(dictGeneric){return function(v){var v1=Data_Generic.toSpine(dictGeneric)(v);return v1 instanceof Data_Generic.SString?v1.value0:Data_Show.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Generic_Aeson.encodeJson(dictGeneric)(v))}}),gDefaultToURLPiece=function(dictGeneric){return gDefaultEncodeHeader(dictGeneric)};exports.SPSettings_=function(x){return x},exports.gDefaultToURLPiece=gDefaultToURLPiece,exports.gDefaultEncodeHeader=gDefaultEncodeHeader,exports.defaultSettings=function(params){return{encodeJson:function(dictGeneric){return Data_Argonaut_Generic_Aeson.encodeJson(dictGeneric)},decodeJson:function(dictGeneric){return Data_Argonaut_Generic_Aeson.decodeJson(dictGeneric)},toURLPiece:function(dictGeneric){return gDefaultToURLPiece(dictGeneric)},encodeHeader:function(dictGeneric){return gDefaultEncodeHeader(dictGeneric)},params:params}}}(PS["Servant.PureScript.Settings"]=PS["Servant.PureScript.Settings"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Monad_Error_Class=PS["Control.Monad.Error.Class"],Data_Argonaut_Core=(PS["Control.Semigroupoid"],PS["Data.Argonaut.Core"]),Data_Argonaut_Parser=PS["Data.Argonaut.Parser"],Data_Bifunctor=PS["Data.Bifunctor"],Data_Either=PS["Data.Either"],Data_Show=(PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"],PS["Data.Generic"],PS["Data.HeytingAlgebra"],PS["Data.Monoid"],PS["Data.Ord"],PS["Data.Semigroup"],PS["Data.Show"]),Servant_PureScript_Affjax=(PS["Network.HTTP.Affjax"],PS["Network.HTTP.StatusCode"],PS.Prelude,PS["Servant.PureScript.Affjax"]),throwLeft=(PS["Servant.PureScript.Settings"],function(dictMonadError){return function(v){if(v instanceof Data_Either.Left)return Control_Monad_Error_Class.throwError(dictMonadError.MonadThrow0())(v.value0);if(v instanceof Data_Either.Right)return Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0())(v.value0);throw new Error("Failed pattern match at Servant.PureScript.Util line 34, column 1 - line 34, column 63: "+[v.constructor.name])}}),reportError=function(err){return function(source){return function(msg){return err(msg+", source: '"+source+"'")}}},reportRequestError=function(req$prime){return function(err){return function(source){return function(msg){return Servant_PureScript_Affjax.makeAjaxError(req$prime)(reportError(err)(source)(msg))}}}},encodeURLPiece=function(dictGeneric){return function(v){return v.toURLPiece(dictGeneric)}};exports.getResult=function(dictGeneric){return function(dictMonadError){return function(req$prime){return function(decode){return function(resp){return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())(200<=resp.status&&resp.status<300?Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0())(resp.response):Control_Monad_Error_Class.throwError(dictMonadError.MonadThrow0())(Servant_PureScript_Affjax.makeAjaxError(req$prime)(new Servant_PureScript_Affjax.UnexpectedHTTPStatus(resp))))(function(v){return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())(throwLeft(dictMonadError)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(reportRequestError(req$prime)(Servant_PureScript_Affjax.ParsingError.create)(v))(Data_Argonaut_Parser.jsonParser(v))))(function(v1){return throwLeft(dictMonadError)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(reportRequestError(req$prime)(Servant_PureScript_Affjax.DecodingError.create)(Data_Show.show(Data_Argonaut_Core.showJson)(v1)))(decode(v1)))})})}}}}},exports.throwLeft=throwLeft,exports.encodeQueryItem=function(dictGeneric){return function(v){return function(fName){return function(val){return fName+"="+encodeURLPiece(dictGeneric)(v)(val)}}}},exports.encodeURLPiece=encodeURLPiece,exports.encodeHeader=function(dictGeneric){return function(v){return v.encodeHeader(dictGeneric)}},exports.reportRequestError=reportRequestError,exports.reportError=reportError}(PS["Servant.PureScript.Util"]=PS["Servant.PureScript.Util"]||{}),function(exports){"use strict";var Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad_Reader_Class=(PS["Control.Monad.Aff.Class"],PS["Control.Monad.Error.Class"],PS["Control.Monad.Reader.Class"]),Data_Argonaut_Core=(PS["Control.Semigroupoid"],PS["Data.Argonaut.Core"]),Data_Array=PS["Data.Array"],Data_Cookie=PS["Data.Cookie"],Data_Date=PS["Data.Date"],Data_Date_Component=PS["Data.Date.Component"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Generic=PS["Data.Generic"],Data_Lens_Getter=(PS["Data.Lens"],PS["Data.Lens.Getter"]),Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Re=PS["Data.Lens.Internal.Re"],Data_Lens_Iso=PS["Data.Lens.Iso"],Data_Maybe=PS["Data.Maybe"],Data_Nullable=PS["Data.Nullable"],Data_Semigroup=PS["Data.Semigroup"],Data_Show=PS["Data.Show"],Data_String=PS["Data.String"],EmmaMCR_Types_Auth=PS["EmmaMCR.Types.Auth"],EmmaMCR_Types_Bookings=PS["EmmaMCR.Types.Bookings"],EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],EmmaMCR_Types_Dinners=PS["EmmaMCR.Types.Dinners"],EmmaMCR_Types_Members=PS["EmmaMCR.Types.Members"],EmmaMCR_Types_Punting=PS["EmmaMCR.Types.Punting"],Servant_PureScript_Affjax=(PS["Network.HTTP.Affjax"],PS.Prelude,PS["Servant.PureScript.Affjax"]),Servant_PureScript_Util=(PS["Servant.PureScript.Settings"],PS["Servant.PureScript.Util"]),defaultRequest=(PS["UcamWebauth.Data.Internal"],function(){var $94={};for(var $95 in Servant_PureScript_Affjax.defaultRequest)({}).hasOwnProperty.call(Servant_PureScript_Affjax.defaultRequest,$95)&&($94[$95]=Servant_PureScript_Affjax.defaultRequest[$95]);return $94.withCredentials=!0,$94.headers=[{field:"Accept",value:"application/json"}],$94}()),putPuntingBookingByUserByDate=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(x_XSRF_TOKEN){return function(reqBody){return function(user){return function(date){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var reqUrl=v.params.baseURL+"punting/booking/"+Servant_PureScript_Util.encodeURLPiece(EmmaMCR_Types_Core.oldgenericCRSid)(v)(user)+"/"+Servant_PureScript_Util.encodeURLPiece(EmmaMCR_Types_Punting.oldGenericDateS)(v)(date),reqHeaders=[{field:"X-XSRF-TOKEN",value:Servant_PureScript_Util.encodeHeader(Data_Cookie.oldGenericToken)(v)(x_XSRF_TOKEN)},{field:"Content-Type",value:"application/json"}],encodeJson=v.encodeJson(EmmaMCR_Types_Punting.oldgenericPuntBooking),affReq=function(){var $219={};for(var $220 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$220)&&($219[$220]=defaultRequest[$220]);return $219.method="PUT",$219.url=reqUrl,$219.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$219.content=Data_Nullable.toNullable(Data_Maybe.Just.create(Data_Argonaut_Core.stringify(encodeJson(reqBody)))),$219}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(EmmaMCR_Types_Punting.oldgenericPuntBooking);return Servant_PureScript_Util.getResult(EmmaMCR_Types_Punting.oldgenericPuntBooking)(dictMonadError)(affReq)(decodeJson)(v1)})})}}}}}}};exports.SPParams_=function(x){return x},exports.defaultRequest=defaultRequest,exports.getLogin=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(x_XSRF_TOKEN){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var reqUrl=v.params.baseURL+"login",reqHeaders=[],affReq=function(){var $158={};for(var $159 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$159)&&($158[$159]=defaultRequest[$159]);return $158.method="GET",$158.url=reqUrl,$158.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$158}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(EmmaMCR_Types_Auth.oldGenericMCRUser);return Servant_PureScript_Util.getResult(EmmaMCR_Types_Auth.oldGenericMCRUser)(dictMonadError)(affReq)(decodeJson)(v1)})})}}}},exports.postDinners=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(x_XSRF_TOKEN){return function(reqBody){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var reqUrl=v.params.baseURL+"dinners",reqHeaders=[{field:"X-XSRF-TOKEN",value:Servant_PureScript_Util.encodeHeader(Data_Cookie.oldGenericToken)(v)(x_XSRF_TOKEN)},{field:"Content-Type",value:"application/json"}],encodeJson=v.encodeJson(EmmaMCR_Types_Dinners.oldGenericDinner),affReq=function(){var $192={};for(var $193 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$193)&&($192[$193]=defaultRequest[$193]);return $192.method="POST",$192.url=reqUrl,$192.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$192.content=Data_Nullable.toNullable(Data_Maybe.Just.create(Data_Argonaut_Core.stringify(encodeJson(reqBody)))),$192}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(EmmaMCR_Types_Dinners.oldGenericDinner);return Servant_PureScript_Util.getResult(EmmaMCR_Types_Dinners.oldGenericDinner)(dictMonadError)(affReq)(decodeJson)(v1)})})}}}}},exports.getDinnersByDinnerid=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(x_XSRF_TOKEN){return function(dinnerid){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var reqUrl=v.params.baseURL+"dinners/"+Servant_PureScript_Util.encodeURLPiece(EmmaMCR_Types_Dinners.oldgenericDinnerId)(v)(dinnerid),reqHeaders=[],affReq=function(){var $125={};for(var $126 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$126)&&($125[$126]=defaultRequest[$126]);return $125.method="GET",$125.url=reqUrl,$125.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$125}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(EmmaMCR_Types_Dinners.oldGenericDinner);return Servant_PureScript_Util.getResult(EmmaMCR_Types_Dinners.oldGenericDinner)(dictMonadError)(affReq)(decodeJson)(v1)})})}}}}},exports.putDinnersByDinnerid=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(x_XSRF_TOKEN){return function(reqBody){return function(dinnerid){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var reqUrl=v.params.baseURL+"dinners/"+Servant_PureScript_Util.encodeURLPiece(EmmaMCR_Types_Dinners.oldgenericDinnerId)(v)(dinnerid),reqHeaders=[{field:"X-XSRF-TOKEN",value:Servant_PureScript_Util.encodeHeader(Data_Cookie.oldGenericToken)(v)(x_XSRF_TOKEN)},{field:"Content-Type",value:"application/json"}],encodeJson=v.encodeJson(EmmaMCR_Types_Dinners.oldGenericDinner),affReq=function(){var $201={};for(var $202 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$202)&&($201[$202]=defaultRequest[$202]);return $201.method="PUT",$201.url=reqUrl,$201.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$201.content=Data_Nullable.toNullable(Data_Maybe.Just.create(Data_Argonaut_Core.stringify(encodeJson(reqBody)))),$201}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(EmmaMCR_Types_Dinners.oldGenericDinner);return Servant_PureScript_Util.getResult(EmmaMCR_Types_Dinners.oldGenericDinner)(dictMonadError)(affReq)(decodeJson)(v1)})})}}}}}},exports.putDinnersByDinneridBookingByUserid=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(x_XSRF_TOKEN){return function(reqBody){return function(dinnerid){return function(userid){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var reqUrl=v.params.baseURL+"dinners/"+Servant_PureScript_Util.encodeURLPiece(EmmaMCR_Types_Dinners.oldgenericDinnerId)(v)(dinnerid)+"/booking/"+Servant_PureScript_Util.encodeURLPiece(Data_Generic.genericString)(v)(EmmaMCR_Types_Core.foldUserId(Data_Show.show(EmmaMCR_Types_Core.showCRSid))(Control_Category.id(Control_Category.categoryFn))(userid)),reqHeaders=[{field:"X-XSRF-TOKEN",value:Servant_PureScript_Util.encodeHeader(Data_Cookie.oldGenericToken)(v)(x_XSRF_TOKEN)},{field:"Content-Type",value:"application/json"}],encodeJson=v.encodeJson(EmmaMCR_Types_Bookings.oldGenericGenericBooking(EmmaMCR_Types_Members.oldgenericMemberDetails)(EmmaMCR_Types_Dinners.oldgenericDinnerId)),affReq=function(){var $210={};for(var $211 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$211)&&($210[$211]=defaultRequest[$211]);return $210.method="PUT",$210.url=reqUrl,$210.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$210.content=Data_Nullable.toNullable(Data_Maybe.Just.create(Data_Argonaut_Core.stringify(encodeJson(reqBody)))),$210}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(EmmaMCR_Types_Bookings.oldGenericGenericBooking(EmmaMCR_Types_Members.oldgenericMemberDetails)(EmmaMCR_Types_Dinners.oldgenericDinnerId));return Servant_PureScript_Util.getResult(EmmaMCR_Types_Bookings.oldGenericGenericBooking(EmmaMCR_Types_Members.oldgenericMemberDetails)(EmmaMCR_Types_Dinners.oldgenericDinnerId))(dictMonadError)(affReq)(decodeJson)(v1)})})}}}}}}},exports.getDinnersByDinneridBookings=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(dinnerid){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var reqUrl=v.params.baseURL+"dinners/"+Servant_PureScript_Util.encodeURLPiece(EmmaMCR_Types_Dinners.oldgenericDinnerId)(v)(dinnerid)+"/bookings",reqHeaders=[],affReq=function(){var $141={};for(var $142 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$142)&&($141[$142]=defaultRequest[$142]);return $141.method="GET",$141.url=reqUrl,$141.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$141}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(Data_Generic.genericArray(EmmaMCR_Types_Bookings.oldGenericGenericBooking(EmmaMCR_Types_Members.oldgenericMemberDetails)(EmmaMCR_Types_Dinners.oldgenericDinnerId)));return Servant_PureScript_Util.getResult(Data_Generic.genericArray(EmmaMCR_Types_Bookings.oldGenericGenericBooking(EmmaMCR_Types_Members.oldgenericMemberDetails)(EmmaMCR_Types_Dinners.oldgenericDinnerId)))(dictMonadError)(affReq)(decodeJson)(v1)})})}}}},exports.getPuntingBookingByUserByDate=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(user){return function(date){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var reqUrl=v.params.baseURL+"punting/booking/"+Servant_PureScript_Util.encodeURLPiece(EmmaMCR_Types_Core.oldgenericCRSid)(v)(user)+"/"+Servant_PureScript_Util.encodeURLPiece(EmmaMCR_Types_Punting.oldGenericDateS)(v)(date),reqHeaders=[],affReq=function(){var $174={};for(var $175 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$175)&&($174[$175]=defaultRequest[$175]);return $174.method="GET",$174.url=reqUrl,$174.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$174}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(EmmaMCR_Types_Punting.oldgenericPuntBooking);return Servant_PureScript_Util.getResult(EmmaMCR_Types_Punting.oldgenericPuntBooking)(dictMonadError)(affReq)(decodeJson)(v1)})})}}}}},exports.putPuntingBooking=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(tok){return function(pb){return putPuntingBookingByUserByDate(dictMonadAsk)(dictMonadError)(dictMonadAff)(tok)(pb)(Data_Lens_Getter.viewOn(pb)(EmmaMCR_Types_Punting.puntPunter(Data_Lens_Internal_Forget.strongForget)))(Data_Lens_Getter.viewOn(pb)(function($225){return EmmaMCR_Types_Punting.puntDate(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Iso.re(EmmaMCR_Types_Punting._DateS(Data_Lens_Internal_Re.profunctorRe(Data_Lens_Internal_Forget.profunctorForget)))($225))}))}}}}},exports.putPuntingBookingByUserByDate=putPuntingBookingByUserByDate,exports.getPuntingBookings=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(user){return function(date){return function(month){return function(year){return function(upcoming){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var queryArgs=Data_Array.catMaybes([Data_Functor.map(Data_Maybe.functorMaybe)(Servant_PureScript_Util.encodeQueryItem(EmmaMCR_Types_Core.oldgenericCRSid)(v)("user"))(user),Data_Functor.map(Data_Maybe.functorMaybe)(Servant_PureScript_Util.encodeQueryItem(Data_Date.genericDate)(v)("date"))(date),Data_Functor.map(Data_Maybe.functorMaybe)(function($224){return Servant_PureScript_Util.encodeQueryItem(Data_Generic.genericString)(v)("month")(Data_Show.show(Data_Date_Component.showMonth)($224))})(month),Data_Functor.map(Data_Maybe.functorMaybe)(Servant_PureScript_Util.encodeQueryItem(Data_Date_Component.genericYear)(v)("year"))(year),Data_Functor.map(Data_Maybe.functorMaybe)(Servant_PureScript_Util.encodeQueryItem(Data_Generic.genericBool)(v)("upcoming"))(upcoming)]),queryString=Data_Array.null(queryArgs)?"":"?"+Data_String.joinWith("&")(queryArgs),reqUrl=v.params.baseURL+"punting/bookings"+queryString,reqHeaders=[],affReq=function(){var $183={};for(var $184 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$184)&&($183[$184]=defaultRequest[$184]);return $183.method="GET",$183.url=reqUrl,$183.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$183}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(Data_Generic.genericArray(EmmaMCR_Types_Punting.oldgenericPuntBooking));return Servant_PureScript_Util.getResult(Data_Generic.genericArray(EmmaMCR_Types_Punting.oldgenericPuntBooking))(dictMonadError)(affReq)(decodeJson)(v1)})})}}}}}}}},exports.getLogout=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var reqUrl=v.params.baseURL+"logout",reqHeaders=[],affReq=function(){var $166={};for(var $167 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$167)&&($166[$167]=defaultRequest[$167]);return $166.method="GET",$166.url=reqUrl,$166.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$166}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(Data_Generic.genericUnit);return Servant_PureScript_Util.getResult(Data_Generic.genericUnit)(dictMonadError)(affReq)(decodeJson)(v1)})})}}},exports.getEvents=function(dictMonadAsk){return function(dictMonadError){return function(dictMonadAff){return function(year){return function(term){return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function(v){var queryArgs=Data_Array.catMaybes([Data_Functor.map(Data_Maybe.functorMaybe)(Servant_PureScript_Util.encodeQueryItem(EmmaMCR_Types_Core.oldGenericYear)(v)("year"))(year),Data_Functor.map(Data_Maybe.functorMaybe)(Servant_PureScript_Util.encodeQueryItem(EmmaMCR_Types_Core.oldGenericTerm)(v)("term"))(term)]),queryString=Data_Array.null(queryArgs)?"":"?"+Data_String.joinWith("&")(queryArgs),reqUrl=v.params.baseURL+"events"+queryString,reqHeaders=[],affReq=function(){var $150={};for(var $151 in defaultRequest)({}).hasOwnProperty.call(defaultRequest,$151)&&($150[$151]=defaultRequest[$151]);return $150.method="GET",$150.url=reqUrl,$150.headers=Data_Semigroup.append(Data_Semigroup.semigroupArray)(defaultRequest.headers)(reqHeaders),$150}();return Control_Bind.bind(dictMonadAsk.Monad0().Bind1())(Servant_PureScript_Affjax.affjax(dictMonadError)(dictMonadAff)(affReq))(function(v1){var decodeJson=v.decodeJson(Data_Generic.genericArray(EmmaMCR_Types_Dinners.oldgenericDinnerMeta));return Servant_PureScript_Util.getResult(Data_Generic.genericArray(EmmaMCR_Types_Dinners.oldgenericDinnerMeta))(dictMonadError)(affReq)(decodeJson)(v1)})})}}}}}}(PS["EmmaMCR.Purescript"]=PS["EmmaMCR.Purescript"]||{}),function(exports){"use strict";var Browser_WebStorage=PS["Browser.WebStorage"],Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Monad_Aff_Class=(PS["Control.Monad.Aff"],PS["Control.Monad.Aff.AVar"],PS["Control.Monad.Aff.Class"]),Control_Monad_Error_Class=(PS["Control.Monad.Eff.Now"],PS["Control.Monad.Error.Class"]),Control_Monad_Reader_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Reader"],PS["Control.Monad.Reader.Class"],PS["Control.Monad.Reader.Trans"]),Data_Argonaut_Core=(PS["Control.Monad.Rec.Class"],PS["Control.Semigroupoid"],PS.DOM,PS["DOM.HTML.Types"],PS["Data.Argonaut"],PS["Data.Argonaut.Core"]),Data_Argonaut_Generic_Aeson=PS["Data.Argonaut.Generic.Aeson"],Data_Argonaut_Generic_Decode=PS["Data.Argonaut.Generic.Decode"],Data_Argonaut_Generic_Encode=PS["Data.Argonaut.Generic.Encode"],Data_Argonaut_Generic_Options=PS["Data.Argonaut.Generic.Options"],Data_Argonaut_Parser=PS["Data.Argonaut.Parser"],Data_DateTime=PS["Data.DateTime"],Data_Either=PS["Data.Either"],Data_Formatter_DateTime=PS["Data.Formatter.DateTime"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Generic=PS["Data.Generic"],Data_Maybe=PS["Data.Maybe"],Data_Show=PS["Data.Show"],Data_Symbol=PS["Data.Symbol"],Data_Unit=PS["Data.Unit"],EmmaMCR_Purescript=(PS["EmmaMCR.Config"],PS["EmmaMCR.Purescript"]),Extra_DateTime=PS["Extra.DateTime"],Forestay=PS.Forestay,Servant_PureScript_Affjax=(PS["Halogen.Aff"],PS["Network.HTTP.Affjax"],PS.Prelude,PS["Servant.PureScript.Affjax"]),Servant_PureScript_Settings=PS["Servant.PureScript.Settings"],APIConstraint=(PS["Type.Proxy"],function(MonadAff0,MonadAsk2,MonadRec1){this.MonadAff0=MonadAff0,this.MonadAsk2=MonadAsk2,this.MonadRec1=MonadRec1}),encoding=function(o){return function(v){return function(spine){return v instanceof Data_Generic.SigProd&&"Data.DateTime.DateTime"===v.value0?Data_Functor.map(Data_Maybe.functorMaybe)(function($58){return Data_Argonaut_Generic_Aeson.encodeJson(Data_Generic.genericString)(Data_Formatter_DateTime.format(Extra_DateTime.iso8601Format)($58))})(Data_Generic.fromSpine(Data_DateTime.genericDateTime)(spine)):Data_Argonaut_Generic_Aeson.userEncoding(o)(v)(spine)}}},decoding=function(o){return function(v){return function(j){return v instanceof Data_Generic.SigProd&&"Data.DateTime.DateTime"===v.value0?Data_Functor.map(Data_Maybe.functorMaybe)(function($59){return Data_Functor.map(Data_Either.functorEither)(Data_Generic.toSpine(Data_DateTime.genericDateTime))(Data_Formatter_DateTime.unformat(Extra_DateTime.iso8601Format)($59))})(Data_Either.hush(Data_Argonaut_Generic_Aeson.decodeJson(Data_Generic.genericString)(j))):Data_Argonaut_Generic_Aeson.userDecoding(o)(v)(j)}}},jsonOpts=Data_Argonaut_Generic_Options.Options(function(){var $49={};for(var $50 in Data_Argonaut_Generic_Aeson.options)({}).hasOwnProperty.call(Data_Argonaut_Generic_Aeson.options,$50)&&($49[$50]=Data_Argonaut_Generic_Aeson.options[$50]);return $49.userEncoding=encoding,$49.userDecoding=decoding,$49}()),psSettings=function(params){var v=Servant_PureScript_Settings.defaultSettings(params);return Servant_PureScript_Settings.SPSettings_(function(){var $53={};for(var $54 in v)({}).hasOwnProperty.call(v,$54)&&($53[$54]=v[$54]);return $53.encodeJson=function(dictGeneric){return function(dictGeneric){return Data_Argonaut_Generic_Encode.genericEncodeJson(dictGeneric)(jsonOpts)}(dictGeneric)},$53.decodeJson=function(dictGeneric){return function(dictGeneric){return Data_Argonaut_Generic_Decode.genericDecodeJson(dictGeneric)(jsonOpts)}(dictGeneric)},$53}())},cfg=function($60){return psSettings(EmmaMCR_Purescript.SPParams_({baseURL:$60.baseURL}))},aesonPrint=function(dictGeneric){return function($62){return Data_Show.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Generic_Encode.genericEncodeJson(dictGeneric)(jsonOpts)($62))}},aesonParse=function(dictGeneric){return Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Argonaut_Generic_Decode.genericDecodeJson(dictGeneric)(jsonOpts))(Data_Argonaut_Parser.jsonParser)};exports.APIConstraint=APIConstraint,exports.cfg=cfg,exports.concrete=function($61){return Data_Function.flip(Control_Monad_Reader_Trans.runReaderT)(cfg($61))},exports.aesonPrint=aesonPrint,exports.aesonParse=aesonParse,exports.psSettings=psSettings,exports.jsonOpts=jsonOpts,exports.encoding=encoding,exports.decoding=decoding,exports.noContent=function(dictMonadError){return Data_Function.flip(Control_Monad_Error_Class.catchError(dictMonadError))(function(v){return v.description instanceof Servant_PureScript_Affjax.ParsingError?Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0())(Data_Unit.unit):Control_Monad_Error_Class.throwError(dictMonadError.MonadThrow0())(v)})},exports.getSession=function(dictMonadAff){return function(dictIsSymbol){return function(dictGeneric){return function(proxy){return Control_Bind.bind(dictMonadAff.MonadEff0().Monad0().Bind1())(Forestay["liftAff'"](dictMonadAff)(Browser_WebStorage.getItem(Browser_WebStorage.storageSessionStorage)(Browser_WebStorage.sessionStorage)(Browser_WebStorage.StorageKey(Data_Symbol.reflectSymbol(dictIsSymbol)(proxy)))))(function(v){return Control_Applicative.pure(dictMonadAff.MonadEff0().Monad0().Applicative0())(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(function($66){return Data_Either.hush(aesonParse(dictGeneric)($66))})(v))})}}}},exports.setSession=function(dictMonadAff){return function(dictIsSymbol){return function(dictGeneric){return function(proxy){return function($64){return Forestay["liftAff'"](dictMonadAff)(Browser_WebStorage.setItem(Browser_WebStorage.storageSessionStorage)(Browser_WebStorage.sessionStorage)(Browser_WebStorage.StorageKey(Data_Symbol.reflectSymbol(dictIsSymbol)(proxy)))(aesonPrint(dictGeneric)($64)))}}}}},exports.clearSessionStore=function(dictMonadAff){return Forestay["liftAff'"](dictMonadAff)(Browser_WebStorage.clear(Browser_WebStorage.storageSessionStorage)(Browser_WebStorage.sessionStorage))},exports.getLocal=function(dictMonadAff){return function(dictIsSymbol){return function(dictGeneric){return function(proxy){return Control_Bind.bind(dictMonadAff.MonadEff0().Monad0().Bind1())(Forestay["liftAff'"](dictMonadAff)(Browser_WebStorage.getItem(Browser_WebStorage.storageLocalStorage)(Browser_WebStorage.localStorage)(Browser_WebStorage.StorageKey(Data_Symbol.reflectSymbol(dictIsSymbol)(proxy)))))(function(v){return Control_Applicative.pure(dictMonadAff.MonadEff0().Monad0().Applicative0())(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(function($65){return Data_Either.hush(aesonParse(dictGeneric)($65))})(v))})}}}},exports.setLocal=function(dictMonadAff){return function(dictIsSymbol){return function(dictGeneric){return function(proxy){return function($63){return Forestay["liftAff'"](dictMonadAff)(Browser_WebStorage.setItem(Browser_WebStorage.storageLocalStorage)(Browser_WebStorage.localStorage)(Browser_WebStorage.StorageKey(Data_Symbol.reflectSymbol(dictIsSymbol)(proxy)))(aesonPrint(dictGeneric)($63)))}}}}},exports.apiReaderT=function(dictMonadAff){return function(dictMonadRec){return new APIConstraint(function(){return Control_Monad_Aff_Class.monadAffReader(dictMonadAff)},function(){return Control_Monad_Reader_Trans.monadAskReaderT(dictMonadRec.Monad0())},function(){return Control_Monad_Reader_Trans.monadRecReaderT(dictMonadRec)})}}}(PS["EmmaMCR.Settings"]=PS["EmmaMCR.Settings"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Category=PS["Control.Category"],Data_Date=(PS["Control.Semigroupoid"],PS["Data.Date"]),Data_Date_Component=PS["Data.Date.Component"],Data_Either=(PS["Data.DateTime"],PS["Data.DateTime.Locale"],PS["Data.Either"]),Data_Enum=PS["Data.Enum"],Data_Eq=PS["Data.Eq"],Data_Function=(PS["Data.Formatter.DateTime"],PS["Data.Function"]),Data_Functor=PS["Data.Functor"],Data_Lens_Fold=(PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"],PS["Data.Lens"],PS["Data.Lens.Fold"]),Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Setter=PS["Data.Lens.Setter"],Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Ord=(PS["Data.Newtype"],PS["Data.Ord"]),Data_Ordering=PS["Data.Ordering"],Data_Profunctor=PS["Data.Profunctor"],Data_Ring=PS["Data.Ring"],Data_Semiring=PS["Data.Semiring"],Data_String=(PS["Data.Show"],PS["Data.String"]),Data_String_Yarn=PS["Data.String.Yarn"],EmmaMCR_Types_Core=(PS["Data.Symbol"],PS["EmmaMCR.Types.Core"]),EmmaMCR_Types_Dinners=PS["EmmaMCR.Types.Dinners"],Extra_DateTime=PS["Extra.DateTime"],YearTerm=(PS.Prelude,function(x){return x}),eqYearTerm=new Data_Eq.Eq(function(x){return function(y){return Data_Eq.eq(EmmaMCR_Types_Core.eqTerm)(x.term)(y.term)&&Data_Eq.eq(EmmaMCR_Types_Core.eqYear)(x.year)(y.year)}}),ordYearTerm=new Data_Ord.Ord(function(){return eqYearTerm},function(x){return function(y){var v=Data_Ord.compare(EmmaMCR_Types_Core.ordTerm)(x.term)(y.term);return v instanceof Data_Ordering.LT?Data_Ordering.LT.value:v instanceof Data_Ordering.GT?Data_Ordering.GT.value:Data_Ord.compare(EmmaMCR_Types_Core.ordYear)(x.year)(y.year)}}),enumYearTerm=new Data_Enum.Enum(function(){return ordYearTerm},function(v){return v.term instanceof EmmaMCR_Types_Core.Lent?Control_Applicative.pure(Data_Maybe.applicativeMaybe)({year:Data_Lens_Setter.over(EmmaMCR_Types_Core._Year(Data_Profunctor.profunctorFn))(Data_Function.flip(Data_Ring.sub(Data_Ring.ringInt))(1))(v.year),term:EmmaMCR_Types_Core.Michaelmas.value}):Data_Functor.map(Data_Maybe.functorMaybe)(function($45){return YearTerm((v1=$45,{year:v.year,term:v1}));var v1})(Data_Enum.pred(EmmaMCR_Types_Core.enumTerm)(v.term))},function(v){return v.term instanceof EmmaMCR_Types_Core.Michaelmas?Control_Applicative.pure(Data_Maybe.applicativeMaybe)({year:Data_Lens_Setter.over(EmmaMCR_Types_Core._Year(Data_Profunctor.profunctorFn))(Data_Semiring.add(Data_Semiring.semiringInt)(1))(v.year),term:EmmaMCR_Types_Core.Lent.value}):Data_Functor.map(Data_Maybe.functorMaybe)(function($46){return YearTerm((v1=$46,{year:v.year,term:v1}));var v1})(Data_Enum.succ(EmmaMCR_Types_Core.enumTerm)(v.term))}),dDateTime=function(f){return function(dm){return Data_Either.either(function(v){return"TBC"})(Control_Category.id(Control_Category.categoryFn))(Extra_DateTime.formatZ(Data_Lens_Getter.viewOn(dm)(function($48){return EmmaMCR_Types_Dinners.dinnerTimeZone(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._Timezone(Data_Lens_Internal_Forget.profunctorForget)($48))}))(f)(Data_Lens_Getter.viewOn(dm)(EmmaMCR_Types_Dinners.dinnerDate(Data_Lens_Internal_Forget.strongForget))))}},dTime=dDateTime(Extra_DateTime.timeFormat),dDate=dDateTime(Extra_DateTime.dateDisplayFormat);exports.dTime=dTime,exports.dDate=dDate,exports.dinnerLocalDateTime=function(dm){return Data_Lens_Fold.previewOn({dateTime:Data_Lens_Getter.viewOn(dm)(EmmaMCR_Types_Dinners.dinnerDate(Data_Lens_Internal_Forget.strongForget)),timeZone:Data_Lens_Getter.viewOn(dm)(function($47){return EmmaMCR_Types_Dinners.dinnerTimeZone(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._Timezone(Data_Lens_Internal_Forget.profunctorForget)($47))})})(Extra_DateTime.localized(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)))},exports.toClassName=function($44){return Data_String.joinWith("-")(Data_Functor.map(Data_Functor.functorArray)(Data_String.toLower)(Data_String_Yarn.words($44)))},exports.isTerm=function(dt){var v=Data_Date.month(dt);if(v instanceof Data_Date_Component.January)return EmmaMCR_Types_Core.Lent.value;if(v instanceof Data_Date_Component.February)return EmmaMCR_Types_Core.Lent.value;if(v instanceof Data_Date_Component.March)return EmmaMCR_Types_Core.Lent.value;if(v instanceof Data_Date_Component.April)return EmmaMCR_Types_Core.Easter.value;if(v instanceof Data_Date_Component.May)return EmmaMCR_Types_Core.Easter.value;if(v instanceof Data_Date_Component.June)return EmmaMCR_Types_Core.Easter.value;if(v instanceof Data_Date_Component.July)return EmmaMCR_Types_Core.LongVac.value;if(v instanceof Data_Date_Component.August)return EmmaMCR_Types_Core.LongVac.value;if(v instanceof Data_Date_Component.September)return EmmaMCR_Types_Core.LongVac.value;if(v instanceof Data_Date_Component.October)return EmmaMCR_Types_Core.Michaelmas.value;if(v instanceof Data_Date_Component.November)return EmmaMCR_Types_Core.Michaelmas.value;if(v instanceof Data_Date_Component.December)return EmmaMCR_Types_Core.Michaelmas.value;throw new Error("Failed pattern match at EmmaMCR.Data line 44, column 13 - line 56, column 26: "+[v.constructor.name])},exports.YearTerm=YearTerm,exports.eqYearTerm=eqYearTerm,exports.ordYearTerm=ordYearTerm,exports.enumYearTerm=enumYearTerm}(PS["EmmaMCR.Data"]=PS["EmmaMCR.Data"]||{}),function(exports){"use strict";var Data_Eq=PS["Data.Eq"],Data_Ord=PS["Data.Ord"],OrdBox=(PS.Prelude,function(){function OrdBox(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return OrdBox.create=function(value0){return function(value1){return function(value2){return new OrdBox(value0,value1,value2)}}},OrdBox}()),eqOrdBox=new Data_Eq.Eq(function(v){return function(v1){return v.value0(v.value2)(v1.value2)}}),ordOrdBox=new Data_Ord.Ord(function(){return eqOrdBox},function(v){return function(v1){return v.value1(v.value2)(v1.value2)}});exports.mkOrdBox=function(dictOrd){return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd))},exports.unOrdBox=function(v){return v.value2},exports.eqOrdBox=eqOrdBox,exports.ordOrdBox=ordOrdBox}(PS["Halogen.Data.OrdBox"]=PS["Halogen.Data.OrdBox"]||{}),function(exports){"use strict";var Data_Bifunctor=PS["Data.Bifunctor"],Data_Functor=(PS["Data.Eq"],PS["Data.Foreign"],PS["Data.Functor"]),RefUpdate=(PS["Data.Maybe"],PS["Data.Newtype"],PS["Data.Ord"],PS.Prelude,function(){function RefUpdate(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return RefUpdate.create=function(value0){return function(value1){return function(value2){return new RefUpdate(value0,value1,value2)}}},RefUpdate}()),Query=function(){function Query(value0){this.value0=value0}return Query.create=function(value0){return new Query(value0)},Query}(),bifunctorInputF=new Data_Bifunctor.Bifunctor(function(f){return function(g){return function(v){if(v instanceof RefUpdate)return new RefUpdate(v.value0,v.value1,f(v.value2));if(v instanceof Query)return new Query(g(v.value0));throw new Error("Failed pattern match at Halogen.Query.InputF line 21, column 15 - line 23, column 27: "+[v.constructor.name])}}}),functorInputF=new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorInputF));exports.RefUpdate=RefUpdate,exports.Query=Query,exports.bifunctorInputF=bifunctorInputF,exports.functorInputF=functorInputF}(PS["Halogen.Query.InputF"]=PS["Halogen.Query.InputF"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Semigroupoid"],PS["Data.Functor"],PS["Data.Tuple"],PS["Data.Unit"],PS["Data.Void"],PS.Prelude;var Step=function(){function Step(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return Step.create=function(value0){return function(value1){return function(value2){return new Step(value0,value1,value2)}}},Step}();exports.Step=Step,exports.extract=function(v){return v.value0},exports.step=function(v){return v.value1},exports.halt=function(v){return v.value2}}(PS["Halogen.VDom.Machine"]=PS["Halogen.VDom.Machine"]||{}),function(exports){"use strict";PS["Control.Apply"],PS["Control.Category"],PS["Control.Semigroupoid"];var Data_Bifunctor=PS["Data.Bifunctor"],Data_Eq=PS["Data.Eq"],Data_Functor=PS["Data.Functor"],Data_Tuple=(PS["Data.Generic"],PS["Data.HeytingAlgebra"],PS["Data.Maybe"],PS["Data.Newtype"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Tuple"]),Unsafe_Coerce=(PS["Data.Unit"],PS.Prelude,PS["Unsafe.Coerce"]),ElemSpec=function(){function ElemSpec(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return ElemSpec.create=function(value0){return function(value1){return function(value2){return new ElemSpec(value0,value1,value2)}}},ElemSpec}(),Text=function(){function Text(value0){this.value0=value0}return Text.create=function(value0){return new Text(value0)},Text}(),Elem=function(){function Elem(value0,value1){this.value0=value0,this.value1=value1}return Elem.create=function(value0){return function(value1){return new Elem(value0,value1)}},Elem}(),Keyed=function(){function Keyed(value0,value1){this.value0=value0,this.value1=value1}return Keyed.create=function(value0){return function(value1){return new Keyed(value0,value1)}},Keyed}(),Widget=function(){function Widget(value0){this.value0=value0}return Widget.create=function(value0){return new Widget(value0)},Widget}(),Grafted=function(){function Grafted(value0){this.value0=value0}return Grafted.create=function(value0){return new Grafted(value0)},Grafted}(),Graft=function(){function Graft(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return Graft.create=function(value0){return function(value1){return function(value2){return new Graft(value0,value1,value2)}}},Graft}(),unGraft=function(f){return function($124){return f($124)}},graft=Unsafe_Coerce.unsafeCoerce,functorElemSpec=new Data_Functor.Functor(function(f){return function(v){return new ElemSpec(v.value0,v.value1,f(v.value2))}}),eqElemName=Data_Eq.eqString,bifunctorGraft=new Data_Bifunctor.Bifunctor(function(f){return function(g){return unGraft(function(v){return graft(new Graft(function($126){return f(v.value0($126))},function($127){return g(v.value1($127))},v.value2))})}}),bifunctorVDom=new Data_Bifunctor.Bifunctor(function(f){return function(g){return function(v){return v instanceof Text?new Text(v.value0):new Grafted(v instanceof Grafted?Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0):graft(new Graft(f,g,v)))}}}),runGraft=unGraft(function(v){var go=function(v2){if(v2 instanceof Text)return new Text(v2.value0);if(v2 instanceof Elem)return new Elem(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0),Data_Functor.map(Data_Functor.functorArray)(go)(v2.value1));if(v2 instanceof Keyed)return new Keyed(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0),Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value1));if(v2 instanceof Widget)return new Widget(v.value1(v2.value0));if(v2 instanceof Grafted)return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));throw new Error("Failed pattern match at Halogen.VDom.Types line 75, column 7 - line 75, column 27: "+[v2.constructor.name])};return go(v.value2)});exports.Text=Text,exports.Elem=Elem,exports.Keyed=Keyed,exports.Widget=Widget,exports.Grafted=Grafted,exports.Graft=Graft,exports.graft=graft,exports.unGraft=unGraft,exports.runGraft=runGraft,exports.ElemSpec=ElemSpec,exports.bifunctorVDom=bifunctorVDom,exports.bifunctorGraft=bifunctorGraft,exports.functorElemSpec=functorElemSpec,exports.eqElemName=eqElemName}(PS["Halogen.VDom.Types"]=PS["Halogen.VDom.Types"]||{}),function(exports){"use strict";exports.unsafeGetAny=function(key,obj){return obj[key]},exports.unsafeHasAny=function(key,obj){return obj.hasOwnProperty(key)},exports.unsafeSetAny=function(key,val,obj){return function(){obj[key]=val}},exports.forE=function(a,f){return function(){for(var b=[],i=0;i<a.length;i++)b.push(f(i,a[i])());return b}},exports.forInE=function(o,f){return function(){for(var ks=Object.keys(o),i=0;i<ks.length;i++){var k=ks[i];f(k,o[k])()}}},exports.diffWithIxE=function(a1,a2,f1,f2,f3){return function(){for(var a3=[],l1=a1.length,l2=a2.length,i=0;;){if(i<l1)i<l2?a3.push(f1(i,a1[i],a2[i])()):f2(i,a1[i])();else{if(!(i<l2))break;a3.push(f3(i,a2[i])())}i++}return a3}},exports.strMapWithIxE=function(as,fk,f){return function(){for(var o={},i=0;i<as.length;i++){var a=as[i],k=fk(a);o[k]=f(k,i,a)()}return o}},exports.diffWithKeyAndIxE=function(o1,as,fk,f1,f2,f3){return function(){for(var o2={},i=0;i<as.length;i++){var a=as[i],k=fk(a);o1.hasOwnProperty(k)?o2[k]=f1(k,i,o1[k],a)():o2[k]=f3(k,i,a)()}for(var k in o1)k in o2||f2(k,o1[k])();return o2}},exports.refEq=function(a,b){return a===b},exports.createTextNode=function(s,doc){return function(){return doc.createTextNode(s)}},exports.setTextContent=function(s,n){return function(){n.textContent=s}},exports.createElement=function(ns,name,doc){return function(){return null!=ns?doc.createElementNS(ns,name):doc.createElement(name)}},exports.insertChildIx=function(i,a,b){return function(){var n=b.childNodes.item(i)||null;n!==a&&b.insertBefore(a,n)}},exports.removeChild=function(a,b){return function(){b&&a.parentNode===b&&b.removeChild(a)}},exports.unsafeParent=function(a){return a.parentNode},exports.setAttribute=function(ns,attr,val,el){return function(){null!=ns?el.setAttributeNS(ns,attr,val):el.setAttribute(attr,val)}},exports.removeAttribute=function(ns,attr,el){return function(){null!=ns?el.removeAttributeNS(ns,attr):el.removeAttribute(attr)}},exports.addEventListener=function(ev,listener,el){return function(){el.addEventListener(ev,listener,!1)}},exports.removeEventListener=function(ev,listener,el){return function(){el.removeEventListener(ev,listener,!1)}},exports.jsUndefined=void 0}(PS["Halogen.VDom.Util"]=PS["Halogen.VDom.Util"]||{}),function(exports){"use strict";var $foreign=PS["Halogen.VDom.Util"],Control_Applicative=PS["Control.Applicative"],Control_Monad_Eff=PS["Control.Monad.Eff"],Data_StrMap_ST=(PS["Control.Monad.Eff.Ref"],PS.DOM,PS["DOM.Event.EventTarget"],PS["DOM.Node.Types"],PS["Data.Function.Uncurried"],PS["Data.Nullable"],PS["Data.StrMap"],PS["Data.StrMap.ST"]),Data_Unit=PS["Data.Unit"],Unsafe_Coerce=(PS["Halogen.VDom.Types"],PS.Prelude,PS["Unsafe.Coerce"]),unsafeLookup=$foreign.unsafeGetAny,unsafeFreeze=Unsafe_Coerce.unsafeCoerce,pokeMutMap=$foreign.unsafeSetAny,newMutMap=Data_StrMap_ST.new,effUnit=Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit),effPure=Control_Applicative.pure(Control_Monad_Eff.applicativeEff);exports.effPure=effPure,exports.effUnit=effUnit,exports.newMutMap=newMutMap,exports.pokeMutMap=pokeMutMap,exports.unsafeFreeze=unsafeFreeze,exports.unsafeLookup=unsafeLookup,exports.unsafeGetAny=$foreign.unsafeGetAny,exports.unsafeHasAny=$foreign.unsafeHasAny,exports.unsafeSetAny=$foreign.unsafeSetAny,exports.forE=$foreign.forE,exports.forInE=$foreign.forInE,exports.diffWithIxE=$foreign.diffWithIxE,exports.diffWithKeyAndIxE=$foreign.diffWithKeyAndIxE,exports.strMapWithIxE=$foreign.strMapWithIxE,exports.refEq=$foreign.refEq,exports.createTextNode=$foreign.createTextNode,exports.setTextContent=$foreign.setTextContent,exports.createElement=$foreign.createElement,exports.insertChildIx=$foreign.insertChildIx,exports.removeChild=$foreign.removeChild,exports.unsafeParent=$foreign.unsafeParent,exports.setAttribute=$foreign.setAttribute,exports.removeAttribute=$foreign.removeAttribute,exports.addEventListener=$foreign.addEventListener,exports.removeEventListener=$foreign.removeEventListener,exports.jsUndefined=$foreign.jsUndefined}(PS["Halogen.VDom.Util"]=PS["Halogen.VDom.Util"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Bind"],PS["Control.Monad.Eff"];var Control_Monad_Eff_Ref=PS["Control.Monad.Eff.Ref"],DOM_Event_EventTarget=(PS.DOM,PS["DOM.Event.EventTarget"]),Data_Foreign=(PS["DOM.Event.Types"],PS["DOM.Node.Types"],PS["Data.Eq"],PS["Data.Foreign"]),Data_Functor=(PS["Data.Function.Uncurried"],PS["Data.Functor"]),Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Nullable=PS["Data.Nullable"],Data_StrMap=(PS["Data.Semigroup"],PS["Data.StrMap"]),Data_Tuple=PS["Data.Tuple"],Data_Unit=PS["Data.Unit"],Halogen_VDom_Machine=(PS["Halogen.VDom"],PS["Halogen.VDom.Machine"]),Halogen_VDom_Util=(PS["Halogen.VDom.Types"],PS["Halogen.VDom.Util"]),Unsafe_Coerce=(PS.Prelude,PS["Unsafe.Coerce"]),Created=function(){function Created(value0){this.value0=value0}return Created.create=function(value0){return new Created(value0)},Created}(),Removed=function(){function Removed(value0){this.value0=value0}return Removed.create=function(value0){return new Removed(value0)},Removed}(),Attribute=function(){function Attribute(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return Attribute.create=function(value0){return function(value1){return function(value2){return new Attribute(value0,value1,value2)}}},Attribute}(),Property=function(){function Property(value0,value1){this.value0=value0,this.value1=value1}return Property.create=function(value0){return function(value1){return new Property(value0,value1)}},Property}(),Handler=function(){function Handler(value0,value1){this.value0=value0,this.value1=value1}return Handler.create=function(value0){return function(value1){return new Handler(value0,value1)}},Handler}(),Ref=function(){function Ref(value0){this.value0=value0}return Ref.create=function(value0){return new Ref(value0)},Ref}(),unsafeGetProperty=Halogen_VDom_Util.unsafeGetAny,setProperty=Halogen_VDom_Util.unsafeSetAny,propToStrKey=function(v){if(v instanceof Attribute&&v.value0 instanceof Data_Maybe.Just)return"attr/"+v.value0.value0+":"+v.value1;if(v instanceof Attribute)return"attr/:"+v.value1;if(v instanceof Property)return"prop/"+v.value0;if(v instanceof Handler)return"handler/"+v.value0;if(v instanceof Ref)return"ref";throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 179, column 16 - line 186, column 1: "+[v.constructor.name])},propFromString=Unsafe_Coerce.unsafeCoerce,propFromInt=Unsafe_Coerce.unsafeCoerce,functorProp=new Data_Functor.Functor(function(f){return function(v){return v instanceof Handler?new Handler(v.value0,Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1)):v instanceof Ref?new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0)):v}});exports.Attribute=Attribute,exports.Property=Property,exports.Handler=Handler,exports.Ref=Ref,exports.Created=Created,exports.Removed=Removed,exports.propFromString=propFromString,exports.propFromInt=propFromInt,exports.buildProp=function(emit){return function(el){var removeProp=function(prevEvents){return function(v,v1){if(v1 instanceof Attribute)return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0),v1.value1,el);if(v1 instanceof Property)return function(key,el){return"string"===Data_Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key,el))?Halogen_VDom_Util.unsafeSetAny(key,"",el):"rowSpan"===key?Halogen_VDom_Util.unsafeSetAny(key,1,el):"colSpan"===key?Halogen_VDom_Util.unsafeSetAny(key,1,el):Halogen_VDom_Util.unsafeSetAny(key,Halogen_VDom_Util.jsUndefined,el)}(v1.value0,el);if(v1 instanceof Handler){var handler=Halogen_VDom_Util.unsafeLookup(v1.value0,prevEvents);return Halogen_VDom_Util.removeEventListener(v1.value0,Data_Tuple.fst(handler),el)}if(v1 instanceof Ref)return Halogen_VDom_Util.effUnit;throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 166, column 5 - line 176, column 21: "+[v1.constructor.name])}},mbEmit=Data_Maybe.maybe(Halogen_VDom_Util.effUnit)(emit),done=function(ps){var v=Data_StrMap.lookup("ref")(ps);return v instanceof Data_Maybe.Just&&v.value0 instanceof Ref?mbEmit(v.value0.value0(new Removed(el))):Halogen_VDom_Util.effUnit},applyProp=function(events){return function(v,v1,v2){if(v2 instanceof Attribute)return function(){return Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0),v2.value1,v2.value2,el)(),v2};if(v2 instanceof Property)return function(){return setProperty(v2.value0,v2.value1,el)(),v2};if(v2 instanceof Handler){var v3=Halogen_VDom_Util.unsafeGetAny(v2.value0,events);return Halogen_VDom_Util.unsafeHasAny(v2.value0,events)?function(){return Control_Monad_Eff_Ref.writeRef(Data_Tuple.snd(v3))(v2.value1)(),v2}:function(){var v4=Control_Monad_Eff_Ref.newRef(v2.value1)(),listener=DOM_Event_EventTarget.eventListener(function(ev){return function(){var v5=Control_Monad_Eff_Ref.readRef(v4)();return mbEmit(v5(ev))()}});return Halogen_VDom_Util.pokeMutMap(v2.value0,new Data_Tuple.Tuple(listener,v4),events)(),Halogen_VDom_Util.addEventListener(v2.value0,listener,el)(),v2}}if(v2 instanceof Ref)return function(){return mbEmit(v2.value0(new Created(el)))(),v2};throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 107, column 5 - line 130, column 15: "+[v2.constructor.name])}},patch=function(prevEvents,ps1){return function(ps2){return function(){var v=Halogen_VDom_Util.newMutMap(),onThis=removeProp(prevEvents),onThese=function(prevEvents,events){return function(v,v1,v11,v2){if(v11 instanceof Attribute&&v2 instanceof Attribute)return v11.value2!==v2.value2?function(){return Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0),v2.value1,v2.value2,el)(),v2}:Halogen_VDom_Util.effPure(v2);if(v11 instanceof Property&&v2 instanceof Property){if(Halogen_VDom_Util.refEq(v11.value1,v2.value1))return Halogen_VDom_Util.effPure(v2);if("value"===v2.value0){var elVal=unsafeGetProperty("value",el);return Halogen_VDom_Util.refEq(elVal,v2.value1)?Halogen_VDom_Util.effPure(v2):function(){return setProperty(v2.value0,v2.value1,el)(),v2}}return function(){return setProperty(v2.value0,v2.value1,el)(),v2}}if(v11 instanceof Handler&&v2 instanceof Handler){var handler=Halogen_VDom_Util.unsafeLookup(v2.value0,prevEvents);return function(){return Control_Monad_Eff_Ref.writeRef(Data_Tuple.snd(handler))(v2.value1)(),Halogen_VDom_Util.pokeMutMap(v2.value0,handler,events)(),v2}}return Halogen_VDom_Util.effPure(v2)}}(prevEvents,v),onThat=applyProp(v),v1=Halogen_VDom_Util.diffWithKeyAndIxE(ps1,ps2,propToStrKey,onThese,onThis,onThat)();return new Halogen_VDom_Machine.Step(Data_Unit.unit,patch(Halogen_VDom_Util.unsafeFreeze(v),v1),done(v1))}}};return function(ps1){return function(){var v=Halogen_VDom_Util.newMutMap(),v1=Halogen_VDom_Util.strMapWithIxE(ps1,propToStrKey,applyProp(v))();return new Halogen_VDom_Machine.Step(Data_Unit.unit,patch(Halogen_VDom_Util.unsafeFreeze(v),v1),done(v1))}}}},exports.functorProp=functorProp}(PS["Halogen.VDom.DOM.Prop"]=PS["Halogen.VDom.DOM.Prop"]||{}),function(exports){"use strict";PS["Control.Apply"],PS["Control.Semigroupoid"],PS["DOM.Event.Types"],PS["DOM.HTML.Indexed.ButtonType"],PS["DOM.HTML.Indexed.CrossOriginValue"],PS["DOM.HTML.Indexed.DirValue"],PS["DOM.HTML.Indexed.FormMethod"];var DOM_HTML_Indexed_InputType=PS["DOM.HTML.Indexed.InputType"],DOM_HTML_Indexed_StepValue=(PS["DOM.HTML.Indexed.KindValue"],PS["DOM.HTML.Indexed.MenuType"],PS["DOM.HTML.Indexed.MenuitemType"],PS["DOM.HTML.Indexed.OnOff"],PS["DOM.HTML.Indexed.OrderedListType"],PS["DOM.HTML.Indexed.PreloadValue"],PS["DOM.HTML.Indexed.ScopeValue"],PS["DOM.HTML.Indexed.StepValue"]),Data_Bifunctor=(PS["DOM.HTML.Indexed.WrapValue"],PS["DOM.Node.Types"],PS["Data.Bifunctor"]),Data_Functor=(PS["Data.Eq"],PS["Data.Function"],PS["Data.Functor"]),Data_Newtype=(PS["Data.Generic"],PS["Data.Maybe"],PS["Data.MediaType"],PS["Data.Newtype"]),Halogen_Query_InputF=(PS["Data.Ord"],PS["Data.Semigroup"],PS["Data.Tuple"],PS["Data.Unit"],PS["Halogen.Query.InputF"]),Halogen_VDom_DOM_Prop=(PS["Halogen.VDom"],PS["Halogen.VDom.DOM.Prop"]),Halogen_VDom_Types=PS["Halogen.VDom.Types"],HTML=(PS.Prelude,PS["Unsafe.Coerce"],function(x){return x}),ClassName=function(x){return x},IsProp=function(toPropValue){this.toPropValue=toPropValue},toPropValue=function(dict){return dict.toPropValue},stringIsProp=new IsProp(Halogen_VDom_DOM_Prop.propFromString),stepValueIsProp=new IsProp(function($55){return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($55))}),newtypeClassName=new Data_Newtype.Newtype(function(n){return n},ClassName),intIsProp=new IsProp(Halogen_VDom_DOM_Prop.propFromInt),inputTypeIsProp=new IsProp(function($67){return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($67))}),handler=Halogen_VDom_DOM_Prop.Handler.create,bifunctorHTML=new Data_Bifunctor.Bifunctor(function(f){return function(g){return function(v){return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(g))))(f)(v)}}});exports.HTML=HTML,exports.slot=function($56){return HTML(Halogen_VDom_Types.Widget.create($56))},exports.text=function($54){return HTML(Halogen_VDom_Types.Text.create($54))},exports.element=function(ns){return function(name){return function(props){return function(children){return new Halogen_VDom_Types.Elem(new Halogen_VDom_Types.ElemSpec(ns,name,props),children)}}}},exports.prop=function(dictIsProp){return function(v){return function($59){return Halogen_VDom_DOM_Prop.Property.create(v)(toPropValue(dictIsProp)($59))}}},exports.attr=function(ns){return function(v){return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v)}},exports.handler=handler,exports.IsProp=IsProp,exports.toPropValue=toPropValue,exports.ClassName=ClassName,exports.bifunctorHTML=bifunctorHTML,exports.stringIsProp=stringIsProp,exports.intIsProp=intIsProp,exports.inputTypeIsProp=inputTypeIsProp,exports.stepValueIsProp=stepValueIsProp,exports.newtypeClassName=newtypeClassName}(PS["Halogen.HTML.Core"]=PS["Halogen.HTML.Core"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Bind"];var Control_Coroutine=PS["Control.Coroutine"],Control_Monad_Free_Trans=(PS["Control.Monad.Aff"],PS["Control.Monad.Aff.AVar"],PS["Control.Monad.Aff.Class"],PS["Control.Monad.Eff"],PS["Control.Monad.Eff.Class"],PS["Control.Monad.Eff.Exception"],PS["Control.Monad.Free.Trans"]),Data_Eq=(PS["Control.Monad.Rec.Class"],PS["Control.Monad.Trans.Class"],PS["Control.Semigroupoid"],PS["Data.Bifunctor"],PS["Data.Either"],PS["Data.Eq"]),Data_Functor=(PS["Data.Foldable"],PS["Data.Function"],PS["Data.Functor"]),Listening=(PS["Data.Maybe"],PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Unit"],PS.Prelude,function(){function Listening(){}return Listening.value=new Listening,Listening}()),Done=function(){function Done(){}return Done.value=new Done,Done}(),EventSource=function(x){return x},eqSubscribeStatus=new Data_Eq.Eq(function(x){return function(y){return x instanceof Listening&&y instanceof Listening||x instanceof Done&&y instanceof Done}});exports.EventSource=EventSource,exports.Listening=Listening,exports.Done=Done,exports.unEventSource=function(v){return v},exports.hoist=function(dictFunctor){return function(nat){return function(v){return EventSource(Data_Functor.map(dictFunctor)(function(e){return{producer:Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictFunctor)(nat)(e.producer),done:nat(e.done)}})(nat(v)))}}},exports.eqSubscribeStatus=eqSubscribeStatus}(PS["Halogen.Query.EventSource"]=PS["Halogen.Query.EventSource"]||{}),function(exports){"use strict";PS["Control.Category"],PS["Control.Monad.Aff"],PS["Control.Monad.Eff.Exception"],PS["Data.Function"],PS["Data.Functor"],PS.Prelude;var Unsafe_Coerce=PS["Unsafe.Coerce"],ForkF=function(){function ForkF(value0,value1){this.value0=value0,this.value1=value1}return ForkF.create=function(value0){return function(value1){return new ForkF(value0,value1)}},ForkF}(),unFork=Unsafe_Coerce.unsafeCoerce,mkFork=Unsafe_Coerce.unsafeCoerce;exports.ForkF=ForkF,exports.mkFork=mkFork,exports.unFork=unFork,exports.hoistFork=function(nat){return unFork(function(v){return mkFork(new ForkF(nat(v.value0),v.value1))})}}(PS["Halogen.Query.ForkF"]=PS["Halogen.Query.ForkF"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Applicative_Free=PS["Control.Applicative.Free"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad=PS["Control.Monad"],Control_Monad_Aff_Class=PS["Control.Monad.Aff.Class"],Control_Monad_Eff_Class=PS["Control.Monad.Eff.Class"],Control_Monad_Free=(PS["Control.Monad.Eff.Exception"],PS["Control.Monad.Free"]),Control_Monad_Reader_Class=PS["Control.Monad.Reader.Class"],Control_Monad_Rec_Class=PS["Control.Monad.Rec.Class"],Control_Monad_State_Class=PS["Control.Monad.State.Class"],Data_Coyoneda=(PS["Control.Monad.Trans.Class"],PS["Control.Monad.Writer.Class"],PS["Control.Parallel.Class"],PS["Control.Semigroupoid"],PS["Data.Bifunctor"],PS["Data.Coyoneda"]),Data_Functor=(PS["Data.Foreign"],PS["Data.Function"],PS["Data.Functor"]),Data_Newtype=(PS["Data.List"],PS["Data.List.Types"],PS["Data.Maybe"],PS["Data.Newtype"]),Data_Unit=(PS["Data.Tuple"],PS["Data.Unit"]),Halogen_Query_EventSource=PS["Halogen.Query.EventSource"],Halogen_Query_ForkF=PS["Halogen.Query.ForkF"],HalogenAp=(PS["Halogen.Query.InputF"],PS.Prelude,function(x){return x}),HalogenM=function(x){return x},State=function(){function State(value0){this.value0=value0}return State.create=function(value0){return new State(value0)},State}(),Subscribe=function(){function Subscribe(value0,value1){this.value0=value0,this.value1=value1}return Subscribe.create=function(value0){return function(value1){return new Subscribe(value0,value1)}},Subscribe}(),Lift=function(){function Lift(value0){this.value0=value0}return Lift.create=function(value0){return new Lift(value0)},Lift}(),Halt=function(){function Halt(value0){this.value0=value0}return Halt.create=function(value0){return new Halt(value0)},Halt}(),GetSlots=function(){function GetSlots(value0){this.value0=value0}return GetSlots.create=function(value0){return new GetSlots(value0)},GetSlots}(),CheckSlot=function(){function CheckSlot(value0,value1){this.value0=value0,this.value1=value1}return CheckSlot.create=function(value0){return function(value1){return new CheckSlot(value0,value1)}},CheckSlot}(),ChildQuery=function(){function ChildQuery(value0,value1){this.value0=value0,this.value1=value1}return ChildQuery.create=function(value0){return function(value1){return new ChildQuery(value0,value1)}},ChildQuery}(),Raise=function(){function Raise(value0,value1){this.value0=value0,this.value1=value1}return Raise.create=function(value0){return function(value1){return new Raise(value0,value1)}},Raise}(),Par=function(){function Par(value0){this.value0=value0}return Par.create=function(value0){return new Par(value0)},Par}(),Fork=function(){function Fork(value0){this.value0=value0}return Fork.create=function(value0){return new Fork(value0)},Fork}(),GetRef=function(){function GetRef(value0,value1){this.value0=value0,this.value1=value1}return GetRef.create=function(value0){return function(value1){return new GetRef(value0,value1)}},GetRef}(),newtypeHalogenAp=new Data_Newtype.Newtype(function(n){return n},HalogenAp),hoist=function(dictFunctor){return function(nat){return function(v){return Control_Monad_Free.hoistFree(function(v1){if(v1 instanceof State)return new State(v1.value0);if(v1 instanceof Subscribe)return new Subscribe(Halogen_Query_EventSource.hoist(dictFunctor)(nat)(v1.value0),v1.value1);if(v1 instanceof Lift)return new Lift(nat(v1.value0));if(v1 instanceof Halt)return new Halt(v1.value0);if(v1 instanceof GetSlots)return new GetSlots(v1.value0);if(v1 instanceof CheckSlot)return new CheckSlot(v1.value0,v1.value1);if(v1 instanceof ChildQuery)return new ChildQuery(v1.value0,v1.value1);if(v1 instanceof Raise)return new Raise(v1.value0,v1.value1);if(v1 instanceof Par)return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));if(v1 instanceof Fork)return new Fork(Halogen_Query_ForkF.hoistFork(hoist(dictFunctor)(nat))(v1.value0));if(v1 instanceof GetRef)return new GetRef(v1.value0,v1.value1);throw new Error("Failed pattern match at Halogen.Query.HalogenM line 257, column 8 - line 268, column 28: "+[v1.constructor.name])})(v)}}},functorHalogenM=new Data_Functor.Functor(function(f){return function(v){return Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v)}}),applyHalogenM=new Control_Apply.Apply(function(){return functorHalogenM},function(v){return function(v1){return Control_Apply.apply(Control_Monad_Free.freeApply)(v)(v1)}}),bindHalogenM=new Control_Bind.Bind(function(){return applyHalogenM},function(v){return function(f){return Control_Bind.bind(Control_Monad_Free.freeBind)(v)(function(x){return f(x)})}}),applicativeHalogenM=new Control_Applicative.Applicative(function(){return applyHalogenM},function(a){return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a)}),monadHalogenM=new Control_Monad.Monad(function(){return applicativeHalogenM},function(){return bindHalogenM}),monadEffHalogenM=function(dictMonadEff){return new Control_Monad_Eff_Class.MonadEff(function(){return monadHalogenM},function(eff){return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Eff_Class.liftEff(dictMonadEff)(eff))))})},monadStateHalogenM=new Control_Monad_State_Class.MonadState(function(){return monadHalogenM},function($180){return HalogenM(Control_Monad_Free.liftF(State.create($180)))}),monadRecHalogenM=new Control_Monad_Rec_Class.MonadRec(function(){return monadHalogenM},function(k){return function(a){return Control_Bind.bind(bindHalogenM)(k(a))(function(v){if(v instanceof Control_Monad_Rec_Class.Loop)return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);if(v instanceof Control_Monad_Rec_Class.Done)return Control_Applicative.pure(applicativeHalogenM)(v.value0);throw new Error("Failed pattern match at Halogen.Query.HalogenM line 96, column 5 - line 96, column 31: "+[v.constructor.name])})}});exports.State=State,exports.Subscribe=Subscribe,exports.Lift=Lift,exports.Halt=Halt,exports.GetSlots=GetSlots,exports.CheckSlot=CheckSlot,exports.ChildQuery=ChildQuery,exports.Raise=Raise,exports.Par=Par,exports.Fork=Fork,exports.GetRef=GetRef,exports.HalogenAp=HalogenAp,exports.HalogenM=HalogenM,exports.mkQuery=function(dictEq){return function(p){return function($176){return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(p)(Data_Coyoneda.coyoneda(Control_Category.id(Control_Category.categoryFn))($176))))}}},exports.checkSlot=function(p){return HalogenM(Control_Monad_Free.liftF(new CheckSlot(p,Control_Category.id(Control_Category.categoryFn))))},exports.raise=function(o){return HalogenM(Control_Monad_Free.liftF(new Raise(o,Data_Unit.unit)))},exports.hoist=hoist,exports.newtypeHalogenAp=newtypeHalogenAp,exports.functorHalogenM=functorHalogenM,exports.applyHalogenM=applyHalogenM,exports.applicativeHalogenM=applicativeHalogenM,exports.bindHalogenM=bindHalogenM,exports.monadHalogenM=monadHalogenM,exports.monadEffHalogenM=monadEffHalogenM,exports.monadAffHalogenM=function(dictMonadAff){return new Control_Monad_Aff_Class.MonadAff(function(){return monadEffHalogenM(dictMonadAff.MonadEff0())},function(aff){return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Aff_Class.liftAff(dictMonadAff)(aff))))})},exports.monadRecHalogenM=monadRecHalogenM,exports.monadStateHalogenM=monadStateHalogenM,exports.monadAskHalogenM=function(dictMonadAsk){return new Control_Monad_Reader_Class.MonadAsk(function(){return monadHalogenM},HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Reader_Class.ask(dictMonadAsk)))))}}(PS["Halogen.Query.HalogenM"]=PS["Halogen.Query.HalogenM"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"];var Data_Bifunctor=PS["Data.Bifunctor"],Data_Maybe=(PS["Data.Const"],PS["Data.Functor"],PS["Data.Maybe"]),Data_Ord=PS["Data.Ord"],Halogen_Data_OrdBox=PS["Halogen.Data.OrdBox"],Halogen_Query_HalogenM=(PS["Halogen.HTML.Core"],PS["Halogen.Query.HalogenM"]),Unsafe_Coerce=(PS.Prelude,PS["Unsafe.Coerce"]),ComponentSlot=function(){function ComponentSlot(value0,value1,value2,value3,value4,value5){this.value0=value0,this.value1=value1,this.value2=value2,this.value3=value3,this.value4=value4,this.value5=value5}return ComponentSlot.create=function(value0){return function(value1){return function(value2){return function(value3){return function(value4){return function(value5){return new ComponentSlot(value0,value1,value2,value3,value4,value5)}}}}}},ComponentSlot}(),unComponentSlot=function(f){return function(cs){return f(cs.value0)(cs.value1)(cs.value2)(cs.value3)(cs.value4)(cs.value5)}},unComponent=Unsafe_Coerce.unsafeCoerce,mkComponentSlot=ComponentSlot.create,mkComponent=Unsafe_Coerce.unsafeCoerce,lifecycleComponent=function(dictBifunctor){return function(spec){return mkComponent({initialState:spec.initialState,render:spec.render,eval:spec.eval,receiver:spec.receiver,initializer:spec.initializer,finalizer:spec.finalizer,mkOrdBox:Halogen_Data_OrdBox.mkOrdBox(Data_Ord.ordVoid)})}},hoistSlot=function(dictBifunctor){return function(dictFunctor){return function(nat){return unComponentSlot(function(p){return function(ctor){return function(input){return function(inputQuery){return function(outputQuery){return function(projQuery){return mkComponentSlot(p)(hoist(dictBifunctor)(dictFunctor)(nat)(ctor))(input)(inputQuery)(outputQuery)(projQuery)}}}}}})}}},hoist=function(dictBifunctor){return function(dictFunctor){return function(nat){return unComponent(function(c){return mkComponent({initialState:c.initialState,render:function($16){return Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat))(c.render($16))},eval:function($17){return Halogen_Query_HalogenM.hoist(dictFunctor)(nat)(c.eval($17))},receiver:c.receiver,initializer:c.initializer,finalizer:c.finalizer,mkOrdBox:c.mkOrdBox})})}}};exports.mkComponent=mkComponent,exports.unComponent=unComponent,exports.component=function(dictBifunctor){return function(spec){return lifecycleComponent()({initialState:spec.initialState,render:spec.render,eval:spec.eval,receiver:spec.receiver,initializer:Data_Maybe.Nothing.value,finalizer:Data_Maybe.Nothing.value})}},exports.lifecycleComponent=lifecycleComponent,exports.parentComponent=function(dictOrd){return function(spec){return mkComponent({initialState:spec.initialState,render:spec.render,eval:spec.eval,receiver:spec.receiver,initializer:Data_Maybe.Nothing.value,finalizer:Data_Maybe.Nothing.value,mkOrdBox:Halogen_Data_OrdBox.mkOrdBox(dictOrd)})}},exports.lifecycleParentComponent=function(dictOrd){return function(spec){return mkComponent({initialState:spec.initialState,render:spec.render,eval:spec.eval,receiver:spec.receiver,initializer:spec.initializer,finalizer:spec.finalizer,mkOrdBox:Halogen_Data_OrdBox.mkOrdBox(dictOrd)})}},exports.hoist=hoist,exports.mkComponentSlot=mkComponentSlot,exports.unComponentSlot=unComponentSlot,exports.hoistSlot=hoistSlot}(PS["Halogen.Component"]=PS["Halogen.Component"]||{}),function(exports){"use strict";PS["Data.Either"];var Data_Either_Nested=PS["Data.Either.Nested"],Data_Functor_Coproduct_Nested=(PS["Data.Functor.Coproduct"],PS["Data.Functor.Coproduct.Nested"]),Data_Lens_Prism=(PS["Data.Lens"],PS["Data.Lens.Prism"]),Data_Maybe=PS["Data.Maybe"];exports._Either1=function(dictChoice){return Data_Lens_Prism["prism'"](Data_Either_Nested.in1)(Data_Either_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)},exports._Coproduct1=function(dictChoice){return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in1)(Data_Functor_Coproduct_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)},exports._Either2=function(dictChoice){return Data_Lens_Prism["prism'"](Data_Either_Nested.in2)(Data_Either_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)},exports._Coproduct2=function(dictChoice){return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in2)(Data_Functor_Coproduct_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)},exports._Either3=function(dictChoice){return Data_Lens_Prism["prism'"](Data_Either_Nested.in3)(Data_Either_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)},exports._Coproduct3=function(dictChoice){return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in3)(Data_Functor_Coproduct_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)}}(PS["Halogen.Data.Prism"]=PS["Halogen.Data.Prism"]||{}),function(exports){"use strict";PS["Control.Category"],PS["Control.Semigroupoid"],PS["Data.Lens"];var Data_Lens_Fold=PS["Data.Lens.Fold"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Tagged=PS["Data.Lens.Internal.Tagged"],Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Maybe_First=(PS["Data.Lens.Prism.Coproduct"],PS["Data.Lens.Prism.Either"],PS["Data.Maybe"],PS["Data.Maybe.First"]),Halogen_Data_Prism=PS["Halogen.Data.Prism"],ChildPath=(PS.Prelude,function(){function ChildPath(value0,value1){this.value0=value0,this.value1=value1}return ChildPath.create=function(value0){return function(value1){return new ChildPath(value0,value1)}},ChildPath}()),cp3=new ChildPath(function(dictChoice){return Halogen_Data_Prism._Coproduct3(dictChoice)},function(dictChoice){return Halogen_Data_Prism._Either3(dictChoice)}),cp2=new ChildPath(function(dictChoice){return Halogen_Data_Prism._Coproduct2(dictChoice)},function(dictChoice){return Halogen_Data_Prism._Either2(dictChoice)}),cp1=new ChildPath(function(dictChoice){return Halogen_Data_Prism._Coproduct1(dictChoice)},function(dictChoice){return Halogen_Data_Prism._Either1(dictChoice)});exports.ChildPath=ChildPath,exports.cp1=cp1,exports.cp2=cp2,exports.cp3=cp3,exports.injQuery=function(v){return Data_Lens_Prism.review(v.value0(Data_Lens_Internal_Tagged.taggedChoice))},exports.injSlot=function(v){return Data_Lens_Prism.review(v.value1(Data_Lens_Internal_Tagged.taggedChoice))},exports.prjQuery=function(v){return Data_Lens_Fold.preview(v.value0(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)))}}(PS["Halogen.Component.ChildPath"]=PS["Halogen.Component.ChildPath"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Semigroupoid"],PS["DOM.HTML.Indexed"],PS["DOM.HTML.Indexed.ButtonType"],PS["DOM.HTML.Indexed.FormMethod"],PS["DOM.HTML.Indexed.InputType"],PS["DOM.HTML.Indexed.MenuType"],PS["DOM.HTML.Indexed.MenuitemType"],PS["DOM.HTML.Indexed.OnOff"],PS["DOM.HTML.Indexed.OrderedListType"],PS["DOM.HTML.Indexed.PreloadValue"],PS["DOM.HTML.Indexed.StepValue"],PS["DOM.Node.Types"],PS["Data.Foreign"],PS["Data.Function"];var Data_Functor=PS["Data.Functor"],Data_Maybe=(PS["Data.HeytingAlgebra"],PS["Data.Maybe"]),Data_Newtype=(PS["Data.MediaType"],PS["Data.Newtype"]),Data_String=PS["Data.String"],Halogen_HTML_Core=(PS["Data.Unit"],PS["Halogen.HTML.Core"]),prop=(PS["Halogen.Query.InputF"],PS["Halogen.VDom.DOM.Prop"],PS.Prelude,PS["Unsafe.Coerce"],function(dictIsProp){return Halogen_HTML_Core.prop(dictIsProp)}),rows=prop(Halogen_HTML_Core.intIsProp)("rows"),src=prop(Halogen_HTML_Core.stringIsProp)("src"),step=prop(Halogen_HTML_Core.stepValueIsProp)("step"),target=prop(Halogen_HTML_Core.stringIsProp)("target"),value=prop(Halogen_HTML_Core.stringIsProp)("value"),width=prop(Halogen_HTML_Core.intIsProp)("width"),placeholder=prop(Halogen_HTML_Core.stringIsProp)("placeholder"),pattern=prop(Halogen_HTML_Core.stringIsProp)("pattern"),id_=prop(Halogen_HTML_Core.stringIsProp)("id"),href=prop(Halogen_HTML_Core.stringIsProp)("href"),attr=Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);exports.prop=prop,exports.attr=attr,exports.class_=function($13){return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($13))},exports.classes=function($12){return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName))($12)))},exports.rows=rows,exports.width=width,exports.href=href,exports.id_=id_,exports.src=src,exports.target=target,exports.type_=function(dictIsProp){return prop(dictIsProp)("type")},exports.value=value,exports.step=step,exports.placeholder=placeholder,exports.pattern=pattern}(PS["Halogen.HTML.Properties"]=PS["Halogen.HTML.Properties"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Semigroupoid"],PS["DOM.HTML.Indexed"],PS["Data.Function"];var Data_Maybe=PS["Data.Maybe"],Halogen_HTML_Core=(PS["Data.Tuple"],PS["Halogen.HTML.Core"]),element=(PS["Halogen.HTML.Properties"],PS["Halogen.Query.InputF"],PS["Halogen.VDom"],PS["Halogen.VDom.Types"],PS.Prelude,PS["Unsafe.Coerce"],Halogen_HTML_Core.element(Data_Maybe.Nothing.value)),h1=element("h1"),h1_=h1([]),h2=element("h2"),h2_=h2([]),h3=element("h3"),header=element("header"),header_=header([]),li=element("li"),nav=element("nav"),nav_=nav([]),p=element("p"),p_=p([]),section=element("section"),section_=section([]),span=element("span"),table=element("table"),tbody=element("tbody"),tbody_=tbody([]),td=element("td"),td_=td([]),th=element("th"),th_=th([]),thead=element("thead"),thead_=thead([]),tr=element("tr"),tr_=tr([]),ul=element("ul"),ul_=ul([]),div=element("div"),div_=div([]),article=element("article"),a=element("a");exports.element=element,exports.a=a,exports.article=article,exports.div=div,exports.div_=div_,exports.h1=h1,exports.h1_=h1_,exports.h2=h2,exports.h2_=h2_,exports.h3=h3,exports.header=header,exports.header_=header_,exports.hr=function(props){return element("hr")(props)([])},exports.img=function(props){return element("img")(props)([])},exports.input=function(props){return element("input")(props)([])},exports.li=li,exports.nav=nav,exports.nav_=nav_,exports.p=p,exports.p_=p_,exports.section=section,exports.section_=section_,exports.span=span,exports.table=table,exports.tbody=tbody,exports.tbody_=tbody_,exports.td=td,exports.td_=td_,exports.textarea=function(es){return element("textarea")(es)([])},exports.th=th,exports.th_=th_,exports.thead=thead,exports.thead_=thead_,exports.tr=tr,exports.tr_=tr_,exports.ul=ul,exports.ul_=ul_}(PS["Halogen.HTML.Elements"]=PS["Halogen.HTML.Elements"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"];var Data_Functor=PS["Data.Functor"],Data_Maybe=PS["Data.Maybe"],Halogen_Component=PS["Halogen.Component"],Halogen_Component_ChildPath=PS["Halogen.Component.ChildPath"],Halogen_HTML_Core=PS["Halogen.HTML.Core"];PS["Halogen.HTML.Elements"],PS["Halogen.HTML.Properties"],PS.Prelude,PS["Unsafe.Coerce"];exports.slot=function(p){return function(component){return function(input){return function(outputQuery){var f=Halogen_Component.unComponent(function(v){return v.receiver})(component);return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(p)(component)(input)(f)(outputQuery)(Data_Maybe.Just.create))}}}},exports["slot'"]=function(i){return function(p){return function(component){return function(input){return function(outputQuery){var pq=Halogen_Component_ChildPath.prjQuery(i);return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(Halogen_Component_ChildPath.injSlot(i)(p))(component)(input)(function($2){return Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component.unComponent(function(v){return v.receiver})(component)($2))})(outputQuery)(pq))}}}}}}(PS["Halogen.HTML"]=PS["Halogen.HTML"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Data_Functor=(PS["Control.Category"],PS["Control.Monad.Aff.Class"],PS["Control.Monad.Eff.Class"],PS["Control.Monad.Except"],PS["Control.Monad.State.Class"],PS["Control.Monad.Trans.Class"],PS["Control.Parallel"],PS["Control.Semigroupoid"],PS["DOM.HTML.Types"],PS["Data.Either"],PS["Data.Foreign"],PS["Data.Function"],PS["Data.Functor"]),Data_Maybe=(PS["Data.List"],PS["Data.List.Types"],PS["Data.Map"],PS["Data.Maybe"]),Data_Unit=(PS["Data.Tuple"],PS["Data.Unit"]),Halogen_Component_ChildPath=PS["Halogen.Component.ChildPath"],Halogen_Query_HalogenM=(PS["Halogen.Query.EventSource"],PS["Halogen.Query.HalogenM"]),query=(PS["Halogen.Query.InputF"],PS.Prelude,function(dictEq){return function(p){return function(q){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.checkSlot(p))(function(v){return v?Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.Just.create)(Halogen_Query_HalogenM.mkQuery(dictEq)(p)(q)):Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)})}}});exports.action=function(act){return act(Data_Unit.unit)},exports.query=query,exports["query'"]=function(dictEq){return function(path){return function(p){return function(q){return query(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q))}}}}}(PS["Halogen.Query"]=PS["Halogen.Query"]||{}),function(exports){"use strict";var reader,prop,key,Control_Bind=PS["Control.Bind"],Control_Monad_Except=PS["Control.Monad.Except"],Control_Monad_Except_Trans=PS["Control.Monad.Except.Trans"],DOM_Event_Event=(PS["Control.Semigroupoid"],PS["DOM.Event.Event"]),DOM_HTML_Event_EventTypes=(PS["DOM.Event.Types"],PS["DOM.HTML.Event.EventTypes"]),Data_Either=(PS["DOM.HTML.Event.Types"],PS["Data.Either"]),Data_Foreign=PS["Data.Foreign"],Data_Foreign_Index=PS["Data.Foreign.Index"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Identity=PS["Data.Identity"],Data_Maybe=PS["Data.Maybe"],Halogen_HTML_Core=PS["Halogen.HTML.Core"],Halogen_Query=(PS["Halogen.HTML.Properties"],PS["Halogen.Query"]),Halogen_Query_InputF=PS["Halogen.Query.InputF"],mouseHandler=(PS.Prelude,PS["Unsafe.Coerce"].unsafeCoerce),handler=function(et){return function($1){return Halogen_HTML_Core.handler(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_InputF.Query.create))($1))}},onValueInput=(key=DOM_HTML_Event_EventTypes.input,prop="value",reader=Data_Foreign.readString,function(f){return handler(key)(function($37){return Data_Either.either(Data_Function.const(Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Data_Foreign_Index.readProp(prop))(Data_Foreign.toForeign(DOM_Event_Event.currentTarget($37)))))})});exports.input=function(f){return function(x){return Data_Maybe.Just.create(Halogen_Query.action(f(x)))}},exports.input_=function(f){return function(v){return Data_Maybe.Just.create(Halogen_Query.action(f))}},exports.handler=handler,exports.onClick=function($2){return handler(DOM_HTML_Event_EventTypes.click)(mouseHandler($2))},exports.onValueInput=onValueInput}(PS["Halogen.HTML.Events"]=PS["Halogen.HTML.Events"]||{}),function(exports){"use strict";PS["Control.Semigroupoid"],PS["DOM.Event.Types"],PS["Data.Function"];var Data_Functor=PS["Data.Functor"],Data_Lens_Internal_Tagged=(PS["Data.Lens"],PS["Data.Lens.Internal.Tagged"]),Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Semigroup=PS["Data.Semigroup"],EmmaMCR_Data=PS["EmmaMCR.Data"],EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],Halogen_HTML_Core=(PS.Halogen,PS["Halogen.HTML"],PS["Halogen.HTML.Core"]),Halogen_HTML_Elements=PS["Halogen.HTML.Elements"],Halogen_HTML_Events=PS["Halogen.HTML.Events"],Halogen_HTML_Properties=PS["Halogen.HTML.Properties"],hrCards=(PS.Prelude,Halogen_HTML_Elements.hr([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["cards"]))])),dietMap=Data_Lens_Prism.review(EmmaMCR_Types_Core._DietMap(Data_Lens_Internal_Tagged.taggedProfunctor))(["Normal meal","Vegetarian","Pescetarian","Vegan","Vegetarian & no dairy","Halal","Kosher","No beef","Vegetarian & no bell pepper","No dairy","No mushroom","No pork","No red meat","No shelfish","No pork nor duck"]),button$prime=function(wrapper){return function(label0){return function(label){return function(act){return function(selected){return wrapper([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(["button",EmmaMCR_Data.toClassName(label)])(selected?["selected"]:[]))),Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(act))])([Halogen_HTML_Core.text(selected?label:label0)])}}}}},toggle=button$prime(Halogen_HTML_Elements.p);exports.button=function(l){return button$prime(Halogen_HTML_Elements.p)(l)(l)},exports.buttonLi=function(l){return button$prime(Halogen_HTML_Elements.li)(l)(l)},exports.toggle=toggle,exports.createElement=function(act){return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["create","card"])),Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(act))])([Halogen_HTML_Elements.div_([Halogen_HTML_Core.text("+")])])},exports.reloadElements=function(act){return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["reload","card"])),Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(act))])([Halogen_HTML_Elements.div_([Halogen_HTML_Core.text("↻")])])},exports.hrCards=hrCards,exports.dietMap=dietMap}(PS["EmmaMCR.Component.Common"]=PS["EmmaMCR.Component.Common"]||{}),function(exports){"use strict";var Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad_State_Class=PS["Control.Monad.State.Class"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Function=(PS["Data.Eq"],PS["Data.Function"]),Data_Functor=PS["Data.Functor"],Data_HeytingAlgebra=(PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.HeytingAlgebra"]),Data_Lens_Fold=(PS["Data.Lens"],PS["Data.Lens.Fold"]),Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Index=PS["Data.Lens.Index"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Re=PS["Data.Lens.Internal.Re"],Data_Lens_Internal_Wander=PS["Data.Lens.Internal.Wander"],Data_Lens_Iso=PS["Data.Lens.Iso"],Data_Lens_Record=(PS["Data.Lens.Prism"],PS["Data.Lens.Record"]),Data_Lens_Setter=PS["Data.Lens.Setter"],Data_Lens_Traversal=PS["Data.Lens.Traversal"],Data_List_Lazy=PS["Data.List.Lazy"],Data_List_Lazy_Types=PS["Data.List.Lazy.Types"],Data_List_Types=PS["Data.List.Types"],Data_List_ZipList=PS["Data.List.ZipList"],Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Monoid=PS["Data.Monoid"],Data_Monoid_Endo=PS["Data.Monoid.Endo"],Data_Profunctor_Strong=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Profunctor.Strong"]),Data_Record_Builder=PS["Data.Record.Builder"],Data_Show=(PS["Data.Ring"],PS["Data.Show"]),Data_Symbol=PS["Data.Symbol"],Data_Traversable=PS["Data.Traversable"],Data_Tuple=PS["Data.Tuple"],EmmaMCR_Component_Common=(PS["Data.Unit"],PS["EmmaMCR.Component.Common"]),EmmaMCR_Types_Bookings=(PS["EmmaMCR.Settings"],PS["EmmaMCR.Types.Bookings"]),EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],EmmaMCR_Types_Members=PS["EmmaMCR.Types.Members"],Forestay=PS.Forestay,Halogen_Component=(PS.Halogen,PS["Halogen.Component"]),Halogen_HTML_Core=(PS["Halogen.HTML"],PS["Halogen.HTML.Core"]),Halogen_HTML_Elements=PS["Halogen.HTML.Elements"],Halogen_HTML_Properties=PS["Halogen.HTML.Properties"],Halogen_Query_HalogenM=PS["Halogen.Query.HalogenM"],GF=(PS.Prelude,function(){function GF(){}return GF.value=new GF,GF}()),NF=function(){function NF(){}return NF.value=new NF,NF}(),WF=function(){function WF(){}return WF.value=new WF,WF}(),ToggledDietComponent=function(){function ToggledDietComponent(value0,value1){this.value0=value0,this.value1=value1}return ToggledDietComponent.create=function(value0){return function(value1){return new ToggledDietComponent(value0,value1)}},ToggledDietComponent}(),ChangedDiet=function(){function ChangedDiet(value0,value1){this.value0=value0,this.value1=value1}return ChangedDiet.create=function(value0){return function(value1){return new ChangedDiet(value0,value1)}},ChangedDiet}(),ToggleDietComponent=function(){function ToggleDietComponent(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return ToggleDietComponent.create=function(value0){return function(value1){return function(value2){return new ToggleDietComponent(value0,value1,value2)}}},ToggleDietComponent}(),ChangeDiet=function(){function ChangeDiet(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return ChangeDiet.create=function(value0){return function(value1){return function(value2){return new ChangeDiet(value0,value1,value2)}}},ChangeDiet}(),ToggleDietListDisplay=function(){function ToggleDietListDisplay(value0,value1){this.value0=value0,this.value1=value1}return ToggleDietListDisplay.create=function(value0){return function(value1){return new ToggleDietListDisplay(value0,value1)}},ToggleDietListDisplay}(),UpdateBooking=function(){function UpdateBooking(value0,value1){this.value0=value0,this.value1=value1}return UpdateBooking.create=function(value0){return function(value1){return new UpdateBooking(value0,value1)}},UpdateBooking}(),ticket=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"ticket"}))()()(Data_Symbol.SProxy.value)(dictStrong)},pickDiet=function(n){return function(disp){return function(dkey){return EmmaMCR_Component_Common.button((i=dkey,Data_Lens_Getter.viewOn(EmmaMCR_Component_Common.dietMap)(function($53){return EmmaMCR_Types_Core._DietMap(Data_Lens_Internal_Forget.profunctorForget)(Data_Lens_Index.ix(Data_Lens_Index.indexArray)(Data_Lens_Getter.viewOn(i)(Data_Lens_Iso.re(EmmaMCR_Types_Core._DietKey(Data_Lens_Internal_Re.cochoiceRe(Data_Lens_Internal_Forget.cochoiceForget)))))(Data_Lens_Internal_Forget.wanderForget(Data_Monoid.monoidString))($53))})))(ToggleDietListDisplay.create(n))(disp);var i}}},dietList=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"dietList"}))()()(Data_Symbol.SProxy.value)(dictStrong)},singleTicket=function(st){var dictStrong,n=Data_Lens_Getter.viewOn(st)((dictStrong=Data_Lens_Internal_Forget.strongForget,Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"index"}))()()(Data_Symbol.SProxy.value)(dictStrong))),disp=Data_Lens_Getter.viewOn(st)(function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"displayDiets"}))()()(Data_Symbol.SProxy.value)(dictStrong)}(Data_Lens_Internal_Forget.strongForget)),bd=Data_Lens_Getter.viewOn(st)(function($54){return ticket(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Bookings.bookingDiet(Data_Lens_Internal_Forget.strongForget)($54))});return Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["signup","ticket",function(){var v=Data_Lens_Getter.viewOn(st)(function($55){return ticket(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Bookings.bookingAttendee(Data_Lens_Internal_Forget.strongForget)($55))});if(v instanceof EmmaMCR_Types_Core.MCRMember)return"member";if(v instanceof EmmaMCR_Types_Core.Affiliate)return"affiliate";if(v instanceof EmmaMCR_Types_Core.Associate)return"associate";if(v instanceof EmmaMCR_Types_Core.Guest)return"guest";throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Booking line 203, column 9 - line 208, column 7: "+[v.constructor.name])}()]))])(Data_Array.concat([function(){if(!disp)return[];if(disp)return[Halogen_HTML_Elements.ul([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["signup","ticket","diets"]))])(Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.uncurry(function(n){return function(d){return function(l){return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Lens_Fold.previewOn(d)(EmmaMCR_Types_Core._DietKey(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))))(function(v){return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(EmmaMCR_Component_Common.buttonLi(l)(ChangeDiet.create(v)(n))(!1))})}}}(n)))(Data_Lens_Getter.viewOn(EmmaMCR_Component_Common.dietMap)(function($56){return EmmaMCR_Types_Core._DietMap(Data_Lens_Internal_Forget.profunctorForget)(Forestay.enumerated($56))}))))];throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Booking line 210, column 7 - line 221, column 12: "+[disp.constructor.name])}(),[pickDiet(n)(disp)(Data_Lens_Getter.viewOn(bd)(EmmaMCR_Types_Core.diet(Data_Lens_Internal_Forget.strongForget))),EmmaMCR_Component_Common.button("Gluten Free")(ToggleDietComponent.create(GF.value)(n))(Data_Lens_Getter.viewOn(bd)(function($57){return EmmaMCR_Types_Core.gluten(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core.glutenFree(Data_Lens_Internal_Forget.profunctorForget)($57))})),EmmaMCR_Component_Common.button("Nut Free")(ToggleDietComponent.create(NF.value)(n))(Data_Lens_Getter.viewOn(bd)(function($58){return EmmaMCR_Types_Core.nuts(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core.nutFree(Data_Lens_Internal_Forget.profunctorForget)($58))})),EmmaMCR_Component_Common.button("Wine")(ToggleDietComponent.create(WF.value)(n))(Data_Lens_Getter.viewOn(bd)(function($59){return EmmaMCR_Types_Core.wine(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core.withWine(Data_Lens_Internal_Forget.profunctorForget)($59))}))],Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(st)(function($60){return ticket(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Bookings.bookingName(Data_Lens_Internal_Forget.strongForget)($60))}))(function(nm){return[Halogen_HTML_Elements.p_([Halogen_HTML_Core.text(Data_Show.show(EmmaMCR_Types_Core.showPersonName)(nm))])]})]))},booking=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"booking"}))()()(Data_Symbol.SProxy.value)(dictStrong)},$$eval=function(dictAPIConstraint){return function(v){if(v instanceof ToggleDietComponent)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new ToggledDietComponent(v.value0,v.value1)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2)});if(v instanceof ChangeDiet)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new ChangedDiet(v.value0,v.value1)))(function(){return $$eval(dictAPIConstraint)(new ToggleDietListDisplay(v.value1,v.value2))});if(v instanceof ToggleDietListDisplay)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(function($61){return dietList(Data_Profunctor_Strong.strongFn)(Data_Lens_Index.ix(Data_Lens_Index.indexArray)(v.value0)(Data_Lens_Internal_Wander.wanderFunction)($61))})(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof UpdateBooking)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(booking(Data_Profunctor_Strong.strongFn))(v.value0)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Booking line 142, column 1 - line 144, column 51: "+[v.constructor.name])}},initialState=function(input){return Data_Record_Builder.build(Data_Record_Builder.merge()(input))({dietList:Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Lens_Fold.toListOfOn(input)(function($62){return booking(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Bookings.bookingTickets(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(Data_Lens_Internal_Forget.wanderForget(Data_Monoid_Endo.monoidEndo))(Data_Lens_Getter.to(Data_Function.const(!1))($62))))}))})},render=function(state){var dlength=Data_Lens_Getter.viewOn(state)(function($63){return dietList(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Getter.to(Data_Array.length)($63))}),dl=Data_Lens_Getter.viewOn(state)(function($64){return dietList(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Getter.to(Data_Array.toUnfoldable(Data_List_Lazy_Types.unfoldableList))($64))}),bd=Data_Lens_Getter.viewOn(state)(booking(Data_Lens_Internal_Forget.strongForget)),bts=Data_Lens_Getter.viewOn(bd)(function($65){return EmmaMCR_Types_Bookings.bookingTickets(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Getter.to(Data_Array.toUnfoldable(Data_List_Lazy_Types.unfoldableList))($65))}),sts=Data_Array.fromFoldable(Data_List_ZipList.foldableZipList)(Control_Apply.apply(Data_List_ZipList.applyZipList)(Control_Apply.apply(Data_List_ZipList.applyZipList)(Data_Functor.map(Data_List_ZipList.functorZipList)(function(v){return function(v1){return function(v2){return{index:v,ticket:v1,displayDiets:v2}}}})(Data_List_Lazy.range(0)(dlength-1|0)))(bts))(dl));return Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["booking"]))])([Halogen_HTML_Elements.header_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text(Data_Show.show(EmmaMCR_Types_Core.showPersonName)(Data_Lens_Getter.viewOn(bd)(function($66){return EmmaMCR_Types_Bookings.bookingMember(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Members.memberName(Data_Lens_Internal_Forget.strongForget)($66))})))]),Halogen_HTML_Elements.h2_([Halogen_HTML_Core.text(EmmaMCR_Types_Core.foldUserId(Data_Lens_Getter.view(EmmaMCR_Types_Core._MakeCRSid(Data_Lens_Internal_Forget.profunctorForget)))(Control_Category.id(Control_Category.categoryFn))(Data_Lens_Getter.viewOn(bd)(function($67){return EmmaMCR_Types_Bookings.bookingMember(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Members.memberId(Data_Lens_Internal_Forget.strongForget)($67))})))])]),Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["signup"]))])(Data_Functor.map(Data_Functor.functorArray)(singleTicket)(sts))])};exports.component=function(dictAPIConstraint){return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({initialState:initialState,render:render,eval:$$eval(dictAPIConstraint),receiver:Data_Function.const(Data_Maybe.Nothing.value)})},exports.ToggleDietComponent=ToggleDietComponent,exports.ChangeDiet=ChangeDiet,exports.ToggleDietListDisplay=ToggleDietListDisplay,exports.UpdateBooking=UpdateBooking,exports.GF=GF,exports.NF=NF,exports.WF=WF,exports.ToggledDietComponent=ToggledDietComponent,exports.ChangedDiet=ChangedDiet}(PS["EmmaMCR.Component.Dinners.Booking"]=PS["EmmaMCR.Component.Dinners.Booking"]||{}),function(exports){"use strict";var Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad_Aff_Class=PS["Control.Monad.Aff.Class"],Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Control_Monad_State_Class=(PS["Control.Monad.State"],PS["Control.Monad.State.Class"]),Control_Monad_State_Trans=PS["Control.Monad.State.Trans"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Array_NonEmpty=PS["Data.Array.NonEmpty"],Data_Cookie=PS["Data.Cookie"],Data_Either=PS["Data.Either"],Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_HeytingAlgebra=PS["Data.HeytingAlgebra"],Data_Identity=PS["Data.Identity"],Data_Lens_Fold=(PS["Data.Lens"],PS["Data.Lens.Fold"]),Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Index=PS["Data.Lens.Index"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Re=PS["Data.Lens.Internal.Re"],Data_Lens_Internal_Wander=PS["Data.Lens.Internal.Wander"],Data_Lens_Iso=PS["Data.Lens.Iso"],Data_Lens_Lens_Tuple=PS["Data.Lens.Lens.Tuple"],Data_Lens_Record=PS["Data.Lens.Record"],Data_Lens_Setter=PS["Data.Lens.Setter"],Data_Lens_Traversal=PS["Data.Lens.Traversal"],Data_List=PS["Data.List"],Data_List_Types=PS["Data.List.Types"],Data_Map=PS["Data.Map"],Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Monoid=PS["Data.Monoid"],Data_Monoid_Endo=PS["Data.Monoid.Endo"],Data_Profunctor=PS["Data.Profunctor"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Show=(PS["Data.Semigroup"],PS["Data.Show"]),Data_String_Yarn=PS["Data.String.Yarn"],Data_Symbol=PS["Data.Symbol"],Data_Traversable=PS["Data.Traversable"],Data_Unfoldable=PS["Data.Unfoldable"],Data_Unit=PS["Data.Unit"],EmmaMCR_Component_Common=PS["EmmaMCR.Component.Common"],EmmaMCR_Component_Dinners_Booking=PS["EmmaMCR.Component.Dinners.Booking"],EmmaMCR_Purescript=PS["EmmaMCR.Purescript"],EmmaMCR_Types_Bookings=(PS["EmmaMCR.Settings"],PS["EmmaMCR.Types.Bookings"]),EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],EmmaMCR_Types_Dinners=PS["EmmaMCR.Types.Dinners"],EmmaMCR_Types_Members=PS["EmmaMCR.Types.Members"],Forestay=PS.Forestay,Halogen_Component=(PS.Halogen,PS["Halogen.Component"]),Halogen_HTML=PS["Halogen.HTML"],Halogen_HTML_Core=PS["Halogen.HTML.Core"],Halogen_HTML_Elements=PS["Halogen.HTML.Elements"],Halogen_HTML_Events=PS["Halogen.HTML.Events"],Halogen_HTML_Properties=PS["Halogen.HTML.Properties"],Halogen_Query=PS["Halogen.Query"],Halogen_Query_HalogenM=PS["Halogen.Query.HalogenM"],GetBookings=(PS.Prelude,function(){function GetBookings(value0){this.value0=value0}return GetBookings.create=function(value0){return new GetBookings(value0)},GetBookings}()),ToggleDietDisplay=function(){function ToggleDietDisplay(value0){this.value0=value0}return ToggleDietDisplay.create=function(value0){return new ToggleDietDisplay(value0)},ToggleDietDisplay}(),ToggleEmailDisplay=function(){function ToggleEmailDisplay(value0){this.value0=value0}return ToggleEmailDisplay.create=function(value0){return new ToggleEmailDisplay(value0)},ToggleEmailDisplay}(),HandleBooking=function(){function HandleBooking(value0,value1,value2){this.value0=value0,this.value1=value1,this.value2=value2}return HandleBooking.create=function(value0){return function(value1){return function(value2){return new HandleBooking(value0,value1,value2)}}},HandleBooking}(),signups=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"signups"}))()()(Data_Symbol.SProxy.value)(dictStrong)},updateBooking=function(dictAPIConstraint){return function(uid){return function(f){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Forestay.preuse(Halogen_Query_HalogenM.monadStateHalogenM)(function($54){return signups(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Index.ix(Data_Lens_Index.indexMap(EmmaMCR_Types_Core.ordUserId))(uid)(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))($54))}))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function(bd0){var did=Data_Lens_Getter.viewOn(bd0)(EmmaMCR_Types_Bookings.bookingDinner(Data_Lens_Internal_Forget.strongForget)),bd1=Forestay["execState'"](bd0)(f);return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Forestay["liftAff'"](Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(Data_Cookie.getXSRFToken))(function(v){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Purescript.putDinnersByDinneridBookingByUserid(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(v)(bd1)(did)(uid)))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(function(bd){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($55){return signups(Data_Profunctor_Strong.strongFn)(Data_Lens_Index.ix(Data_Lens_Index.indexMap(EmmaMCR_Types_Core.ordUserId))(uid)(Data_Lens_Internal_Wander.wanderFunction)($55))})(bd)))(function(){return Halogen_Query.query(EmmaMCR_Types_Core.eqUserId)(uid)(Halogen_Query.action(EmmaMCR_Component_Dinners_Booking.UpdateBooking.create(bd)))})}))})}))}}},listDietsRows=function(bds){return Control_Bind.bind(Control_Bind.bindArray)(bds)(function(v){return Control_Bind.bind(Control_Bind.bindArray)(Data_Lens_Getter.viewOn(v)(EmmaMCR_Types_Bookings.bookingTickets(Data_Lens_Internal_Forget.strongForget)))(function(v1){var d=Data_Lens_Getter.viewOn(v1)(EmmaMCR_Types_Bookings.bookingDiet(Data_Lens_Internal_Forget.strongForget));return Control_Bind.bind(Control_Bind.bindArray)(Data_Maybe.maybe([])(Control_Applicative.pure(Control_Applicative.applicativeArray))(Data_Array_NonEmpty.fromArray(Data_Array.catMaybes([function(v){return 0===v?Data_Maybe.Nothing.value:Data_Lens_Fold.previewOn(EmmaMCR_Component_Common.dietMap)(function($60){return EmmaMCR_Types_Core._DietMap(Data_Lens_Internal_Forget.profunctorForget)(Data_Lens_Index.ix(Data_Lens_Index.indexArray)(v)(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))($60))})}(Data_Lens_Getter.viewOn(d)(function($61){return EmmaMCR_Types_Core.diet(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Iso.re(EmmaMCR_Types_Core._DietKey(Data_Lens_Internal_Re.cochoiceRe(Data_Lens_Internal_Forget.cochoiceForget)))($61))})),function(){var v2=Data_Lens_Getter.viewOn(d)(EmmaMCR_Types_Core.gluten(Data_Lens_Internal_Forget.strongForget));if(v2 instanceof EmmaMCR_Types_Core.Gluten)return Data_Maybe.Nothing.value;if(v2 instanceof EmmaMCR_Types_Core.NoGluten)return new Data_Maybe.Just("Gluten-free");throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Signup line 287, column 9 - line 290, column 7: "+[v2.constructor.name])}(),function(){var v2=Data_Lens_Getter.viewOn(d)(EmmaMCR_Types_Core.nuts(Data_Lens_Internal_Forget.strongForget));if(v2 instanceof EmmaMCR_Types_Core.Nuts)return Data_Maybe.Nothing.value;if(v2 instanceof EmmaMCR_Types_Core.NoNuts)return new Data_Maybe.Just("Nut-free");throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Signup line 290, column 9 - line 293, column 7: "+[v2.constructor.name])}(),function(){var v2=Data_Lens_Getter.viewOn(d)(EmmaMCR_Types_Core.wine(Data_Lens_Internal_Forget.strongForget));if(v2 instanceof EmmaMCR_Types_Core.Wine)return Data_Maybe.Nothing.value;if(v2 instanceof EmmaMCR_Types_Core.NoWine)return new Data_Maybe.Just("No wine");throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Signup line 293, column 9 - line 296, column 7: "+[v2.constructor.name])}()]))))(function(v2){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Elements.tr([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner-diets"]))])([Halogen_HTML_Elements.td_([Halogen_HTML_Core.text(EmmaMCR_Types_Core.foldUserId(Data_Lens_Getter.view(EmmaMCR_Types_Core._MakeCRSid(Data_Lens_Internal_Forget.profunctorForget)))(Control_Category.id(Control_Category.categoryFn))(Data_Lens_Getter.viewOn(v)(function($62){return EmmaMCR_Types_Bookings.bookingMember(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Members.memberId(Data_Lens_Internal_Forget.strongForget)($62))})))]),Halogen_HTML_Elements.td_([Halogen_HTML_Core.text((t=v1,(Data_Lens_Getter.viewOn(t)(EmmaMCR_Types_Bookings.bookingAttendee(Data_Lens_Internal_Forget.strongForget))instanceof EmmaMCR_Types_Core.Guest?function(v1){return"Guest of "+v1}:Control_Category.id(Control_Category.categoryFn))(Data_Show.show(EmmaMCR_Types_Core.showPersonName)(Data_Lens_Getter.viewOn(v)(function($63){return EmmaMCR_Types_Bookings.bookingMember(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Members.memberName(Data_Lens_Internal_Forget.strongForget)($63))})))))]),Halogen_HTML_Elements.td_([Halogen_HTML_Core.text(Data_String_Yarn.unwords(Data_Array_NonEmpty.toArray(v2)))])]));var t})})})},initialState=function(input){return{dinner:input.dinner,signups:Data_Monoid.mempty(Data_Map.monoidMap(EmmaMCR_Types_Core.ordUserId)),displayDiets:!1,displayEmail:!1}},displayEmail=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"displayEmail"}))()()(Data_Symbol.SProxy.value)(dictStrong)},displayDiets=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"displayDiets"}))()()(Data_Symbol.SProxy.value)(dictStrong)},render=function(dictAPIConstraint){return function(state){var v;return Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["component","signups","loading"]))])(Data_Array.concat([[Halogen_HTML_Elements.header_(Data_Array.concat([[Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Signup")])],Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Fold.previewOn(state)(function($64){return signups(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Traversal.traversed(Data_Map.traversableMap)(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))($64))}))(function(v){return[EmmaMCR_Component_Common.button("Diet list")(ToggleDietDisplay.create)(Data_Lens_Getter.viewOn(state)(displayDiets(Data_Lens_Internal_Forget.strongForget))),EmmaMCR_Component_Common.button("Emails")(ToggleEmailDisplay.create)(Data_Lens_Getter.viewOn(state)(displayEmail(Data_Lens_Internal_Forget.strongForget)))]}),(v=Data_Lens_Getter.viewOn(state)(signups(Data_Lens_Internal_Forget.strongForget)),Data_Map.isEmpty(v)?[]:Data_Array.concat([function(){var bs,v1=Data_Lens_Getter.viewOn(state)(displayDiets(Data_Lens_Internal_Forget.strongForget));if(!v1)return[];if(v1)return[(bs=v,Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["diets","signups","summary"]))])([Halogen_HTML_Elements.header_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Diets summary")])]),Halogen_HTML_Elements.table([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["diets","signups"]))])([Halogen_HTML_Elements.thead_([Halogen_HTML_Elements.tr_([Halogen_HTML_Elements.th_([Halogen_HTML_Core.text("CRSid")]),Halogen_HTML_Elements.th_([Halogen_HTML_Core.text("Name")]),Halogen_HTML_Elements.th_([Halogen_HTML_Core.text("Diet")])])]),Halogen_HTML_Elements.tbody_(listDietsRows(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Map.values(bs))))])]))];throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Signup line 199, column 17 - line 201, column 44: "+[v1.constructor.name])}(),function(){var bs,members,v1=Data_Lens_Getter.viewOn(state)(displayEmail(Data_Lens_Internal_Forget.strongForget));if(!v1)return[];if(v1)return[(bs=v,members=Data_Lens_Fold.toListOfOn(bs)(function($57){return Data_Lens_Traversal.traversed(Data_Map.traversableMap)(Data_Lens_Internal_Forget.wanderForget(Data_Monoid_Endo.monoidEndo))(EmmaMCR_Types_Bookings.bookingMember(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Fold.filtered(Data_Lens_Internal_Forget.choiceForget(Data_Monoid_Endo.monoidEndo))(function($58){return v=Data_Lens_Getter.view(EmmaMCR_Types_Members.memberId(Data_Lens_Internal_Forget.strongForget))($58),Data_Eq.notEq(EmmaMCR_Types_Core.eqUserId)(v)(new EmmaMCR_Types_Core.UserId("xxx100"));var v})($57)))}),Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["email","signups","summary"]))])([Halogen_HTML_Elements.header_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Email summary")])]),Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["email","signups"]))])([Halogen_HTML_Core.text(Data_Foldable.intercalate(Data_List_Types.foldableList)(Data_Monoid.monoidString)(", ")(Data_List.zipWith(function(n){return function(e){return Data_String_Yarn.unwords(['"'+n+'"',"<"+e+">"])}})(Data_Lens_Fold.toListOfOn(members)(function($56){return Data_Lens_Traversal.traversed(Data_List_Types.traversableList)(Data_Lens_Internal_Forget.wanderForget(Data_Monoid_Endo.monoidEndo))(EmmaMCR_Types_Members.memberName(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Getter.to(Data_Show.show(EmmaMCR_Types_Core.showPersonName))($56)))}))(Data_Lens_Fold.toListOfOn(members)(function($59){return Data_Lens_Traversal.traversed(Data_List_Types.traversableList)(Data_Lens_Internal_Forget.wanderForget(Data_Monoid_Endo.monoidEndo))(EmmaMCR_Types_Members.memberContacts(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(Data_Lens_Internal_Forget.wanderForget(Data_Monoid_Endo.monoidEndo))(Data_Lens_Lens_Tuple._2(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._Email(Data_Lens_Internal_Forget.choiceForget(Data_Monoid_Endo.monoidEndo))($59)))))}))))])]))];throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Signup line 202, column 17 - line 204, column 44: "+[v1.constructor.name])}()]))]))],Data_Functor.map(Data_Functor.functorArray)(function(x){return Halogen_HTML.slot(Data_Lens_Getter.viewOn(x)(Data_Lens_Lens_Tuple._1(Data_Lens_Internal_Forget.strongForget)))(EmmaMCR_Component_Dinners_Booking.component(dictAPIConstraint))({booking:Data_Lens_Getter.viewOn(x)(Data_Lens_Lens_Tuple._2(Data_Lens_Internal_Forget.strongForget)),owner:Data_Lens_Getter.viewOn(x)(Data_Lens_Lens_Tuple._1(Data_Lens_Internal_Forget.strongForget))})(Halogen_HTML_Events.input(HandleBooking.create(Data_Lens_Getter.viewOn(x)(Data_Lens_Lens_Tuple._1(Data_Lens_Internal_Forget.strongForget)))))})(Data_Map.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Lens_Getter.viewOn(state)(signups(Data_Lens_Internal_Forget.strongForget))))]))}},$$eval=function(dictAPIConstraint){return function(v){if(v instanceof GetBookings)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($65){return dictStrong=Data_Lens_Internal_Forget.strongForget,Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"dinner"}))()()(Data_Symbol.SProxy.value)(dictStrong)(EmmaMCR_Types_Dinners.dinnerMeta(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerId(Data_Lens_Internal_Forget.strongForget)($65)));var dictStrong}))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Forestay["onJust'"](v1)(function(v2){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)})(function(did){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Purescript.getDinnersByDinneridBookings(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(did)))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(function(ss){return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(signups(Data_Profunctor_Strong.strongFn))(Data_Map.fromFoldable(EmmaMCR_Types_Core.ordUserId)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(EmmaMCR_Types_Bookings.keyedBookingDetails)(ss))))}))}))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})});if(v instanceof ToggleDietDisplay)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(displayDiets(Data_Profunctor_Strong.strongFn))(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)});if(v instanceof ToggleEmailDisplay)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(displayEmail(Data_Profunctor_Strong.strongFn))(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)});if(v instanceof HandleBooking&&v.value1 instanceof EmmaMCR_Component_Dinners_Booking.ToggledDietComponent)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(updateBooking(dictAPIConstraint)(v.value0)(Data_Lens_Setter.modifying(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function($66){return EmmaMCR_Types_Bookings.bookingTickets(Data_Profunctor_Strong.strongFn)(Data_Lens_Index.ix(Data_Lens_Index.indexArray)(v.value1.value1)(Data_Lens_Internal_Wander.wanderFunction)(EmmaMCR_Types_Bookings.bookingDiet(Data_Profunctor_Strong.strongFn)($66)))})(function(){if(v.value1.value0 instanceof EmmaMCR_Component_Dinners_Booking.GF)return Data_Lens_Setter.over(function($67){return EmmaMCR_Types_Core.gluten(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Core.glutenFree(Data_Profunctor.profunctorFn)($67))})(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean));if(v.value1.value0 instanceof EmmaMCR_Component_Dinners_Booking.NF)return Data_Lens_Setter.over(function($68){return EmmaMCR_Types_Core.nuts(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Core.nutFree(Data_Profunctor.profunctorFn)($68))})(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean));if(v.value1.value0 instanceof EmmaMCR_Component_Dinners_Booking.WF)return Data_Lens_Setter.over(function($69){return EmmaMCR_Types_Core.wine(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Core.withWine(Data_Profunctor.profunctorFn)($69))})(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean));throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Signup line 147, column 48 - line 150, column 45: "+[v.value1.value0.constructor.name])}())))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2)});if(v instanceof HandleBooking&&v.value1 instanceof EmmaMCR_Component_Dinners_Booking.ChangedDiet)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(updateBooking(dictAPIConstraint)(v.value0)(Data_Lens_Setter.assign(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function($70){return EmmaMCR_Types_Bookings.bookingTickets(Data_Profunctor_Strong.strongFn)(Data_Lens_Index.ix(Data_Lens_Index.indexArray)(v.value1.value1)(Data_Lens_Internal_Wander.wanderFunction)(EmmaMCR_Types_Bookings.bookingDiet(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Core.diet(Data_Profunctor_Strong.strongFn)($70))))})(v.value1.value0)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2)});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Signup line 127, column 1 - line 129, column 66: "+[v.constructor.name])}};exports.component=function(dictAPIConstraint){return Halogen_Component.lifecycleParentComponent(EmmaMCR_Types_Core.ordUserId)({initialState:initialState,render:render(dictAPIConstraint),eval:$$eval(dictAPIConstraint),receiver:Data_Function.const(Data_Maybe.Nothing.value),initializer:Halogen_HTML_Events.input_(GetBookings.create)(Data_Unit.unit),finalizer:Data_Maybe.Nothing.value})},exports.GetBookings=GetBookings,exports.ToggleDietDisplay=ToggleDietDisplay,exports.ToggleEmailDisplay=ToggleEmailDisplay,exports.HandleBooking=HandleBooking}(PS["EmmaMCR.Component.Dinners.Signup"]=PS["EmmaMCR.Component.Dinners.Signup"]||{}),function(exports){"use strict";var Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],DOM_HTML_Indexed_InputType=(PS["Control.Semigroupoid"],PS["DOM.HTML.Indexed.InputType"]),DOM_HTML_Indexed_StepValue=PS["DOM.HTML.Indexed.StepValue"],Data_Array=PS["Data.Array"],Data_Either=(PS["Data.DateTime.Locale"],PS["Data.Either"]),Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Int=PS["Data.Int"],Data_Lens_Internal_Tagged=(PS["Data.Lens"],PS["Data.Lens.Internal.Tagged"]),Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Maybe=PS["Data.Maybe"],Data_Number=PS["Data.Number"],Data_Show=PS["Data.Show"],Data_String=PS["Data.String"],Data_String_Yarn=PS["Data.String.Yarn"],EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],Extra_DateTime=PS["Extra.DateTime"],Forestay=PS.Forestay,Halogen_HTML_Core=(PS.Halogen,PS["Halogen.HTML"],PS["Halogen.HTML.Core"]),Halogen_HTML_Elements=PS["Halogen.HTML.Elements"],Halogen_HTML_Events=PS["Halogen.HTML.Events"],Halogen_HTML_Properties=PS["Halogen.HTML.Properties"],eTime=(PS.Prelude,{noed:function(v){return Forestay.just(Control_Alternative.alternativeArray)(Data_Either.hush(Extra_DateTime.formatLDT(Extra_DateTime.timeFormat)(v.ldt)))(function($53){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Core.text($53))})},ed:function(v){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Elements.input(Data_Array.concat([[Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputText.value),Halogen_HTML_Properties.pattern("[0-9]{2}:[0-9]{2}"),Halogen_HTML_Properties.placeholder("HH:MM"),Halogen_HTML_Properties.step(new DOM_HTML_Indexed_StepValue.Step(300)),Halogen_HTML_Events.onValueInput(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Halogen_HTML_Events.input(v.vi))(function($54){return Data_Either.hush(Extra_DateTime.unformatLT(v.ldt)(Extra_DateTime.timeInputFormat)($54))}))],Forestay.just(Control_Alternative.alternativeArray)(Data_Either.hush(Extra_DateTime.formatLDT(Extra_DateTime.timeInputFormat)(v.ldt)))(function($55){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Properties.value($55))})])))}}),eTextarea={noed:function(v){return Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(v.cs)])(Data_Functor.map(Data_Functor.functorArray)(function($56){return Halogen_HTML_Elements.p_(Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Core.text($56)))})(Data_String_Yarn.lines(v.t)))},ed:function(v){return Halogen_HTML_Elements.textarea([Halogen_HTML_Properties.classes(v.cs),Halogen_HTML_Properties.value(v.t),Halogen_HTML_Properties.placeholder(v.l),Halogen_HTML_Properties.rows(10),Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(v.vi))])}},eText={noed:function(v){return Halogen_HTML_Core.text(v.t)},ed:function(v){return Halogen_HTML_Elements.input([Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputText.value),Halogen_HTML_Properties.value(v.t),Halogen_HTML_Properties.placeholder(v.l),Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(v.vi))])}},ePrice={noed:function(v){return Halogen_HTML_Elements.p([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("price"))])([Halogen_HTML_Core.text(EmmaMCR_Types_Core.displayPounds(v.p))])},ed:function(v){return Halogen_HTML_Elements.input([Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputText.value),Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("price")),Halogen_HTML_Properties.pattern("[0-9]+\\.[0-9]{2}"),Halogen_HTML_Properties.value(Data_String.drop(2)(EmmaMCR_Types_Core.displayPounds(v.p))),Halogen_HTML_Properties.placeholder("£.££"),Halogen_HTML_Properties.step(new DOM_HTML_Indexed_StepValue.Step(.01)),Halogen_HTML_Events.onValueInput(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function($57){return Halogen_HTML_Events.input(v.vi)(Data_Lens_Prism.review(EmmaMCR_Types_Core._Pounds(Data_Lens_Internal_Tagged.taggedProfunctor))($57))})(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Data_Number.fromString)(Forestay.matches("[0-9]+\\.[0-9]{2}"))))])}},eInt={noed:function(v){return Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["in-text"]))])([Halogen_HTML_Core.text(Data_Show.show(Data_Show.showInt)(v.n))])},ed:function(v){return Halogen_HTML_Elements.input([Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputNumber.value),Halogen_HTML_Properties.value(Data_Show.show(Data_Show.showInt)(v.n)),Halogen_HTML_Properties.placeholder(v.l),Halogen_HTML_Events.onValueInput(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Halogen_HTML_Events.input(v.vi))(Data_Int.fromString))])}},eDate={noed:function(v){return Forestay.just(Control_Alternative.alternativeArray)(Data_Either.hush(Extra_DateTime.formatLDT(Extra_DateTime.dateDisplayFormat)(v.ldt)))(function($58){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Core.text($58))})},ed:function(v){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Elements.input(Data_Array.concat([[Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputText.value),Halogen_HTML_Properties.pattern("[0-9]{4}-[0-9]{2}-[0-9]{2}"),Halogen_HTML_Properties.placeholder("YYYY-MM-DD"),Halogen_HTML_Events.onValueInput(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Halogen_HTML_Events.input(v.vi))(function($59){return Data_Either.hush(Extra_DateTime.unformatLD(v.ldt)(Extra_DateTime.dateFormat)($59))}))],Forestay.just(Control_Alternative.alternativeArray)(Data_Either.hush(Extra_DateTime.formatLDT(Extra_DateTime.dateFormat)(v.ldt)))(function($60){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Properties.value($60))})])))}};exports.editable=function(q){return function(v){return Control_Apply.apply(Control_Apply.applyFn)(Data_Functor.map(Data_Functor.functorFn)(Forestay.onJust(q))(v.noed))(function($52){return Data_Function.const(v.ed($52))})}},exports.eText=eText,exports.eInt=eInt,exports.eTextarea=eTextarea,exports.eTime=eTime,exports.eDate=eDate,exports.ePrice=ePrice}(PS["EmmaMCR.Component.Editable"]=PS["EmmaMCR.Component.Editable"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Monad_State_Class=PS["Control.Monad.State.Class"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Eq=(PS["Data.DateTime"],PS["Data.DateTime.Locale"],PS["Data.Eq"]),Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Lens_Fold=(PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.Lens"],PS["Data.Lens.Fold"]),Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Re=PS["Data.Lens.Internal.Re"],Data_Lens_Internal_Wander=PS["Data.Lens.Internal.Wander"],Data_Lens_Iso=PS["Data.Lens.Iso"],Data_Lens_Lens_Unit=PS["Data.Lens.Lens.Unit"],Data_Lens_Prism_Either=PS["Data.Lens.Prism.Either"],Data_Lens_Prism_Maybe=PS["Data.Lens.Prism.Maybe"],Data_Lens_Record=PS["Data.Lens.Record"],Data_Lens_Setter=PS["Data.Lens.Setter"],Data_Lens_Traversal=PS["Data.Lens.Traversal"],Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Monoid=PS["Data.Monoid"],Data_Ord=PS["Data.Ord"],Data_Ordering=PS["Data.Ordering"],Data_Profunctor_Choice=PS["Data.Profunctor.Choice"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Set=(PS["Data.Semigroup"],PS["Data.Set"]),Data_Show=PS["Data.Show"],Data_Symbol=PS["Data.Symbol"],Data_Traversable=PS["Data.Traversable"],Data_Unit=PS["Data.Unit"],EmmaMCR_Component_Common=PS["EmmaMCR.Component.Common"],EmmaMCR_Component_Dinners_Signup=PS["EmmaMCR.Component.Dinners.Signup"],EmmaMCR_Component_Editable=PS["EmmaMCR.Component.Editable"],EmmaMCR_Data=PS["EmmaMCR.Data"],EmmaMCR_Types_Auth=(PS["EmmaMCR.Settings"],PS["EmmaMCR.Types.Auth"]),EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],EmmaMCR_Types_Dinners=PS["EmmaMCR.Types.Dinners"],Extra_DateTime=PS["Extra.DateTime"],Forestay=PS.Forestay,Halogen_Component=(PS.Halogen,PS["Halogen.Component"]),Halogen_HTML=PS["Halogen.HTML"],Halogen_HTML_Core=PS["Halogen.HTML.Core"],Halogen_HTML_Elements=PS["Halogen.HTML.Elements"],Halogen_HTML_Events=PS["Halogen.HTML.Events"],Halogen_HTML_Properties=PS["Halogen.HTML.Properties"],Halogen_Query_HalogenM=PS["Halogen.Query.HalogenM"],EventText=(PS.Prelude,function(){function EventText(value0,value1){this.value0=value0,this.value1=value1}return EventText.create=function(value0){return function(value1){return new EventText(value0,value1)}},EventText}()),EventInt=function(){function EventInt(value0,value1){this.value0=value0,this.value1=value1}return EventInt.create=function(value0){return function(value1){return new EventInt(value0,value1)}},EventInt}(),EventDate=function(){function EventDate(value0,value1){this.value0=value0,this.value1=value1}return EventDate.create=function(value0){return function(value1){return new EventDate(value0,value1)}},EventDate}(),EventPrice=function(){function EventPrice(value0,value1){this.value0=value0,this.value1=value1}return EventPrice.create=function(value0){return function(value1){return new EventPrice(value0,value1)}},EventPrice}(),Closed=function(){function Closed(){}return Closed.value=new Closed,Closed}(),Saved=function(){function Saved(value0){this.value0=value0}return Saved.create=function(value0){return new Saved(value0)},Saved}(),Menu=function(){function Menu(){}return Menu.value=new Menu,Menu}(),Contact=function(){function Contact(){}return Contact.value=new Contact,Contact}(),Tickets=function(){function Tickets(){}return Tickets.value=new Tickets,Tickets}(),Details=function(){function Details(){}return Details.value=new Details,Details}(),Signup=function(){function Signup(){}return Signup.value=new Signup,Signup}(),Login=function(){function Login(value0,value1){this.value0=value0,this.value1=value1}return Login.create=function(value0){return function(value1){return new Login(value0,value1)}},Login}(),SelectDinner=function(){function SelectDinner(value0,value1){this.value0=value0,this.value1=value1}return SelectDinner.create=function(value0){return function(value1){return new SelectDinner(value0,value1)}},SelectDinner}(),Receive=function(){function Receive(value0,value1){this.value0=value0,this.value1=value1}return Receive.create=function(value0){return function(value1){return new Receive(value0,value1)}},Receive}(),ToggleDisplay=function(){function ToggleDisplay(value0,value1){this.value0=value0,this.value1=value1}return ToggleDisplay.create=function(value0){return function(value1){return new ToggleDisplay(value0,value1)}},ToggleDisplay}(),UpdateField=function(){function UpdateField(value0,value1){this.value0=value0,this.value1=value1}return UpdateField.create=function(value0){return function(value1){return new UpdateField(value0,value1)}},UpdateField}(),AddDinnerField=function(){function AddDinnerField(value0,value1){this.value0=value0,this.value1=value1}return AddDinnerField.create=function(value0){return function(value1){return new AddDinnerField(value0,value1)}},AddDinnerField}(),SaveDinner=function(){function SaveDinner(value0){this.value0=value0}return SaveDinner.create=function(value0){return new SaveDinner(value0)},SaveDinner}(),HandleSignup=function(){function HandleSignup(value0,value1){this.value0=value0,this.value1=value1}return HandleSignup.create=function(value0){return function(value1){return new HandleSignup(value0,value1)}},HandleSignup}(),Close=function(){function Close(value0){this.value0=value0}return Close.create=function(value0){return new Close(value0)},Close}(),user=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"user"}))()()(Data_Symbol.SProxy.value)(dictStrong)},mayEdit=Data_Lens_Fold.preview(function($90){return user(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth.userAuths(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth._CurrentCommittee(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($90)))))}),eqDisplay=new Data_Eq.Eq(function(x){return function(y){return x instanceof Menu&&y instanceof Menu||(x instanceof Contact&&y instanceof Contact||x instanceof Tickets&&y instanceof Tickets)}}),ordDisplay=new Data_Ord.Ord(function(){return eqDisplay},function(x){return function(y){if(x instanceof Menu&&y instanceof Menu)return Data_Ordering.EQ.value;if(x instanceof Menu)return Data_Ordering.LT.value;if(y instanceof Menu)return Data_Ordering.GT.value;if(x instanceof Contact&&y instanceof Contact)return Data_Ordering.EQ.value;if(x instanceof Contact)return Data_Ordering.LT.value;if(y instanceof Contact)return Data_Ordering.GT.value;if(x instanceof Tickets&&y instanceof Tickets)return Data_Ordering.EQ.value;throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Dinner line 166, column 8 - line 166, column 42: "+[x.constructor.name,y.constructor.name])}}),emailLink=function(addr){return Halogen_HTML_Elements.a([Halogen_HTML_Properties.href("mailto:"+addr),Halogen_HTML_Properties.target("_blank")])([Halogen_HTML_Core.text(addr)])},displaying=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"displaying"}))()()(Data_Symbol.SProxy.value)(dictStrong)},dinnerState=function(input){return{user:input.user,dinner:input.dinner,displaying:Data_Monoid.mempty(Data_Set.monoidSet(ordDisplay))}},dinner=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"dinner"}))()()(Data_Symbol.SProxy.value)(dictStrong)},headerRender=function(state){var eventSignup=function(ldt){return{ldt:ldt,vi:function($91){return UpdateField.create(EventDate.create(function($92){return EmmaMCR_Types_Dinners.dinnerSignup(Data_Profunctor_Strong.strongFn)(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)(EmmaMCR_Types_Dinners.dinnerSignupOpen(Data_Profunctor_Strong.strongFn)(Data_Lens_Prism_Either._Right(Data_Profunctor_Choice.choiceFn)($92))))})($91))}}},eventDeadline=function(ldt){return{ldt:ldt,vi:function($93){return UpdateField.create(EventDate.create(function($94){return EmmaMCR_Types_Dinners.dinnerSignup(Data_Profunctor_Strong.strongFn)(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)(EmmaMCR_Types_Dinners.dinnerSignupDeadline(Data_Profunctor_Strong.strongFn)($94)))})($93))}}},edit=EmmaMCR_Component_Editable.editable(mayEdit(state)),signup=function(label){return function(eaf){return Data_Function.flip(Forestay.just(Control_Alternative.alternativeArray))(function(ldt){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([EmmaMCR_Data.toClassName(label),"margined"]))])([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text(label)]),Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["time"]))])(edit(EmmaMCR_Component_Editable.eTime)(eaf(ldt))),Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["date"]))])(edit(EmmaMCR_Component_Editable.eDate)(eaf(ldt)))]))})}},dm=Data_Lens_Getter.viewOn(state)(function($95){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerMeta(Data_Lens_Internal_Forget.strongForget)($95))}),eventTitle={l:"Title",t:Data_Lens_Getter.viewOn(dm)(EmmaMCR_Types_Dinners.dinnerTitle(Data_Lens_Internal_Forget.strongForget)),vi:function($96){return UpdateField.create(EventText.create(function($97){return EmmaMCR_Types_Dinners.dinnerMeta(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Dinners.dinnerTitle(Data_Profunctor_Strong.strongFn)($97))})($96))}},withTZ=function(dictProfunctor){return Data_Lens_Iso.iso(function(v){return v.dateTime})(function(v){return{dateTime:v,timeZone:Data_Lens_Getter.viewOn(dm)(function($98){return EmmaMCR_Types_Dinners.dinnerTimeZone(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._Timezone(Data_Lens_Internal_Forget.profunctorForget)($98))})}})(dictProfunctor)};return Halogen_HTML_Elements.header_(Data_Array.concat([Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(dm)(EmmaMCR_Types_Dinners.dinnerId(Data_Lens_Internal_Forget.strongForget)))(function(did){return[Halogen_HTML_Elements.h3([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner-id"]))])([Halogen_HTML_Core.text(Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(did)(EmmaMCR_Types_Dinners._MakeDinnerId(Data_Lens_Internal_Forget.profunctorForget))))])]}),[Halogen_HTML_Elements.h1_([edit(EmmaMCR_Component_Editable.eText)(eventTitle)])],Forestay.just(Control_Alternative.alternativeArray)(EmmaMCR_Data.dinnerLocalDateTime(dm))(function(ldt){return[Halogen_HTML_Elements.h2([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["time"]))])(edit(EmmaMCR_Component_Editable.eTime)({ldt:ldt,vi:function($101){return UpdateField.create(EventDate.create(function($102){return EmmaMCR_Types_Dinners.dinnerMeta(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Dinners.dinnerDate(Data_Profunctor_Strong.strongFn)($102))})($101))}})),Halogen_HTML_Elements.h2([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["date"]))])(edit(EmmaMCR_Component_Editable.eDate)({ldt:ldt,vi:function($103){return UpdateField.create(EventDate.create(function($104){return EmmaMCR_Types_Dinners.dinnerMeta(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Dinners.dinnerDate(Data_Profunctor_Strong.strongFn)($104))})($103))}}))]}),Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(state)(function($105){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerSignup(Data_Lens_Internal_Forget.strongForget)($105))}))(function(su){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["signup"]))])(Data_Array.concat([signup("Signup opens")(eventSignup)(function(su){var v=Data_Lens_Fold.previewOn(su)(function($99){return EmmaMCR_Types_Dinners.dinnerSignupOpen(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Prism_Either._Right(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($99))});if(v instanceof Data_Maybe.Nothing)return EmmaMCR_Data.dinnerLocalDateTime(dm);if(v instanceof Data_Maybe.Just)return Data_Lens_Fold.previewOn(v.value0)(function($100){return Data_Lens_Iso.re(withTZ(Data_Lens_Internal_Re.profunctorRe(Data_Lens_Internal_Forget.profunctorForget)))(Extra_DateTime.localized(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($100))});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Dinner line 353, column 20 - line 355, column 47: "+[v.constructor.name])}(su)),signup("Signup deadline")(eventDeadline)(Data_Lens_Fold.previewOn(su)(function($106){return EmmaMCR_Types_Dinners.dinnerSignupDeadline(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Iso.re(withTZ(Data_Lens_Internal_Re.profunctorRe(Data_Lens_Internal_Forget.profunctorForget)))(Extra_DateTime.localized(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($106)))}))])))})]))},inDinnerOf=function(l){return Data_Lens_Fold.preview(function($107){return dinner(Data_Lens_Internal_Forget.strongForget)(l(Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(Data_Lens_Lens_Unit.united(Data_Lens_Internal_Forget.strongForget)($107))))})},notInDinnerOf=function(l){return Data_Lens_Fold.preview(function($108){return dinner(Data_Lens_Internal_Forget.strongForget)(l(Data_Lens_Prism_Maybe._Nothing(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($108)))})},detailsRender=function(state){var edit=EmmaMCR_Component_Editable.editable(mayEdit(state));return function(v){if(v instanceof Menu)return Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Fold.previewOn(state)(function($114){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerDetails(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Dinners.dinnerMenu(Data_Lens_Internal_Forget.strongForget)($114))))}))(function(menu){return Control_Applicative.pure(Control_Applicative.applicativeArray)(edit(EmmaMCR_Component_Editable.eTextarea)({t:menu,cs:Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner","menu"]),l:"Menu (format: markdown)",vi:function($115){return UpdateField.create(EventText.create(function($116){return EmmaMCR_Types_Dinners.dinnerDetails(Data_Profunctor_Strong.strongFn)(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)(EmmaMCR_Types_Dinners.dinnerMenu(Data_Profunctor_Strong.strongFn)($116)))})($115))}}))});if(v instanceof Contact)return[(contact=Data_Lens_Getter.viewOn(state)(function($117){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerMeta(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerContact(Data_Lens_Internal_Forget.strongForget)($117)))}),Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner","contact"]))])([Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("For general enquiries, contact "),emailLink("dinners@emmamcr.org.uk"),Halogen_HTML_Core.text(".")]),Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("For dietary enquiries, contact "),emailLink("diets@emmamcr.org.uk"),Halogen_HTML_Core.text(".")]),Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("This event’s organiser is "),Halogen_HTML_Core.text(contact),Halogen_HTML_Core.text(".")])]))];var contact;if(v instanceof Tickets)return Data_Array.concat([Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Fold.previewOn(state)(function($118){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerSignup(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Dinners.dinnerMax(Data_Lens_Internal_Forget.strongForget)($118))))}))(function(max){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner","tickets"]))])([Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["margined"]))])([Halogen_HTML_Core.text("For this event, there are"),edit(EmmaMCR_Component_Editable.eInt)({n:Data_Lens_Getter.viewOn(max)(EmmaMCR_Types_Dinners.maxAttendees(Data_Lens_Internal_Forget.strongForget)),l:"max",vi:function($119){return UpdateField.create(EventInt.create(function($120){return EmmaMCR_Types_Dinners.dinnerSignup(Data_Profunctor_Strong.strongFn)(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)(EmmaMCR_Types_Dinners.dinnerMax(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Dinners.maxAttendees(Data_Profunctor_Strong.strongFn)($120))))})($119))}}),Halogen_HTML_Core.text("tickets in total.")]),Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["margined"]))])([Halogen_HTML_Core.text("A maximum of"),edit(EmmaMCR_Component_Editable.eInt)({n:Data_Lens_Getter.viewOn(max)(EmmaMCR_Types_Dinners.maxGuestPerA(Data_Lens_Internal_Forget.strongForget)),l:"max",vi:function($121){return UpdateField.create(EventInt.create(function($122){return EmmaMCR_Types_Dinners.dinnerSignup(Data_Profunctor_Strong.strongFn)(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)(EmmaMCR_Types_Dinners.dinnerMax(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Dinners.maxGuestPerA(Data_Profunctor_Strong.strongFn)($122))))})($121))}}),Halogen_HTML_Core.text("may be booked per booking.")])]))}),Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Fold.previewOn(state)(function($123){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerDetails(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Dinners.dinnerPrices(Data_Lens_Internal_Forget.strongForget)($123))))}))(function(ps){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Elements.ul([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner","prices"]))])([Halogen_HTML_Elements.li([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("margined"))])([Halogen_HTML_Elements.p([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("attendee"))])([Halogen_HTML_Core.text("Members")]),edit(EmmaMCR_Component_Editable.ePrice)({p:Data_Lens_Getter.viewOn(ps)(EmmaMCR_Types_Dinners.priceMember(Data_Lens_Internal_Forget.strongForget)),vi:function($124){return UpdateField.create(EventPrice.create(EmmaMCR_Types_Dinners.pricesMember(Data_Lens_Internal_Wander.wanderFunction))($124))}})]),Halogen_HTML_Elements.li([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("margined"))])([Halogen_HTML_Elements.p([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("attendee"))])([Halogen_HTML_Core.text("Affiliate members")]),Halogen_HTML_Elements.p([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("price"))])([Halogen_HTML_Core.text(Data_Lens_Getter.viewOn(ps)(function($125){return EmmaMCR_Types_Dinners.priceAffiliate(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Getter.to(EmmaMCR_Types_Core.displayPounds)($125))}))])]),Halogen_HTML_Elements.li([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("margined"))])([Halogen_HTML_Elements.p([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("attendee"))])([Halogen_HTML_Core.text("Associate members")]),Halogen_HTML_Elements.p([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("price"))])([Halogen_HTML_Core.text(Data_Lens_Getter.viewOn(ps)(function($126){return EmmaMCR_Types_Dinners.priceAssociate(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Getter.to(EmmaMCR_Types_Core.displayPounds)($126))}))])]),Halogen_HTML_Elements.li([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("margined"))])([Halogen_HTML_Elements.p([Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName("attendee"))])([Halogen_HTML_Core.text("Guests")]),edit(EmmaMCR_Component_Editable.ePrice)({p:Data_Lens_Getter.viewOn(ps)(EmmaMCR_Types_Dinners.priceGuest(Data_Lens_Internal_Forget.strongForget)),vi:function($127){return UpdateField.create(EventPrice.create(EmmaMCR_Types_Dinners.pricesGuest(Data_Lens_Internal_Wander.wanderFunction))($127))}})])]))})]);throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Dinner line 402, column 23 - line 464, column 8: "+[v.constructor.name])}};exports.component=function(dictAPIConstraint){var $$eval=function(v){if(v instanceof Login)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(user(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(EmmaMCR_Types_Auth.eqMCRUser))(v1)(v.value0))(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(user(Data_Profunctor_Strong.strongFn))(v.value0))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)})});if(v instanceof SelectDinner)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(dinner(Data_Profunctor_Strong.strongFn))(v.value0)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof Receive)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)($$eval(Login.create(v.value0.user)(v.value1)))(function(v1){return $$eval(SelectDinner.create(v.value0.dinner)(v1))});if(v instanceof ToggleDisplay)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(displaying(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(displaying(Data_Profunctor_Strong.strongFn))(function(){var v2=Data_Set.member(ordDisplay)(v.value0)(v1);if(v2)return Data_Set.delete(ordDisplay)(v.value0);if(!v2)return Data_Set.insert(ordDisplay)(v.value0);throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Dinner line 78, column 32 - line 80, column 30: "+[v2.constructor.name])}())))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)})});if(v instanceof UpdateField)return next=v.value1,function(v){if(v instanceof EventText)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($109){return dinner(Data_Profunctor_Strong.strongFn)(v.value0($109))})(v.value1)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});if(v instanceof EventInt)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($110){return dinner(Data_Profunctor_Strong.strongFn)(v.value0($110))})(v.value1)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});if(v instanceof EventDate)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($111){return dinner(Data_Profunctor_Strong.strongFn)(v.value0($111))})(Data_Lens_Getter.viewOn(v.value1)(function($112){return Data_Lens_Iso.re(Extra_DateTime.localized(Data_Lens_Internal_Re.cochoiceRe(Data_Lens_Internal_Forget.cochoiceForget)))(Data_Lens_Getter.to(function(v1){return v1.dateTime})($112))}))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});if(v instanceof EventPrice)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($113){return dinner(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Dinners.dinnerDetails(Data_Profunctor_Strong.strongFn)(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)(EmmaMCR_Types_Dinners.dinnerPrices(Data_Profunctor_Strong.strongFn)(v.value0($113)))))})(v.value1)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Dinner line 194, column 1 - line 194, column 83: "+[next.constructor.name,v.constructor.name])}(v.value0);var next;if(v instanceof AddDinnerField)return function(next){return function(v){if(v instanceof Details)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($132){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerDetails(Data_Lens_Internal_Forget.strongForget)($132))}))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(function(){if(v1 instanceof Data_Maybe.Just)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);if(v1 instanceof Data_Maybe.Nothing)return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.setJust(function($133){return dinner(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Dinners.dinnerDetails(Data_Profunctor_Strong.strongFn)($133))})(Data_Monoid.mempty(EmmaMCR_Types_Dinners.monoidDinnerDetails)));throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Dinner line 214, column 3 - line 217, column 52: "+[v1.constructor.name])}())(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)})});if(v instanceof Signup)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($134){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerSignup(Data_Lens_Internal_Forget.strongForget)($134))}))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(function(){if(v1 instanceof Data_Maybe.Just)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);if(v1 instanceof Data_Maybe.Nothing)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($135){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerMeta(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerDate(Data_Lens_Internal_Forget.strongForget)($135)))}))(function(v2){return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.setJust(function($136){return dinner(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Dinners.dinnerSignup(Data_Profunctor_Strong.strongFn)($136))})(EmmaMCR_Types_Dinners.emptyDinnerSignup(v2)))});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Dinner line 222, column 3 - line 226, column 66: "+[v1.constructor.name])}())(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)})});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Dinner line 211, column 1 - line 211, column 88: "+[next.constructor.name,v.constructor.name])}}(v.value1)(v.value0);if(v instanceof SaveDinner)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(dinner(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Saved(v1)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})});if(v instanceof HandleSignup)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);if(v instanceof Close)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(Closed.value))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners.Dinner line 61, column 5 - line 61, column 73: "+[v.constructor.name])};return Halogen_Component.parentComponent(Data_Ord.ordUnit)({initialState:dinnerState,render:function(dictAPIConstraint){return function(state){return Halogen_HTML_Elements.article([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner","component"]))])([headerRender(state),EmmaMCR_Component_Editable.editable(mayEdit(state))(EmmaMCR_Component_Editable.eTextarea)({t:Data_Lens_Getter.viewOn(state)(function($128){return dinner(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerMeta(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerDescription(Data_Lens_Internal_Forget.strongForget)($128)))}),cs:Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner","description"]),l:"Dinner Description (markdown)",vi:function($129){return UpdateField.create(EventText.create(function($130){return EmmaMCR_Types_Dinners.dinnerMeta(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_Dinners.dinnerDescription(Data_Profunctor_Strong.strongFn)($130))})($129))}}),Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner","buttons"]))])(Data_Array.concat([Forestay.just(Control_Alternative.alternativeArray)(mayEdit(state))(function(v){return[EmmaMCR_Component_Common.button("Save")(SaveDinner.create)(!1)]}),Forestay.just(Control_Alternative.alternativeArray)(inDinnerOf(EmmaMCR_Types_Dinners.dinnerDetails(Data_Lens_Internal_Forget.strongForget))(state))(function(v){return[EmmaMCR_Component_Common.button("Menu")(ToggleDisplay.create(Menu.value))(Data_Set.member(ordDisplay)(Menu.value)(Data_Lens_Getter.viewOn(state)(displaying(Data_Lens_Internal_Forget.strongForget))))]}),Forestay.just(Control_Alternative.alternativeArray)(Control_Alt.alt(Data_Maybe.altMaybe)(inDinnerOf(EmmaMCR_Types_Dinners.dinnerDetails(Data_Lens_Internal_Forget.strongForget))(state))(inDinnerOf(EmmaMCR_Types_Dinners.dinnerSignup(Data_Lens_Internal_Forget.strongForget))(state)))(function(v){return[EmmaMCR_Component_Common.button("Tickets")(ToggleDisplay.create(Tickets.value))(Data_Set.member(ordDisplay)(Tickets.value)(Data_Lens_Getter.viewOn(state)(displaying(Data_Lens_Internal_Forget.strongForget))))]}),Forestay.just(Control_Alternative.alternativeArray)(Control_Apply.applySecond(Data_Maybe.applyMaybe)(notInDinnerOf(EmmaMCR_Types_Dinners.dinnerDetails(Data_Lens_Internal_Forget.strongForget))(state))(mayEdit(state)))(function(v){return[EmmaMCR_Component_Common.button("Add Menu/Price")(AddDinnerField.create(Details.value))(!1)]}),Forestay.just(Control_Alternative.alternativeArray)(Control_Apply.applySecond(Data_Maybe.applyMaybe)(notInDinnerOf(EmmaMCR_Types_Dinners.dinnerSignup(Data_Lens_Internal_Forget.strongForget))(state))(mayEdit(state)))(function(v){return[EmmaMCR_Component_Common.button("Add Signup")(AddDinnerField.create(Signup.value))(!1)]}),[EmmaMCR_Component_Common.button("Contact")(ToggleDisplay.create(Contact.value))(Data_Set.member(ordDisplay)(Contact.value)(Data_Lens_Getter.viewOn(state)(displaying(Data_Lens_Internal_Forget.strongForget)))),EmmaMCR_Component_Common.button("Close")(Close.create)(!1)]])),Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinner","details"]))])(Data_Foldable.foldMap(Data_Set.foldableSet)(Data_Monoid.monoidArray)(function($131){return v=detailsRender(state)($131),Data_Array.cons(EmmaMCR_Component_Common.hrCards)(v);var v})(Data_Lens_Getter.viewOn(state)(displaying(Data_Lens_Internal_Forget.strongForget)))),EmmaMCR_Component_Common.hrCards,Halogen_HTML.slot(Data_Unit.unit)(EmmaMCR_Component_Dinners_Signup.component(dictAPIConstraint))({dinner:Data_Lens_Getter.viewOn(state)(dinner(Data_Lens_Internal_Forget.strongForget))})(Halogen_HTML_Events.input(HandleSignup.create))])}}(dictAPIConstraint),eval:$$eval,receiver:Halogen_HTML_Events.input(Receive.create)})},exports.Login=Login,exports.SelectDinner=SelectDinner,exports.Receive=Receive,exports.ToggleDisplay=ToggleDisplay,exports.UpdateField=UpdateField,exports.AddDinnerField=AddDinnerField,exports.SaveDinner=SaveDinner,exports.HandleSignup=HandleSignup,exports.Close=Close,exports.Closed=Closed,exports.Saved=Saved,exports.mayEdit=mayEdit,exports.eqDisplay=eqDisplay,exports.ordDisplay=ordDisplay}(PS["EmmaMCR.Component.Dinners.Dinner"]=PS["EmmaMCR.Component.Dinners.Dinner"]||{}),function(exports){"use strict";var Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Comonad=PS["Control.Comonad"],Control_Monad_Aff_Class=PS["Control.Monad.Aff.Class"],Control_Monad_Eff_Now=PS["Control.Monad.Eff.Now"],Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Control_Monad_State_Class=PS["Control.Monad.State.Class"],Control_Monad_State_Trans=PS["Control.Monad.State.Trans"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Cookie=PS["Data.Cookie"],Data_Date=PS["Data.Date"],Data_Date_Component=PS["Data.Date.Component"],Data_DateTime=PS["Data.DateTime"],Data_DateTime_Locale=PS["Data.DateTime.Locale"],Data_Either=PS["Data.Either"],Data_Enum=PS["Data.Enum"],Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Identity=PS["Data.Identity"],Data_Lens_Fold=(PS["Data.Lens"],PS["Data.Lens.Fold"]),Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Internal_Focusing=PS["Data.Lens.Internal.Focusing"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Tagged=PS["Data.Lens.Internal.Tagged"],Data_Lens_Internal_Wander=PS["Data.Lens.Internal.Wander"],Data_Lens_Prism=PS["Data.Lens.Prism"],Data_Lens_Prism_Maybe=PS["Data.Lens.Prism.Maybe"],Data_Lens_Record=PS["Data.Lens.Record"],Data_Lens_Setter=PS["Data.Lens.Setter"],Data_Lens_Traversal=PS["Data.Lens.Traversal"],Data_Lens_Zoom=PS["Data.Lens.Zoom"],Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Monoid=PS["Data.Monoid"],Data_Ord=PS["Data.Ord"],Data_Profunctor_Star=PS["Data.Profunctor.Star"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Record_Builder=PS["Data.Record.Builder"],Data_Show=PS["Data.Show"],Data_String_Yarn=PS["Data.String.Yarn"],Data_Symbol=PS["Data.Symbol"],Data_Traversable=PS["Data.Traversable"],Data_Unit=PS["Data.Unit"],EmmaMCR_Component_Common=PS["EmmaMCR.Component.Common"],EmmaMCR_Component_Dinners_Dinner=PS["EmmaMCR.Component.Dinners.Dinner"],EmmaMCR_Data=PS["EmmaMCR.Data"],EmmaMCR_Purescript=PS["EmmaMCR.Purescript"],EmmaMCR_Types_Auth=(PS["EmmaMCR.Settings"],PS["EmmaMCR.Types.Auth"]),EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],EmmaMCR_Types_Dinners=PS["EmmaMCR.Types.Dinners"],Forestay=PS.Forestay,Halogen_Component=(PS.Halogen,PS["Halogen.Component"]),Halogen_HTML=PS["Halogen.HTML"],Halogen_HTML_Core=PS["Halogen.HTML.Core"],Halogen_HTML_Elements=PS["Halogen.HTML.Elements"],Halogen_HTML_Events=PS["Halogen.HTML.Events"],Halogen_HTML_Properties=PS["Halogen.HTML.Properties"],Halogen_Query_HalogenM=PS["Halogen.Query.HalogenM"],LoadDinners=(PS.Prelude,function(){function LoadDinners(value0,value1){this.value0=value0,this.value1=value1}return LoadDinners.create=function(value0){return function(value1){return new LoadDinners(value0,value1)}},LoadDinners}()),Login=function(){function Login(value0,value1){this.value0=value0,this.value1=value1}return Login.create=function(value0){return function(value1){return new Login(value0,value1)}},Login}(),SetDinners=function(){function SetDinners(value0,value1){this.value0=value0,this.value1=value1}return SetDinners.create=function(value0){return function(value1){return new SetDinners(value0,value1)}},SetDinners}(),UpdateDinnerMeta=function(){function UpdateDinnerMeta(value0,value1){this.value0=value0,this.value1=value1}return UpdateDinnerMeta.create=function(value0){return function(value1){return new UpdateDinnerMeta(value0,value1)}},UpdateDinnerMeta}(),Receive=function(){function Receive(value0,value1){this.value0=value0,this.value1=value1}return Receive.create=function(value0){return function(value1){return new Receive(value0,value1)}},Receive}(),PickDinner=function(){function PickDinner(value0,value1){this.value0=value0,this.value1=value1}return PickDinner.create=function(value0){return function(value1){return new PickDinner(value0,value1)}},PickDinner}(),CreateDinner=function(){function CreateDinner(value0){this.value0=value0}return CreateDinner.create=function(value0){return new CreateDinner(value0)},CreateDinner}(),HandleDinner=function(){function HandleDinner(value0,value1){this.value0=value0,this.value1=value1}return HandleDinner.create=function(value0){return function(value1){return new HandleDinner(value0,value1)}},HandleDinner}(),LoadPrevTermDinners=function(){function LoadPrevTermDinners(value0){this.value0=value0}return LoadPrevTermDinners.create=function(value0){return new LoadPrevTermDinners(value0)},LoadPrevTermDinners}(),user=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"user"}))()()(Data_Symbol.SProxy.value)(dictStrong)},singleDinner=function(dm){return Halogen_HTML_Elements.article(Data_Array.concat([Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(dm)(EmmaMCR_Types_Dinners.dinnerId(Data_Lens_Internal_Forget.strongForget)))(function(d){return[Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(PickDinner.create(d))),Halogen_HTML_Properties.id_(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Control_Category.id(Control_Category.categoryFn))(["dinner-",Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(d)(EmmaMCR_Types_Dinners._MakeDinnerId(Data_Lens_Internal_Forget.profunctorForget))),"-card"]))]}),Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinners","card"])))]))([Halogen_HTML_Elements.header_([Halogen_HTML_Elements.h2([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["date"]))])([Halogen_HTML_Core.text(EmmaMCR_Data.dDate(dm))]),Halogen_HTML_Elements.h2([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["time"]))])([Halogen_HTML_Core.text(EmmaMCR_Data.dTime(dm))]),Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text(Data_Lens_Getter.viewOn(dm)(EmmaMCR_Types_Dinners.dinnerTitle(Data_Lens_Internal_Forget.strongForget)))])]),Halogen_HTML_Elements.section_(Data_Array.concat([Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Fold.previewOn(dm)(function($70){return EmmaMCR_Types_Dinners.dinnerDescription(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Getter.to(Data_String_Yarn.lines)(Data_Lens_Fold.folded(Data_Maybe_First.monoidFirst)(Data_Foldable.foldableArray)($70)))}))(function($71){return Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Elements.p_(Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Core.text($71))))})]))])},earliest=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"earliest"}))()()(Data_Symbol.SProxy.value)(dictStrong)},dinnersState=function(input){return Data_Record_Builder.build(Data_Record_Builder.merge()(input))({aDinner:Data_Maybe.Nothing.value,earliest:Data_Maybe.Nothing.value})},dinners=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"dinners"}))()()(Data_Symbol.SProxy.value)(dictStrong)},aDinner=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"aDinner"}))()()(Data_Symbol.SProxy.value)(dictStrong)},$$eval=function(dictAPIConstraint){return function(v){if(v instanceof Login)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function(v1){return v1.user}))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(EmmaMCR_Types_Auth.eqMCRUser))(v1)(v.value0))(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(user(Data_Profunctor_Strong.strongFn))(v.value0))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)})});if(v instanceof SetDinners)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(dinners(Data_Profunctor_Strong.strongFn))(v.value0)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof UpdateDinnerMeta)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function(s){return Forestay["execState'"](s)(Data_Lens_Zoom.zoom(function($73){return dinners(Data_Profunctor_Star.strongStar(Data_Lens_Internal_Focusing.focusingFunctor(Data_Identity.functorIdentity)))(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(Data_Lens_Internal_Wander.wanderStar(Data_Lens_Internal_Focusing.focusingApplicative(Data_Identity.applicativeIdentity)(Data_Monoid.monoidUnit)))($73))})(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Lens_Getter.use(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(EmmaMCR_Types_Dinners.dinnerId(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Control_Applicative.when(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Eq.eq(Data_Maybe.eqMaybe(EmmaMCR_Types_Dinners.eqDinnerId))(Data_Lens_Getter.viewOn(v.value0)(EmmaMCR_Types_Dinners.dinnerId(Data_Lens_Internal_Forget.strongForget)))(v1))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(v.value0))})))}))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof Receive)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)($$eval(dictAPIConstraint)(Login.create(v.value0.user)(v.value1)))(function(v1){return $$eval(dictAPIConstraint)(SetDinners.create(v.value0.dinners)(v1))});if(v instanceof PickDinner)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Forestay["liftAff'"](Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(Data_Cookie.getXSRFToken))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Purescript.getDinnersByDinnerid(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(v1)(v.value0)))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(function(d){return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(aDinner(Data_Profunctor_Strong.strongFn))(new Data_Maybe.Just(d)))})))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)})});if(v instanceof CreateDinner)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Forestay["liftAff'"](Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(Control_Monad_Eff_Now.nowDateTime))(function(v1){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($74){return user(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Monoid.monoidString))(EmmaMCR_Types_Auth.userId(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._CRSid(Data_Lens_Internal_Forget.choiceForget(Data_Monoid.monoidString))(EmmaMCR_Types_Core._MakeCRSid(Data_Lens_Internal_Forget.profunctorForget)($74)))))}))(function(v2){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(aDinner(Data_Profunctor_Strong.strongFn))(new Data_Maybe.Just(EmmaMCR_Types_Dinners.emptyDinner(v2)(v1)))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})})});if(v instanceof HandleDinner)return function(dictAPIConstraint){return function(next){return function(v){if(v instanceof EmmaMCR_Component_Dinners_Dinner.Closed)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(aDinner(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});if(v instanceof EmmaMCR_Component_Dinners_Dinner.Saved)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(aDinner(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Data_Eq.eq(Data_Maybe.eqMaybe(EmmaMCR_Types_Dinners.eqDinner))(v1)(new Data_Maybe.Just(v.value0))?Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next):Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Forestay["liftAff'"](Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(Data_Cookie.getXSRFToken))(function(v2){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(function(){var v3=Data_Lens_Getter.viewOn(v.value0)(function($72){return EmmaMCR_Types_Dinners.dinnerMeta(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Dinners.dinnerId(Data_Lens_Internal_Forget.strongForget)($72))});if(v3 instanceof Data_Maybe.Nothing)return EmmaMCR_Purescript.postDinners(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(v2)(v.value0);if(v3 instanceof Data_Maybe.Just)return EmmaMCR_Purescript.putDinnersByDinnerid(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(v2)(v.value0)(v3.value0);throw new Error("Failed pattern match at EmmaMCR.Component.Dinners line 181, column 24 - line 183, column 53: "+[v3.constructor.name])}()))(function(v3){if(v3 instanceof Data_Either.Left)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v3 instanceof Data_Either.Right)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(aDinner(Data_Profunctor_Strong.strongFn))(new Data_Maybe.Just(v3.value0))))(function(){var dm=Data_Lens_Getter.viewOn(v.value0)(EmmaMCR_Types_Dinners.dinnerMeta(Data_Lens_Internal_Forget.strongForget));return Forestay["onJust'"](Data_Lens_Getter.viewOn(dm)(EmmaMCR_Types_Dinners.dinnerId(Data_Lens_Internal_Forget.strongForget)))(function(v4){return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(Halogen_Query_HalogenM.raise(new LoadDinners(Data_Maybe.Nothing.value,Data_Maybe.Nothing.value)))(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next))})(function(v4){return $$eval(dictAPIConstraint)(new UpdateDinnerMeta(dm,next))})});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners line 184, column 5 - line 194, column 52: "+[v3.constructor.name])})})});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners line 169, column 1 - line 171, column 81: "+[next.constructor.name,v.constructor.name])}}}(dictAPIConstraint)(v.value1)(v.value0);if(v instanceof LoadPrevTermDinners)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(earliest(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(function(){var v2=Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Enum.pred(EmmaMCR_Data.enumYearTerm))(v1);if(v2 instanceof Data_Maybe.Just)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new LoadDinners(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v2.value0.year),Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v2.value0.term))))(function(){return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(earliest(Data_Profunctor_Strong.strongFn))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v2.value0)))});if(v2 instanceof Data_Maybe.Nothing)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function($75){return Data_DateTime.date(Control_Comonad.extract(Data_DateTime_Locale.comonadLocalValue)($75))})(Forestay["liftAff'"](Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(Control_Monad_Eff_Now.nowDateTime)))(function(v3){var y=Data_Lens_Prism.review(EmmaMCR_Types_Core._Year(Data_Lens_Internal_Tagged.taggedProfunctor))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v3))),t=EmmaMCR_Data.isTerm(v3);return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new LoadDinners(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(y),Control_Applicative.pure(Data_Maybe.applicativeMaybe)(t))))(function(){return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(earliest(Data_Profunctor_Strong.strongFn))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)({year:y,term:t})))})});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners line 157, column 3 - line 166, column 64: "+[v2.constructor.name])}())(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})});throw new Error("Failed pattern match at EmmaMCR.Component.Dinners line 115, column 1 - line 117, column 66: "+[v.constructor.name])}};exports.component=function(dictAPIConstraint){return Halogen_Component.parentComponent(Data_Ord.ordUnit)({initialState:dinnersState,render:function(dictAPIConstraint){return function(state){return Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinners","component"]))])(Data_Array.concat([[Halogen_HTML_Elements.header_(Data_Array.concat([[Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Dinners")]),EmmaMCR_Component_Common.button("Earlier")(LoadPrevTermDinners.create)(!1)],Forestay.nothing(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(state)(user(Data_Lens_Internal_Forget.strongForget)))(function(v){return[Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Log in to view individual dinners")])]})]))],Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(state)(aDinner(Data_Lens_Internal_Forget.strongForget)))(function(d){return[Halogen_HTML.slot(Data_Unit.unit)(EmmaMCR_Component_Dinners_Dinner.component(dictAPIConstraint))({dinner:d,user:Data_Lens_Getter.viewOn(state)(user(Data_Lens_Internal_Forget.strongForget))})(Halogen_HTML_Events.input(HandleDinner.create))]}),[Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["dinners","deck","loading"]))])(Data_Array.concat([Forestay.just(Control_Alternative.alternativeArray)(EmmaMCR_Component_Dinners_Dinner.mayEdit(state))(function(v){return[EmmaMCR_Component_Common.createElement(CreateDinner.create)]}),(v=Data_Lens_Getter.viewOn(state)(dinners(Data_Lens_Internal_Forget.strongForget)),0===v.length?Forestay.nothing(Control_Alternative.alternativeArray)(EmmaMCR_Component_Dinners_Dinner.mayEdit(state))(function(v1){return[Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("There are currently no dinners scheduled. Check back soon.")])]}):Data_Functor.map(Data_Functor.functorArray)(singleDinner)(v))]))]]));var v}}(dictAPIConstraint),eval:$$eval(dictAPIConstraint),receiver:Halogen_HTML_Events.input(Receive.create)})},exports.Login=Login,exports.SetDinners=SetDinners,exports.UpdateDinnerMeta=UpdateDinnerMeta,exports.Receive=Receive,exports.PickDinner=PickDinner,exports.CreateDinner=CreateDinner,exports.HandleDinner=HandleDinner,exports.LoadPrevTermDinners=LoadPrevTermDinners,exports.LoadDinners=LoadDinners}(PS["EmmaMCR.Component.Dinners"]=PS["EmmaMCR.Component.Dinners"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Coroutine=PS["Control.Coroutine"],Control_Coroutine_Aff=PS["Control.Coroutine.Aff"],Control_Monad_Aff_Class=(PS["Control.Monad.Aff.AVar"],PS["Control.Monad.Aff.Class"]),Control_Monad_Eff=PS["Control.Monad.Eff"],Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Control_Monad_State_Class=(PS["Control.Monad.Rec.Class"],PS["Control.Monad.State.Class"]),DOM_Event_EventTarget=(PS["Control.Semigroupoid"],PS.DOM,PS["DOM.Event.EventTarget"]),DOM_HTML=(PS["DOM.Event.Types"],PS["DOM.HTML"]),DOM_HTML_Event_EventTypes=PS["DOM.HTML.Event.EventTypes"],DOM_HTML_Extras=PS["DOM.HTML.Extras"],DOM_HTML_Types=PS["DOM.HTML.Types"],DOM_HTML_Window=PS["DOM.HTML.Window"],Data_Array=PS["Data.Array"],Data_Cookie=PS["Data.Cookie"],Data_Either=PS["Data.Either"],Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Lens_Getter=(PS["Data.Lens"],PS["Data.Lens.Getter"]),Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Record=PS["Data.Lens.Record"],Data_Lens_Setter=PS["Data.Lens.Setter"],Data_Maybe=PS["Data.Maybe"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Symbol=(PS["Data.Semigroup"],PS["Data.Symbol"]),EmmaMCR_Purescript=PS["EmmaMCR.Purescript"],EmmaMCR_Settings=PS["EmmaMCR.Settings"],EmmaMCR_Types_Auth=PS["EmmaMCR.Types.Auth"],Forestay=PS.Forestay,Halogen_Component=(PS.Halogen,PS["Halogen.Component"]),Halogen_HTML_Core=(PS["Halogen.HTML"],PS["Halogen.HTML.Core"]),Halogen_HTML_Elements=PS["Halogen.HTML.Elements"],Halogen_HTML_Events=PS["Halogen.HTML.Events"],Halogen_HTML_Properties=PS["Halogen.HTML.Properties"],Halogen_Query_HalogenM=PS["Halogen.Query.HalogenM"],Authenticate=(PS["Network.HTTP.Affjax"],PS.Prelude,function(){function Authenticate(value0){this.value0=value0}return Authenticate.create=function(value0){return new Authenticate(value0)},Authenticate}()),Login=function(){function Login(value0){this.value0=value0}return Login.create=function(value0){return new Login(value0)},Login}(),Logout=function(){function Logout(value0){this.value0=value0}return Logout.create=function(value0){return new Logout(value0)},Logout}(),LoggedIn=function(){function LoggedIn(value0){this.value0=value0}return LoggedIn.create=function(value0){return new LoggedIn(value0)},LoggedIn}(),LoggedOut=function(){function LoggedOut(value0){this.value0=value0}return LoggedOut.create=function(value0){return new LoggedOut(value0)},LoggedOut}(),user=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"user"}))()()(Data_Symbol.SProxy.value)(dictStrong)},loginState=Control_Category.id(Control_Category.categoryFn),loginRender=function(state){return Halogen_HTML_Elements.div([Halogen_HTML_Properties.id_("authenticate")])(Data_Array.concat([[Halogen_HTML_Elements.p([Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Authenticate.create)),Halogen_HTML_Properties.class_("button")])([Halogen_HTML_Core.text(Data_Maybe["maybe'"](Data_Function.const(function(v){return"1. "+v}))(Data_Function.const(function(v){return"Re-"+v}))(state.user)("Authenticate with Raven"))])],function(v){if(v instanceof Data_Maybe.Nothing)return[Halogen_HTML_Elements.p([Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Login.create)),Halogen_HTML_Properties.class_("button")])([Halogen_HTML_Core.text("2. Click to log in")])];if(v instanceof Data_Maybe.Just)return[Halogen_HTML_Elements.p([Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Logout.create)),Halogen_HTML_Properties.class_("button")])([Halogen_HTML_Core.text("Logout")])];throw new Error("Failed pattern match at EmmaMCR.Component.Login line 146, column 1 - line 146, column 62: "+[v.constructor.name])}(state.user)]))},listenForToken=function(dictMonadRec){return function(dictMonadAff){return function(baseurl){var producer=function(dictMonadAff){return function(baseurl){return function(eventType){return function(mkTarget){return Control_Coroutine_Aff["produce'"](dictMonadAff)(function(emit){return function(){var v=Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Window.open(baseurl+"authenticate")("raven")(""))(DOM_HTML.window)();return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function(w){return DOM_Event_EventTarget.addEventListener(eventType)(DOM_Event_EventTarget.eventListener(function($34){return emit(Data_Either.Left.create($34))}))(!1)(mkTarget(w))})(v)()}})}}}}(dictMonadAff)(baseurl)(DOM_HTML_Event_EventTypes.message)(DOM_HTML_Types.windowToEventTarget);return Control_Coroutine.runProcess(dictMonadRec)(Control_Coroutine.pullFrom(dictMonadRec)(Control_Coroutine.consumer(dictMonadRec.Monad0())(function($35){return Forestay["liftAff'"](dictMonadAff)((e=$35,function(){var v=DOM_HTML_Extras.messageData(e)();return Data_Maybe["maybe'"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(function($33){return Data_Cookie.setCookie(Data_Cookie.Cookie($33))})(v)(),Data_Functor.map(Data_Maybe.functorMaybe)(Data_Cookie.Token)(v)}));var e}))(producer))}}};exports.component=function(dictAPIConstraint){return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({initialState:loginState,render:loginRender,eval:function(v){if(v instanceof Authenticate)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)((dictStrong=Data_Lens_Internal_Forget.strongForget,Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"baseURL"}))()()(Data_Symbol.SProxy.value)(dictStrong))))(function(v1){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(listenForToken(Halogen_Query_HalogenM.monadRecHalogenM)(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(v1))(function(v2){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})});var dictStrong;if(v instanceof Login)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Forestay["liftAff'"](Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(Data_Cookie.getXSRFToken))(function(v1){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Either.hush)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Purescript.getLogin(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(v1))))(function(v2){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(user(Data_Lens_Internal_Forget.strongForget)))(function(v3){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(EmmaMCR_Types_Auth.eqMCRUser))(v3)(v2))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(user(Data_Profunctor_Strong.strongFn))(v2)))(function(){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function(u0){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(EmmaMCR_Settings.clearSessionStore(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(function(){return Halogen_Query_HalogenM.raise(LoggedOut.create(u0))})})(v3))(function(){return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function(u){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(LoggedIn.create(u)))(function(){return EmmaMCR_Settings.setSession(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(new Data_Symbol.IsSymbol(function(){return"MCRUser"}))(EmmaMCR_Types_Auth.oldGenericMCRUser)(Data_Symbol.SProxy.value)(u)})})(v2)})})))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})})})});if(v instanceof Logout)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(user(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(EmmaMCR_Settings.clearSessionStore(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(function(){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Settings.noContent(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(EmmaMCR_Purescript.getLogout(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))))))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(function(v2){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(user(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value)))(function(){return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function($37){return Halogen_Query_HalogenM.raise(LoggedOut.create($37))})(v1)})})))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})})});throw new Error("Failed pattern match at EmmaMCR.Component.Login line 57, column 5 - line 57, column 58: "+[v.constructor.name])},receiver:Data_Function.const(Data_Maybe.Nothing.value)})},exports.Authenticate=Authenticate,exports.Login=Login,exports.Logout=Logout,exports.LoggedIn=LoggedIn,exports.LoggedOut=LoggedOut,exports.listenForToken=listenForToken}(PS["EmmaMCR.Component.Login"]=PS["EmmaMCR.Component.Login"]||{}),function(exports){"use strict";var Control_Alt=PS["Control.Alt"],Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Control_Apply=PS["Control.Apply"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad_Aff_Class=PS["Control.Monad.Aff.Class"],Control_Monad_Eff_Now=PS["Control.Monad.Eff.Now"],Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Control_Monad_State=PS["Control.Monad.State"],Control_Monad_State_Class=PS["Control.Monad.State.Class"],Control_Monad_State_Trans=PS["Control.Monad.State.Trans"],Control_MonadZero=(PS["Control.MonadPlus"],PS["Control.MonadZero"]),Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Bounded=PS["Data.Bounded"],Data_Cookie=PS["Data.Cookie"],Data_Date=PS["Data.Date"],Data_Date_Component=PS["Data.Date.Component"],Data_Either=(PS["Data.DateTime.Locale"],PS["Data.Either"]),Data_Enum=PS["Data.Enum"],Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Identity=(PS["Data.Generic.Rep"],PS["Data.Generic.Rep.Show"],PS["Data.Identity"]),Data_Lens_Fold=(PS["Data.Lens"],PS["Data.Lens.Fold"]),Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Index=PS["Data.Lens.Index"],Data_Lens_Internal_Focusing=PS["Data.Lens.Internal.Focusing"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Internal_Re=PS["Data.Lens.Internal.Re"],Data_Lens_Internal_Wander=PS["Data.Lens.Internal.Wander"],Data_Lens_Iso=PS["Data.Lens.Iso"],Data_Lens_Prism_Maybe=PS["Data.Lens.Prism.Maybe"],Data_Lens_Record=PS["Data.Lens.Record"],Data_Lens_Setter=PS["Data.Lens.Setter"],Data_Lens_Traversal=PS["Data.Lens.Traversal"],Data_Lens_Zoom=PS["Data.Lens.Zoom"],Data_List_Lazy=PS["Data.List.Lazy"],Data_List_Lazy_Types=PS["Data.List.Lazy.Types"],Data_List_Types=PS["Data.List.Types"],Data_List_ZipList=PS["Data.List.ZipList"],Data_Map=PS["Data.Map"],Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Monoid=PS["Data.Monoid"],Data_Monoid_Endo=PS["Data.Monoid.Endo"],Data_Profunctor_Choice=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Profunctor.Choice"]),Data_Profunctor_Star=PS["Data.Profunctor.Star"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Record_Builder=PS["Data.Record.Builder"],Data_Semigroup=(PS["Data.Ring"],PS["Data.Semigroup"]),Data_Show=PS["Data.Show"],Data_String=PS["Data.String"],Data_String_Yarn=PS["Data.String.Yarn"],Data_Symbol=PS["Data.Symbol"],Data_Time_Duration=PS["Data.Time.Duration"],Data_Traversable=PS["Data.Traversable"],Data_Unfoldable=PS["Data.Unfoldable"],Data_Unit=PS["Data.Unit"],EmmaMCR_Component_Common=PS["EmmaMCR.Component.Common"],EmmaMCR_Component_Editable=PS["EmmaMCR.Component.Editable"],EmmaMCR_Purescript=PS["EmmaMCR.Purescript"],EmmaMCR_Types_Auth=(PS["EmmaMCR.Settings"],PS["EmmaMCR.Types.Auth"]),EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],EmmaMCR_Types_Punting=PS["EmmaMCR.Types.Punting"],Extra_DateTime=PS["Extra.DateTime"],Forestay=PS.Forestay,Halogen_Component=(PS.Halogen,PS["Halogen.Component"]),Halogen_HTML_Core=(PS["Halogen.HTML"],PS["Halogen.HTML.Core"]),Halogen_HTML_Elements=PS["Halogen.HTML.Elements"],Halogen_HTML_Events=PS["Halogen.HTML.Events"],Halogen_HTML_Properties=PS["Halogen.HTML.Properties"],Halogen_Query_HalogenM=PS["Halogen.Query.HalogenM"],EventCRSid=(PS.Prelude,function(){function EventCRSid(value0,value1){this.value0=value0,this.value1=value1}return EventCRSid.create=function(value0){return function(value1){return new EventCRSid(value0,value1)}},EventCRSid}()),EventDate=function(){function EventDate(value0,value1){this.value0=value0,this.value1=value1}return EventDate.create=function(value0){return function(value1){return new EventDate(value0,value1)}},EventDate}(),Upcoming=function(){function Upcoming(){}return Upcoming.value=new Upcoming,Upcoming}(),Calendar=function(){function Calendar(){}return Calendar.value=new Calendar,Calendar}(),LoadPuntBookings=function(){function LoadPuntBookings(value0,value1,value2,value3,value4){this.value0=value0,this.value1=value1,this.value2=value2,this.value3=value3,this.value4=value4}return LoadPuntBookings.create=function(value0){return function(value1){return function(value2){return function(value3){return function(value4){return new LoadPuntBookings(value0,value1,value2,value3,value4)}}}}},LoadPuntBookings}(),UpdatePuntBooking=function(){function UpdatePuntBooking(value0){this.value0=value0}return UpdatePuntBooking.create=function(value0){return new UpdatePuntBooking(value0)},UpdatePuntBooking}(),NewPuntBooking=function(){function NewPuntBooking(value0){this.value0=value0}return NewPuntBooking.create=function(value0){return new NewPuntBooking(value0)},NewPuntBooking}(),ReloadedPuntBookings=function(){function ReloadedPuntBookings(){}return ReloadedPuntBookings.value=new ReloadedPuntBookings,ReloadedPuntBookings}(),Login=function(){function Login(value0,value1){this.value0=value0,this.value1=value1}return Login.create=function(value0){return function(value1){return new Login(value0,value1)}},Login}(),Receive=function(){function Receive(value0,value1){this.value0=value0,this.value1=value1}return Receive.create=function(value0){return function(value1){return new Receive(value0,value1)}},Receive}(),SetPuntBookings=function(){function SetPuntBookings(value0,value1){this.value0=value0,this.value1=value1}return SetPuntBookings.create=function(value0){return function(value1){return new SetPuntBookings(value0,value1)}},SetPuntBookings}(),ReloadPuntBookings=function(){function ReloadPuntBookings(value0){this.value0=value0}return ReloadPuntBookings.create=function(value0){return new ReloadPuntBookings(value0)},ReloadPuntBookings}(),CreatePuntBooking=function(){function CreatePuntBooking(value0){this.value0=value0}return CreatePuntBooking.create=function(value0){return new CreatePuntBooking(value0)},CreatePuntBooking}(),UpdateNewPuntBooking=function(){function UpdateNewPuntBooking(value0,value1){this.value0=value0,this.value1=value1}return UpdateNewPuntBooking.create=function(value0){return function(value1){return new UpdateNewPuntBooking(value0,value1)}},UpdateNewPuntBooking}(),MakePuntBooking=function(){function MakePuntBooking(value0){this.value0=value0}return MakePuntBooking.create=function(value0){return new MakePuntBooking(value0)},MakePuntBooking}(),LoadPuntBooking=function(){function LoadPuntBooking(value0,value1){this.value0=value0,this.value1=value1}return LoadPuntBooking.create=function(value0){return function(value1){return new LoadPuntBooking(value0,value1)}},LoadPuntBooking}(),ToggleDeclared=function(){function ToggleDeclared(value0,value1){this.value0=value0,this.value1=value1}return ToggleDeclared.create=function(value0){return function(value1){return new ToggleDeclared(value0,value1)}},ToggleDeclared}(),SwitchMode=function(){function SwitchMode(value0,value1){this.value0=value0,this.value1=value1}return SwitchMode.create=function(value0){return function(value1){return new SwitchMode(value0,value1)}},SwitchMode}(),ChangeMonth=function(){function ChangeMonth(value0,value1){this.value0=value0,this.value1=value1}return ChangeMonth.create=function(value0){return function(value1){return new ChangeMonth(value0,value1)}},ChangeMonth}(),user=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"user"}))()()(Data_Symbol.SProxy.value)(dictStrong)},puntingState=function(input){return Data_Record_Builder.build(Data_Record_Builder.merge()(input))({mode:Upcoming.value,new:Data_Maybe.Nothing.value})},$$new=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"new"}))()()(Data_Symbol.SProxy.value)(dictStrong)},replacePuntBooking=function(dictMonadState){return function(l){return function(pb){return function(dictMonadState){return function(l){return function(pb){return function(f){return Control_Monad_State_Class.modify(dictMonadState)(Control_Monad_State.execState(Data_Lens_Zoom.zoom(function($96){return l(Data_Profunctor_Star.strongStar(Data_Lens_Internal_Focusing.focusingFunctor(Data_Identity.functorIdentity)))(Data_Lens_Index.ix(Data_Lens_Index.indexMap(Data_Date.ordDate))(Data_Lens_Getter.viewOn(pb)(EmmaMCR_Types_Punting.puntDate(Data_Lens_Internal_Forget.strongForget)))(Data_Lens_Internal_Wander.wanderStar(Data_Lens_Internal_Focusing.focusingApplicative(Data_Identity.applicativeIdentity)(Data_Monoid.monoidUnit)))(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(Data_Lens_Internal_Wander.wanderStar(Data_Lens_Internal_Focusing.focusingApplicative(Data_Identity.applicativeIdentity)(Data_Monoid.monoidUnit)))($96)))})(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Lens_Getter.use(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(EmmaMCR_Types_Punting.puntPunter(Data_Lens_Internal_Forget.strongForget)))(function(v){return Control_Applicative.when(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Eq.eq(EmmaMCR_Types_Core.eqCRSid)(Data_Lens_Getter.viewOn(pb)(EmmaMCR_Types_Punting.puntPunter(Data_Lens_Internal_Forget.strongForget)))(v))(f)}))))}}}}(dictMonadState)(function(dictStrong){return l(dictStrong)})(pb)(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(pb))}}},mode=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"mode"}))()()(Data_Symbol.SProxy.value)(dictStrong)},isFullMember=Data_Lens_Fold.preview(function($99){return EmmaMCR_Types_Auth.userAuths(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth._FullMember(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($99)))}),isCommittee=Data_Lens_Fold.preview(function($100){return Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth.userAuths(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth._CurrentCommittee(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($100))))}),eqMode=new Data_Eq.Eq(function(x){return function(y){return x instanceof Upcoming&&y instanceof Upcoming||x instanceof Calendar&&y instanceof Calendar}}),calYear=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"calYear"}))()()(Data_Symbol.SProxy.value)(dictStrong)},calMonth=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"calMonth"}))()()(Data_Symbol.SProxy.value)(dictStrong)},bookedPunts=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"bookedPunts"}))()()(Data_Symbol.SProxy.value)(dictStrong)},$$eval=function(dictAPIConstraint){return function(v){if(v instanceof Login)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(user(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(EmmaMCR_Types_Auth.eqMCRUser))(v1)(v.value0))(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(user(Data_Profunctor_Strong.strongFn))(v.value0))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)})});if(v instanceof Receive)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)($$eval(dictAPIConstraint)(Login.create(v.value0.user)(v.value1)))(function(v1){return $$eval(dictAPIConstraint)(SetPuntBookings.create(v.value0.bookedPunts)(v1))});if(v instanceof SetPuntBookings)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(bookedPunts(Data_Profunctor_Strong.strongFn))(v.value0)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof ReloadPuntBookings)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(ReloadedPuntBookings.value))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)});if(v instanceof CreatePuntBooking)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(user(Data_Lens_Internal_Forget.strongForget)))(function(v1){var crsid=Data_Lens_Fold.previewOn(v1)(function($101){return Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth.userId(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._CRSid(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($101)))});return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Forestay["liftAff'"](Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(Control_Monad_Eff_Now.nowDateTime))(function(v2){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set($$new(Data_Profunctor_Strong.strongFn))(new Data_Maybe.Just({crsid:crsid,ldt:v2}))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})})});if(v instanceof UpdateNewPuntBooking)return next=v.value1,function(v){if(v instanceof EventCRSid)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($94){return $$new(Data_Profunctor_Strong.strongFn)(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)(v.value0($94)))})(Data_Lens_Getter.viewOn(v.value1)(Data_Lens_Iso.re(EmmaMCR_Types_Core._MakeCRSid(Data_Lens_Internal_Re.profunctorRe(Data_Lens_Internal_Forget.profunctorForget)))))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});if(v instanceof EventDate)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($95){return $$new(Data_Profunctor_Strong.strongFn)(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)(v.value0($95)))})(v.value1)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});throw new Error("Failed pattern match at EmmaMCR.Component.Punting line 259, column 1 - line 259, column 79: "+[next.constructor.name,v.constructor.name])}(v.value0);var next;if(v instanceof MakePuntBooking)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)($$new(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Forestay.onJust(v1)(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit))(function(v2){return Forestay.onJust(v2.crsid)(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit))(function(cid){var pb=EmmaMCR_Types_Punting.makePuntBooking(cid)(Data_Lens_Getter.viewOn(v2.ldt)(function($102){return Data_Lens_Iso.re(Extra_DateTime.localized(Data_Lens_Internal_Re.cochoiceRe(Data_Lens_Internal_Forget.cochoiceForget)))(Extra_DateTime.dateTime(Data_Lens_Internal_Forget.strongForget)(Extra_DateTime.dateL(Data_Lens_Internal_Forget.strongForget)($102)))}));return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Forestay["liftAff'"](Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(Data_Cookie.getXSRFToken))(function(v3){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Purescript.putPuntingBooking(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(v3)(pb)))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(function(pb1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new NewPuntBooking(pb1)))(function(){return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set($$new(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value))})}))})})}))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})});if(v instanceof LoadPuntBooking)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Purescript.getPuntingBookingByUserByDate(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(Data_Lens_Getter.viewOn(v.value0)(EmmaMCR_Types_Punting.puntPunter(Data_Lens_Internal_Forget.strongForget)))(Data_Lens_Getter.viewOn(v.value0)(function($103){return EmmaMCR_Types_Punting.puntDate(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Iso.re(EmmaMCR_Types_Punting._DateS(Data_Lens_Internal_Re.profunctorRe(Data_Lens_Internal_Forget.profunctorForget)))($103))}))))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(function(pb1){return replacePuntBooking(Halogen_Query_HalogenM.monadStateHalogenM)(function(dictStrong){return bookedPunts(dictStrong)})(pb1)})))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof ToggleDeclared){var pb=Forestay["execState'"](v.value0)(Data_Lens_Setter.modifying(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(EmmaMCR_Types_Punting.puntDeclared(Data_Profunctor_Strong.strongFn))(EmmaMCR_Types_Punting.toggleDeclared));return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Forestay["liftAff'"](Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(Data_Cookie.getXSRFToken))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Purescript.putPuntingBooking(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(v1)(pb)))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(function(pb1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new UpdatePuntBooking(pb1)))(function(){return replacePuntBooking(Halogen_Query_HalogenM.monadStateHalogenM)(function(dictStrong){return bookedPunts(dictStrong)})(pb1)})})))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)})})}if(v instanceof SwitchMode)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(mode(Data_Profunctor_Strong.strongFn))(v.value0)))(function(){if(v.value0 instanceof Upcoming)return $$eval(dictAPIConstraint)(new ReloadPuntBookings(v.value1));if(v.value0 instanceof Calendar)return $$eval(dictAPIConstraint)(new ChangeMonth(0,v.value1));throw new Error("Failed pattern match at EmmaMCR.Component.Punting line 244, column 3 - line 246, column 42: "+[v.value0.constructor.name])});if(v instanceof ChangeMonth)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(calMonth(Data_Lens_Internal_Forget.strongForget)))(function(v1){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(calYear(Data_Lens_Internal_Forget.strongForget)))(function(v2){var v3=Extra_DateTime.adjustMonthYear(v.value0)({month:v1,year:v2});return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new LoadPuntBookings(Data_Maybe.Nothing.value,Data_Maybe.Nothing.value,v3.month,v3.year,Data_Maybe.Nothing.value)))(function(){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(calMonth(Data_Profunctor_Strong.strongFn))(Data_Maybe.maybe(Control_Category.id(Control_Category.categoryFn))(Data_Function.const)(v3.month))))(function(){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(calYear(Data_Profunctor_Strong.strongFn))(Data_Maybe.maybe(Control_Category.id(Control_Category.categoryFn))(Data_Function.const)(v3.year))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)})})})})});throw new Error("Failed pattern match at EmmaMCR.Component.Punting line 185, column 1 - line 188, column 51: "+[v.constructor.name])}},bookedPuntCard=function(muser){return function(pb){var punter=Data_Lens_Getter.viewOn(pb)(EmmaMCR_Types_Punting.puntPunter(Data_Lens_Internal_Forget.strongForget)),dt=Data_Lens_Getter.viewOn(pb)(EmmaMCR_Types_Punting.puntDate(Data_Lens_Internal_Forget.strongForget)),declared=Data_Lens_Getter.viewOn(pb)(function($104){return EmmaMCR_Types_Punting.puntDeclared(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Getter.to(Data_Show.show(EmmaMCR_Types_Punting.showDeclared))(Data_Lens_Getter.to(Data_String.toLower)($104)))}),canEdit=Control_Alt.alt(Data_Maybe.altMaybe)(function(punter){return function($97){return Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)((v=Data_Lens_Fold.preview(function($98){return Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth.userId(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._CRSid(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($98)))})($97),Data_Eq.eq(Data_Maybe.eqMaybe(EmmaMCR_Types_Core.eqCRSid))(v)(new Data_Maybe.Just(punter))));var v}}(punter)(muser))(isCommittee(muser));return Halogen_HTML_Elements.article([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting",declared]))])(Data_Array.concat([[Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","date"]))])([Halogen_HTML_Core.text(Extra_DateTime.formatDate(Extra_DateTime.dateFullFormat)(dt))]),Halogen_HTML_Elements.p(Data_Semigroup.append(Data_Semigroup.semigroupArray)([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","punter"]))])(Data_Array.concat([Forestay.nothing(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(pb)(EmmaMCR_Types_Punting.puntName(Data_Lens_Internal_Forget.strongForget)))(function(v){return[Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(LoadPuntBooking.create(pb)))]})])))([Halogen_HTML_Core.text(Data_Maybe.maybe("Click for name")(EmmaMCR_Types_Core.displayPersonName)(Data_Lens_Getter.viewOn(pb)(EmmaMCR_Types_Punting.puntName(Data_Lens_Internal_Forget.strongForget))))]),Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","crsid"]))])([Halogen_HTML_Core.text(Data_Lens_Getter.viewOn(punter)(EmmaMCR_Types_Core._MakeCRSid(Data_Lens_Internal_Forget.profunctorForget)))])],Forestay.just(Control_Alternative.alternativeArray)(canEdit)(function(v){return[Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","buttons"]))])([EmmaMCR_Component_Common.toggle("Book")("Booked")(ToggleDeclared.create(pb))(Data_Eq.eq(EmmaMCR_Types_Punting.eqDeclared)(Data_Lens_Getter.viewOn(pb)(EmmaMCR_Types_Punting.puntDeclared(Data_Lens_Internal_Forget.strongForget)))(EmmaMCR_Types_Punting.Booked.value))])]})]))}},bookedPuntCalendar=function(pb){var declared=Data_Lens_Getter.viewOn(pb)(function($105){return EmmaMCR_Types_Punting.puntDeclared(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Getter.to(Data_Show.show(EmmaMCR_Types_Punting.showDeclared))(Data_Lens_Getter.to(Data_String.toLower)($105)))});return Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["calendar","day","booking",declared]))])([Halogen_HTML_Core.text(Data_Lens_Getter.viewOn(pb)(function($106){return EmmaMCR_Types_Punting.puntPunter(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._MakeCRSid(Data_Lens_Internal_Forget.profunctorForget)($106))}))])},puntCalendar=function(state){var y=Data_Lens_Getter.viewOn(state)(calYear(Data_Lens_Internal_Forget.strongForget)),m=Data_Lens_Getter.viewOn(state)(calMonth(Data_Lens_Internal_Forget.strongForget)),startDay=Data_Date.canonicalDate(y)(m)(Data_Bounded.bottom(Data_Date_Component.boundedDay)),prevDay=Extra_DateTime.adjustDate(Data_Time_Duration.durationDays)(-1)(startDay),endDay=Data_Date.canonicalDate(y)(m)(Data_Date.lastDayOfMonth(y)(m)),pbs=Data_Map.submap(Data_Date.ordDate)(new Data_Maybe.Just(startDay))(new Data_Maybe.Just(endDay))(Data_Lens_Getter.viewOn(state)(bookedPunts(Data_Lens_Internal_Forget.strongForget))),days=function(dictUnfoldable){return Data_Enum.enumFromTo(Data_Date_Component.enumDay)(dictUnfoldable)(Data_Bounded.bottom(Data_Date_Component.boundedDay))(Data_Date.lastDayOfMonth(y)(m))};return Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","calendar"]))])([Halogen_HTML_Elements.header_([EmmaMCR_Component_Common.button("<")(ChangeMonth.create(-1))(!1),Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text(Data_String_Yarn.unwords([Data_Show.show(Data_Date_Component.showMonth)(m),Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(y))]))]),EmmaMCR_Component_Common.button(">")(ChangeMonth.create(1))(!1)]),Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["calendar","days","names"]))])(Data_Functor.map(Data_Functor.functorArray)(function($108){return Halogen_HTML_Elements.p_(Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Core.text(Data_Show.show(Data_Date_Component.showWeekday)($108))))})(Data_Enum.enumFromTo(Data_Date_Component.enumWeekday)(Data_Unfoldable.unfoldableArray)(Data_Date_Component.Monday.value)(Data_Date_Component.Sunday.value))),Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["calendar","days"]))])(Data_Array.fromFoldable(Data_List_ZipList.foldableZipList)(Control_Apply.apply(Data_List_ZipList.applyZipList)(Control_Apply.apply(Data_List_ZipList.applyZipList)(Data_Functor.map(Data_List_ZipList.functorZipList)(function(m){return function(d){return function(wd){return function(pbs){return Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["calendar","day",Data_String.toLower(Data_Show.show(Data_Date_Component.showWeekday)(wd))])),Halogen_HTML_Properties.prop(Halogen_HTML_Core.stringIsProp)("style")(Data_String_Yarn.unwords(["--weekday-no:",Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday)(wd))])),Halogen_HTML_Properties.attr("day")(Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(d))),Halogen_HTML_Properties.attr("weekday")(Data_Show.show(Data_Date_Component.showWeekday)(wd)),Halogen_HTML_Properties.attr("month")(Data_Show.show(Data_Date_Component.showMonth)(m))])(Data_Functor.map(Data_Functor.functorArray)(bookedPuntCalendar)(pbs))}}}}(m))(days(Data_List_Lazy_Types.unfoldableList)))(Forestay.onJust(prevDay)(Data_Monoid.mempty(Data_List_Lazy_Types.monoidList))(function($109){return Data_List_Lazy.cycle((start=$109,Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(Data_Enum.upFrom(Data_Date_Component.enumWeekday)(Data_List_Lazy_Types.unfoldableList)(Data_Date.weekday(start)))(Data_Enum.enumFromTo(Data_Date_Component.enumWeekday)(Data_List_Lazy_Types.unfoldableList)(Data_Date_Component.Monday.value)(Data_Date.weekday(start)))));var start})))(Data_Functor.map(Data_List_Lazy_Types.functorList)(function(d){return Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Lens_Fold.toListOfOn(pbs)(function($107){return Data_Lens_Index.ix(Data_Lens_Index.indexMap(Data_Date.ordDate))(Data_Date.canonicalDate(y)(m)(d))(Data_Lens_Internal_Forget.wanderForget(Data_Monoid_Endo.monoidEndo))(Data_Lens_Fold.folded(Data_Monoid_Endo.monoidEndo)(Data_Foldable.foldableArray)($107))}))})(days(Data_List_Lazy_Types.unfoldableList)))))])},unbookedPuntCard=function(u){return function(pbi){return Halogen_HTML_Elements.article([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","interested","new"]))])(Data_Array.concat([EmmaMCR_Component_Editable.editable(isFullMember(u))(EmmaMCR_Component_Editable.eDate)({ldt:pbi.ldt,vi:function($110){return UpdateNewPuntBooking.create(EventDate.create((dictStrong=Data_Profunctor_Strong.strongFn,Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"ldt"}))()()(Data_Symbol.SProxy.value)(dictStrong)))($110));var dictStrong}}),[EmmaMCR_Component_Editable.editable(isCommittee(new Data_Maybe.Just(u)))(EmmaMCR_Component_Editable.eText)({l:"CRSid",t:Data_Maybe.fromMaybe("Only members can book punts")(Data_Lens_Fold.previewOn(u)(function($111){return EmmaMCR_Types_Auth.userId(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._CRSid(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Core._MakeCRSid(Data_Lens_Internal_Forget.profunctorForget)($111)))})),vi:function($112){return UpdateNewPuntBooking.create(EventCRSid.create(function($113){return dictStrong=Data_Profunctor_Strong.strongFn,Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"crsid"}))()()(Data_Symbol.SProxy.value)(dictStrong)(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn)($113));var dictStrong})($112))}}),EmmaMCR_Component_Common.button("Declare interest")(MakePuntBooking.create)(!1)]]))}},render=function(state){return Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","component"]))])(Data_Array.concat([[Halogen_HTML_Elements.header_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Punting")]),Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","menu"]))])([EmmaMCR_Component_Common.button("Upcoming")(SwitchMode.create(Upcoming.value))(Data_Eq.eq(eqMode)(Data_Lens_Getter.viewOn(state)(mode(Data_Lens_Internal_Forget.strongForget)))(Upcoming.value)),EmmaMCR_Component_Common.button("Calendar")(SwitchMode.create(Calendar.value))(Data_Eq.eq(eqMode)(Data_Lens_Getter.viewOn(state)(mode(Data_Lens_Internal_Forget.strongForget)))(Calendar.value))])])],Forestay.nothing(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(state)(user(Data_Lens_Internal_Forget.strongForget)))(function(v){return[Halogen_HTML_Core.text("Log in to view the punting calendar or make bookings.")]}),[Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","booking"]))])(Data_Array.concat([[Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","rules","pblock"]))])(Data_Array.concat([[Halogen_HTML_Elements.header_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Booking Rules")])])],Data_Functor.map(Data_Functor.functorArray)(function($114){return Halogen_HTML_Elements.p_(Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Core.text($114)))})(["One person may take the punt from Scudamore's per day, and so one punt booking per day is allowed.","Only full members of the MCR may book punts (for now).","You may book the punt twice per calendar month on weekdays (Monday–Thursday) and once per month for weekends (Friday–Sunday).","To book, add the desired date, and once the entry is visible in the list, click to book.","Interested in a using the punt on a day that is booked? Simply leave the booking as a declaration of interest. If you're the only person interested in a day, the punt is yours, and it doesn't count towards your bookings.","You may book, or cancel a booking, up to midnight the day before your punt booking. If you cancel at short notice, please contact anybody interested in using the punt on that day. You may declare interest at any time.","On the day of your booking, collect the subsription card from the porters and sign up your name and phone number using the assigned sheet.","Have fun and stay safe 😁"])])),Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","key"]))])([Halogen_HTML_Elements.section_([Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("It is possible to book punts")]),Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["booked","label"]))])([Halogen_HTML_Core.text("Booked")])]),Halogen_HTML_Elements.section_([Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("or simply declare an interest")]),Halogen_HTML_Elements.p([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["interested","label"]))])([Halogen_HTML_Core.text("Interested")])])])],function(){var v=Data_Lens_Getter.viewOn(state)(mode(Data_Lens_Internal_Forget.strongForget));if(v instanceof Upcoming)return[Halogen_HTML_Elements.section([Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(["punting","deck","loading"]))])(Data_Array.concat([Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(state)(user(Data_Lens_Internal_Forget.strongForget)))(function(u){return Forestay.onJust(Data_Lens_Getter.viewOn(state)($$new(Data_Lens_Internal_Forget.strongForget)))([EmmaMCR_Component_Common.createElement(CreatePuntBooking.create)])(function($115){return Control_Applicative.pure(Control_Applicative.applicativeArray)(unbookedPuntCard(u)($115))})}),[EmmaMCR_Component_Common.reloadElements(ReloadPuntBookings.create)],Data_Functor.map(Data_Functor.functorArray)(bookedPuntCard(Data_Lens_Getter.viewOn(state)(user(Data_Lens_Internal_Forget.strongForget))))(Data_Lens_Getter.viewOn(state)(function($116){return bookedPunts(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Traversal.traversed(Data_Map.traversableMap)(Data_Lens_Internal_Forget.wanderForget(Data_Monoid.monoidArray))($116))}))]))];if(v instanceof Calendar)return[puntCalendar(state)];throw new Error("Failed pattern match at EmmaMCR.Component.Punting line 371, column 9 - line 392, column 33: "+[v.constructor.name])}()]))]]))};exports.component=function(dictAPIConstraint){return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({initialState:puntingState,render:render,eval:$$eval(dictAPIConstraint),receiver:Halogen_HTML_Events.input(Receive.create)})},exports.Login=Login,exports.Receive=Receive,exports.SetPuntBookings=SetPuntBookings,exports.ReloadPuntBookings=ReloadPuntBookings,exports.CreatePuntBooking=CreatePuntBooking,exports.UpdateNewPuntBooking=UpdateNewPuntBooking,exports.MakePuntBooking=MakePuntBooking,exports.LoadPuntBooking=LoadPuntBooking,exports.ToggleDeclared=ToggleDeclared,exports.SwitchMode=SwitchMode,exports.ChangeMonth=ChangeMonth,exports.EventCRSid=EventCRSid,exports.EventDate=EventDate,exports.Upcoming=Upcoming,exports.Calendar=Calendar,exports.LoadPuntBookings=LoadPuntBookings,exports.UpdatePuntBooking=UpdatePuntBooking,exports.NewPuntBooking=NewPuntBooking,exports.ReloadedPuntBookings=ReloadedPuntBookings,exports.replacePuntBooking=replacePuntBooking,exports.eqMode=eqMode}(PS["EmmaMCR.Component.Punting"]=PS["EmmaMCR.Component.Punting"]||{}),function(exports){"use strict";PS["Control.Apply"],PS["Control.Semigroupoid"],PS["Data.Eq"],PS["Data.Function"],PS["Data.Generic"],PS["Data.Generic.Rep"],PS["Data.HeytingAlgebra"],PS["Data.Lens"];var Data_Lens_Iso_Newtype=PS["Data.Lens.Iso.Newtype"],Data_Lens_Record=(PS["Data.Lens.Prism"],PS["Data.Lens.Record"]),Data_Newtype=(PS["Data.Maybe"],PS["Data.Newtype"]),Data_Symbol=(PS["Data.Ord"],PS["Data.Ordering"],PS["Data.Symbol"]),MCRAuthenticate=(PS["Data.Tuple"],PS["Data.Unit"],PS["EmmaMCR.Types.Auth"],PS["EmmaMCR.Types.Bookings"],PS["EmmaMCR.Types.Core"],PS["EmmaMCR.Types.Dinners"],PS["EmmaMCR.Types.Members"],PS.Prelude,function(){function MCRAuthenticate(){}return MCRAuthenticate.value=new MCRAuthenticate,MCRAuthenticate}()),MCRLogin=function(){function MCRLogin(value0){this.value0=value0}return MCRLogin.create=function(value0){return new MCRLogin(value0)},MCRLogin}(),MCRLogout=function(){function MCRLogout(value0){this.value0=value0}return MCRLogout.create=function(value0){return new MCRLogout(value0)},MCRLogout}(),MakeMCRAppSettings=function(x){return x},ServerAction=function(){function ServerAction(value0){this.value0=value0}return ServerAction.create=function(value0){return new ServerAction(value0)},ServerAction}(),UserAction=function(){function UserAction(value0){this.value0=value0}return UserAction.create=function(value0){return new UserAction(value0)},UserAction}(),PublicAction=function(){function PublicAction(value0){this.value0=value0}return PublicAction.create=function(value0){return new PublicAction(value0)},PublicAction}(),AuthAction=function(){function AuthAction(value0){this.value0=value0}return AuthAction.create=function(value0){return new AuthAction(value0)},AuthAction}(),CommitteeAction=function(){function CommitteeAction(value0){this.value0=value0}return CommitteeAction.create=function(value0){return new CommitteeAction(value0)},CommitteeAction}(),TreasurerAction=function(){function TreasurerAction(value0){this.value0=value0}return TreasurerAction.create=function(value0){return new TreasurerAction(value0)},TreasurerAction}(),SecretaryAction=function(){function SecretaryAction(value0){this.value0=value0}return SecretaryAction.create=function(value0){return new SecretaryAction(value0)},SecretaryAction}(),MakeEmmaMCRApp=function(x){return x},newtypeMCRAppSettings=new Data_Newtype.Newtype(function(n){return n},MakeMCRAppSettings),newtypeEmmaMCRApp=new Data_Newtype.Newtype(function(n){return n},MakeEmmaMCRApp);exports.MakeEmmaMCRApp=MakeEmmaMCRApp,exports.emmaMCRAppSettings=function(dictStrong){return function($723){return Data_Lens_Iso_Newtype._Newtype(newtypeEmmaMCRApp)(newtypeEmmaMCRApp)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_emmaMCRAppSettings"}))()()(Data_Symbol.SProxy.value)(dictStrong)($723))}},exports.emmaMCRAppUser=function(dictStrong){return function($722){return Data_Lens_Iso_Newtype._Newtype(newtypeEmmaMCRApp)(newtypeEmmaMCRApp)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_emmaMCRAppUser"}))()()(Data_Symbol.SProxy.value)(dictStrong)($722))}},exports.ServerAction=ServerAction,exports.UserAction=UserAction,exports.PublicAction=PublicAction,exports.AuthAction=AuthAction,exports.CommitteeAction=CommitteeAction,exports.TreasurerAction=TreasurerAction,exports.SecretaryAction=SecretaryAction,exports.MakeMCRAppSettings=MakeMCRAppSettings,exports.mcrDataServer=function(dictStrong){return function($720){return Data_Lens_Iso_Newtype._Newtype(newtypeMCRAppSettings)(newtypeMCRAppSettings)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_mcrDataServer"}))()()(Data_Symbol.SProxy.value)(dictStrong)($720))}},exports.MCRAuthenticate=MCRAuthenticate,exports.MCRLogin=MCRLogin,exports.MCRLogout=MCRLogout,exports.newtypeEmmaMCRApp=newtypeEmmaMCRApp,exports.newtypeMCRAppSettings=newtypeMCRAppSettings}(PS["EmmaMCR.Types.App"]=PS["EmmaMCR.Types.App"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad_Aff_Class=PS["Control.Monad.Aff.Class"],Control_Monad_Except_Trans=(PS["Control.Monad.Except"],PS["Control.Monad.Except.Trans"]),Control_Monad_State=PS["Control.Monad.State"],Control_Monad_State_Class=PS["Control.Monad.State.Class"],Control_Monad_State_Trans=PS["Control.Monad.State.Trans"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Date=(PS["Data.Const"],PS["Data.Date"]),Data_Either=(PS["Data.DateTime.Locale"],PS["Data.Either"]),Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_HeytingAlgebra=(PS["Data.Generic.Rep"],PS["Data.HeytingAlgebra"]),Data_Identity=PS["Data.Identity"],Data_Lens_At=(PS["Data.Lens"],PS["Data.Lens.At"]),Data_Lens_Fold=PS["Data.Lens.Fold"],Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Internal_Focusing=PS["Data.Lens.Internal.Focusing"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Iso_Newtype=PS["Data.Lens.Iso.Newtype"],Data_Lens_Prism_Maybe=PS["Data.Lens.Prism.Maybe"],Data_Lens_Record=PS["Data.Lens.Record"],Data_Lens_Setter=PS["Data.Lens.Setter"],Data_Lens_Traversal=PS["Data.Lens.Traversal"],Data_Lens_Zoom=PS["Data.Lens.Zoom"],Data_Map=PS["Data.Map"],Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Monoid=PS["Data.Monoid"],Data_Newtype=PS["Data.Newtype"],Data_Ord=PS["Data.Ord"],Data_Ordering=PS["Data.Ordering"],Data_Profunctor_Choice=PS["Data.Profunctor.Choice"],Data_Profunctor_Star=PS["Data.Profunctor.Star"],Data_Profunctor_Strong=PS["Data.Profunctor.Strong"],Data_Semigroup=PS["Data.Semigroup"],Data_Symbol=PS["Data.Symbol"],Data_Traversable=PS["Data.Traversable"],Data_Tuple=PS["Data.Tuple"],Data_Unit=PS["Data.Unit"],EmmaMCR_Component_Dinners=PS["EmmaMCR.Component.Dinners"],EmmaMCR_Component_Login=PS["EmmaMCR.Component.Login"],EmmaMCR_Component_Punting=PS["EmmaMCR.Component.Punting"],EmmaMCR_Purescript=(PS["EmmaMCR.Config"],PS["EmmaMCR.Purescript"]),EmmaMCR_Settings=PS["EmmaMCR.Settings"],EmmaMCR_Types_App=PS["EmmaMCR.Types.App"],EmmaMCR_Types_Auth=PS["EmmaMCR.Types.Auth"],EmmaMCR_Types_Core=PS["EmmaMCR.Types.Core"],EmmaMCR_Types_Dinners=PS["EmmaMCR.Types.Dinners"],EmmaMCR_Types_Punting=PS["EmmaMCR.Types.Punting"],Forestay=PS.Forestay,Halogen_Component_ChildPath=(PS.Halogen,PS["Halogen.Component.ChildPath"]),Halogen_Query=PS["Halogen.Query"],Halogen_Query_HalogenM=PS["Halogen.Query.HalogenM"],AccommodationMode=(PS.Prelude,function(){function AccommodationMode(){}return AccommodationMode.value=new AccommodationMode,AccommodationMode}()),BulletinMode=function(){function BulletinMode(){}return BulletinMode.value=new BulletinMode,BulletinMode}(),CommitteeMode=function(){function CommitteeMode(){}return CommitteeMode.value=new CommitteeMode,CommitteeMode}(),DinnersMode=function(){function DinnersMode(){}return DinnersMode.value=new DinnersMode,DinnersMode}(),ElectionsMode=function(){function ElectionsMode(){}return ElectionsMode.value=new ElectionsMode,ElectionsMode}(),SwapMode=function(){function SwapMode(){}return SwapMode.value=new SwapMode,SwapMode}(),PuntMode=function(){function PuntMode(){}return PuntMode.value=new PuntMode,PuntMode}(),AppA=function(){function AppA(value0,value1){this.value0=value0,this.value1=value1}return AppA.create=function(value0){return function(value1){return new AppA(value0,value1)}},AppA}(),HandleLogin=function(){function HandleLogin(value0,value1){this.value0=value0,this.value1=value1}return HandleLogin.create=function(value0){return function(value1){return new HandleLogin(value0,value1)}},HandleLogin}(),HandleDinners=function(){function HandleDinners(value0,value1){this.value0=value0,this.value1=value1}return HandleDinners.create=function(value0){return function(value1){return new HandleDinners(value0,value1)}},HandleDinners}(),HandlePunting=function(){function HandlePunting(value0,value1){this.value0=value0,this.value1=value1}return HandlePunting.create=function(value0){return function(value1){return new HandlePunting(value0,value1)}},HandlePunting}(),SwitchMode=function(){function SwitchMode(value0,value1){this.value0=value0,this.value1=value1}return SwitchMode.create=function(value0){return function(value1){return new SwitchMode(value0,value1)}},SwitchMode}(),RecoverState=function(){function RecoverState(value0){this.value0=value0}return RecoverState.create=function(value0){return new RecoverState(value0)},RecoverState}(),MakeAppState=function(x){return x},puntBookings=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"puntBookings"}))()()(Data_Symbol.SProxy.value)(dictStrong)},newtypeAppState=new Data_Newtype.Newtype(function(n){return n},MakeAppState),setup=function(dictStrong){return function($181){return Data_Lens_Iso_Newtype._Newtype(newtypeAppState)(newtypeAppState)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_setup"}))()()(Data_Symbol.SProxy.value)(dictStrong)($181))}},mode=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_mode"}))()()(Data_Symbol.SProxy.value)(dictStrong)},login=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_login"}))()()(Data_Symbol.SProxy.value)(dictStrong)},eqAppMode=new Data_Eq.Eq(function(x){return function(y){return x instanceof AccommodationMode&&y instanceof AccommodationMode||(x instanceof BulletinMode&&y instanceof BulletinMode||(x instanceof CommitteeMode&&y instanceof CommitteeMode||(x instanceof DinnersMode&&y instanceof DinnersMode||(x instanceof ElectionsMode&&y instanceof ElectionsMode||(x instanceof SwapMode&&y instanceof SwapMode||x instanceof PuntMode&&y instanceof PuntMode)))))}}),dinners=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"dinners"}))()()(Data_Symbol.SProxy.value)(dictStrong)},cmpBool=function(v){return v instanceof Data_Ordering.EQ},app=function(dictStrong){return function($182){return Data_Lens_Iso_Newtype._Newtype(newtypeAppState)(newtypeAppState)(dictStrong.Profunctor0())(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"_app"}))()()(Data_Symbol.SProxy.value)(dictStrong)($182))}},transformMCRAuth=function(dictAPIConstraint){return function(next){return function(v){if(v instanceof EmmaMCR_Types_App.MCRAuthenticate)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(function($183){return app(Data_Profunctor_Strong.strongFn)(login(Data_Profunctor_Strong.strongFn)($183))})(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});if(v instanceof EmmaMCR_Types_App.MCRLogin)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($184){return setup(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_App.emmaMCRAppUser(Data_Profunctor_Strong.strongFn)($184))})(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.value0))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});if(v instanceof EmmaMCR_Types_App.MCRLogout)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($185){return setup(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_App.emmaMCRAppUser(Data_Profunctor_Strong.strongFn)($185))})(Data_Maybe.Nothing.value)))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});throw new Error("Failed pattern match at EmmaMCR.Store line 264, column 1 - line 268, column 49: "+[next.constructor.name,v.constructor.name])}}},mcrAppEval=function(dictAPIConstraint){return function(next){return function(v){if(v instanceof EmmaMCR_Types_App.ServerAction)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(function($186){return setup(Data_Profunctor_Strong.strongFn)(EmmaMCR_Types_App.emmaMCRAppSettings(Data_Profunctor_Strong.strongFn)($186))})(Data_Function.flip(Data_Function.const)(v.value0))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});if(v instanceof EmmaMCR_Types_App.UserAction)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v instanceof EmmaMCR_Types_App.PublicAction)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v instanceof EmmaMCR_Types_App.AuthAction)return transformMCRAuth()(next)(v.value0);if(v instanceof EmmaMCR_Types_App.CommitteeAction)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v instanceof EmmaMCR_Types_App.TreasurerAction)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v instanceof EmmaMCR_Types_App.SecretaryAction)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);throw new Error("Failed pattern match at EmmaMCR.Store line 241, column 1 - line 245, column 49: "+[next.constructor.name,v.constructor.name])}}},switchMode=function(dictAPIConstraint){return function(next){return function(v){if(v instanceof AccommodationMode)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v instanceof BulletinMode)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v instanceof CommitteeMode)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v instanceof DinnersMode)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($187){return app(Data_Lens_Internal_Forget.strongForget)(dinners(Data_Lens_Internal_Forget.strongForget)($187))}))(function(v1){return Data_Foldable.null(Data_Foldable.foldableArray)(v1)?appEval(dictAPIConstraint)(new HandleDinners(new EmmaMCR_Component_Dinners.LoadDinners(Data_Maybe.Nothing.value,Data_Maybe.Nothing.value),next)):Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});if(v instanceof ElectionsMode)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v instanceof SwapMode)return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next);if(v instanceof PuntMode)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($188){return app(Data_Lens_Internal_Forget.strongForget)(puntBookings(Data_Lens_Internal_Forget.strongForget)($188))}))(function(v1){return Data_Foldable.null(Data_Map.foldableMap)(v1)?appEval(dictAPIConstraint)(new HandlePunting(EmmaMCR_Component_Punting.ReloadedPuntBookings.value,next)):Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(next)});throw new Error("Failed pattern match at EmmaMCR.Store line 220, column 1 - line 224, column 62: "+[next.constructor.name,v.constructor.name])}}},appEval=function(dictAPIConstraint){return function(v){if(v instanceof AppA)return mcrAppEval()(v.value1)(v.value0);if(v instanceof HandleLogin&&v.value0 instanceof EmmaMCR_Component_Login.LoggedIn)return mcrAppEval()(v.value1)(new EmmaMCR_Types_App.AuthAction(new EmmaMCR_Types_App.MCRLogin(v.value0.value0)));if(v instanceof HandleLogin&&v.value0 instanceof EmmaMCR_Component_Login.LoggedOut)return mcrAppEval()(v.value1)(new EmmaMCR_Types_App.AuthAction(new EmmaMCR_Types_App.MCRLogout(v.value0.value0)));if(v instanceof HandleDinners)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Purescript.getEvents(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(v.value0.value0)(v.value0.value1)))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(function(dms){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(function($189){return app(Data_Profunctor_Strong.strongFn)(dinners(Data_Profunctor_Strong.strongFn)($189))})(function($190){return Data_Array.nub(EmmaMCR_Types_Dinners.eqDinnerMeta)(Data_Array.sort(EmmaMCR_Types_Dinners.ordDinnerMeta)((v1=$190,Data_Semigroup.append(Data_Semigroup.semigroupArray)(dms)(v1))));var v1})))(function(){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($191){return app(Data_Lens_Internal_Forget.strongForget)(dinners(Data_Lens_Internal_Forget.strongForget)($191))}))(function(v1){return Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid))))(Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Halogen_Query.action(EmmaMCR_Component_Dinners.SetDinners.create(v1)))})})})))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof HandlePunting&&v.value0 instanceof EmmaMCR_Component_Punting.LoadPuntBookings)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Except_Trans.runExceptT(EmmaMCR_Purescript.getPuntingBookings(Control_Monad_Except_Trans.monadAskExceptT(Halogen_Query_HalogenM.monadAskHalogenM(dictAPIConstraint.MonadAsk2())))(Control_Monad_Except_Trans.monadErrorExceptT(Halogen_Query_HalogenM.monadHalogenM))(Control_Monad_Aff_Class.monadAffExceptT(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0())))(v.value0.value0)(v.value0.value1)(v.value0.value2)(v.value0.value3)(v.value0.value4)))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.foldableEither)(function(pbs){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.appendOver(Data_Map.semigroupMap(Data_Date.ordDate))(function($192){return app(Data_Profunctor_Strong.strongFn)(puntBookings(Data_Profunctor_Strong.strongFn)($192))})(Data_Functor.map(Data_Map.functorMap)(Data_Array.nub(EmmaMCR_Types_Punting.eqPuntBooking))(Data_Map.fromFoldableWith(Data_Date.ordDate)(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupArray))(Data_Functor.map(Data_Functor.functorArray)(function($193){return Data_Functor.map(Data_Tuple.functorTuple)(Control_Applicative.pure(Control_Applicative.applicativeArray))(EmmaMCR_Types_Punting.keyedPuntBooking($193))})(pbs))))))(function(){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($194){return app(Data_Lens_Internal_Forget.strongForget)(puntBookings(Data_Lens_Internal_Forget.strongForget)($194))}))(function(v1){return Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid))))(Halogen_Component_ChildPath.cp3)(Data_Unit.unit)(Halogen_Query.action(EmmaMCR_Component_Punting.SetPuntBookings.create(v1)))})})})))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof HandlePunting&&v.value0 instanceof EmmaMCR_Component_Punting.UpdatePuntBooking)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(EmmaMCR_Component_Punting.replacePuntBooking(Halogen_Query_HalogenM.monadStateHalogenM)(function(dictStrong){return function($195){return app(dictStrong)(puntBookings(dictStrong)($195))}})(v.value0.value0))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof HandlePunting&&v.value0 instanceof EmmaMCR_Component_Punting.NewPuntBooking)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Monad_State.execState(Data_Lens_Zoom.zoom(function($196){return app(Data_Profunctor_Star.strongStar(Data_Lens_Internal_Focusing.focusingFunctor(Data_Identity.functorIdentity)))(puntBookings(Data_Profunctor_Star.strongStar(Data_Lens_Internal_Focusing.focusingFunctor(Data_Identity.functorIdentity)))(Data_Lens_At.at(Data_Lens_At.atMap(Data_Date.ordDate))(Data_Lens_Getter.viewOn(v.value0.value0)(EmmaMCR_Types_Punting.puntDate(Data_Lens_Internal_Forget.strongForget)))(Data_Profunctor_Star.strongStar(Data_Lens_Internal_Focusing.focusingFunctor(Data_Identity.functorIdentity)))($196)))})(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Lens_Setter.appendModifying(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Data_Maybe.semigroupMaybe(Data_Semigroup.semigroupArray))(Control_Category.id(Control_Category.categoryFn))(new Data_Maybe.Just([v.value0.value0])))(function(){return Data_Lens_Setter.modifying(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Data_Lens_Prism_Maybe._Just(Data_Profunctor_Choice.choiceFn))(Data_Array.nubBy(function($197){return function($198){return cmpBool(Data_Ord.comparing(EmmaMCR_Types_Core.ordCRSid)(Data_Lens_Getter.view(EmmaMCR_Types_Punting.puntPunter(Data_Lens_Internal_Forget.strongForget)))($197)($198))}}))})))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)});if(v instanceof HandlePunting&&v.value0 instanceof EmmaMCR_Component_Punting.ReloadedPuntBookings)return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($199){return app(Data_Profunctor_Strong.strongFn)(puntBookings(Data_Profunctor_Strong.strongFn)($199))})(Data_Monoid.mempty(Data_Map.monoidMap(Data_Date.ordDate)))))(function(){return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($200){return setup(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_App.emmaMCRAppUser(Data_Lens_Internal_Forget.strongForget)($200))}))(function(v1){var load=function(i){return appEval(dictAPIConstraint)(new HandlePunting(new EmmaMCR_Component_Punting.LoadPuntBookings(i,Data_Maybe.Nothing.value,Data_Maybe.Nothing.value,Data_Maybe.Nothing.value,new Data_Maybe.Just(!0)),v.value1))},v2=Data_Lens_Fold.previewOn(v1)(function($201){return Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth.userAuths(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth._CurrentCommittee(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($201))))});if(v2 instanceof Data_Maybe.Just)return load(Data_Maybe.Nothing.value);if(v2 instanceof Data_Maybe.Nothing)return Forestay["onJust'"](Data_Lens_Fold.previewOn(v1)(function($202){return Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth.userId(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_Core._CRSid(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($202)))}))(function(v3){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)})(function($203){return load(Data_Maybe.Just.create($203))});throw new Error("Failed pattern match at EmmaMCR.Store line 196, column 3 - line 198, column 96: "+[v2.constructor.name])})});if(v instanceof SwitchMode)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM)(function($204){return app(Data_Lens_Internal_Forget.strongForget)(mode(Data_Lens_Internal_Forget.strongForget)($204))}))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.void(Halogen_Query_HalogenM.functorHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(eqAppMode))(new Data_Maybe.Just(v.value0))(v1))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.void(Halogen_Query_HalogenM.functorHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.set(function($205){return app(Data_Profunctor_Strong.strongFn)(mode(Data_Profunctor_Strong.strongFn)($205))})(new Data_Maybe.Just(v.value0)))))(function(){return Data_Functor.void(Halogen_Query_HalogenM.functorHalogenM)(switchMode(dictAPIConstraint)(v.value1)(v.value0))}))))(function(){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1)})});if(v instanceof RecoverState)return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(EmmaMCR_Settings.getSession(Halogen_Query_HalogenM.monadAffHalogenM(dictAPIConstraint.MonadAff0()))(new Data_Symbol.IsSymbol(function(){return"MCRUser"}))(EmmaMCR_Types_Auth.oldGenericMCRUser)(Data_Symbol.SProxy.value))(function(v1){return Forestay["onJust'"](v1)(function(v2){return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0)})(function(u){return appEval(dictAPIConstraint)(new HandleLogin(new EmmaMCR_Component_Login.LoggedIn(u),v.value0))})});throw new Error("Failed pattern match at EmmaMCR.Store line 159, column 1 - line 161, column 73: "+[v.constructor.name])}};exports.AppA=AppA,exports.HandleLogin=HandleLogin,exports.HandleDinners=HandleDinners,exports.HandlePunting=HandlePunting,exports.SwitchMode=SwitchMode,exports.RecoverState=RecoverState,exports.MakeAppState=MakeAppState,exports.setup=setup,exports.app=app,exports.login=login,exports.mode=mode,exports.dinners=dinners,exports.puntBookings=puntBookings,exports.crestURL=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"crestURL"}))()()(Data_Symbol.SProxy.value)(dictStrong)},exports.localDate=function(dictStrong){return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function(){return"localDate"}))()()(Data_Symbol.SProxy.value)(dictStrong)},exports.appState=function(config){return{_setup:{_emmaMCRAppSettings:{_mcrDataServer:config.baseURL,_mcrAppDiets:Data_Monoid.mempty(EmmaMCR_Types_Core.monoidDietMap)},_emmaMCRAppUser:Data_Maybe.Nothing.value,_emmaMCRAppReqs:[]},_app:{_login:!1,_mode:Data_Maybe.Nothing.value,dinners:[],puntBookings:Data_Monoid.mempty(Data_Map.monoidMap(Data_Date.ordDate)),crestURL:config.crestURL,localDate:config.localDate}}},exports.AccommodationMode=AccommodationMode,exports.BulletinMode=BulletinMode,exports.CommitteeMode=CommitteeMode,exports.DinnersMode=DinnersMode,exports.ElectionsMode=ElectionsMode,exports.SwapMode=SwapMode,exports.PuntMode=PuntMode,exports.appEval=appEval,exports.cmpBool=cmpBool,exports.switchMode=switchMode,exports.mcrAppEval=mcrAppEval,exports.transformMCRAuth=transformMCRAuth,exports.newtypeAppState=newtypeAppState,exports.eqAppMode=eqAppMode}(PS["EmmaMCR.Store"]=PS["EmmaMCR.Store"]||{}),function(exports){"use strict";var Control_Alternative=PS["Control.Alternative"],Control_Applicative=PS["Control.Applicative"],Data_Array=(PS["Control.Semigroupoid"],PS["Data.Array"]),Data_Date=PS["Data.Date"],Data_Eq=PS["Data.Eq"],Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_Lens_Fold=(PS["Data.Lens"],PS["Data.Lens.Fold"]),Data_Lens_Getter=PS["Data.Lens.Getter"],Data_Lens_Internal_Forget=PS["Data.Lens.Internal.Forget"],Data_Lens_Prism_Maybe=PS["Data.Lens.Prism.Maybe"],Data_Maybe=PS["Data.Maybe"],Data_Maybe_First=PS["Data.Maybe.First"],Data_Semigroup=PS["Data.Semigroup"],Data_Unit=PS["Data.Unit"],EmmaMCR_Component_Common=PS["EmmaMCR.Component.Common"],EmmaMCR_Component_Dinners=PS["EmmaMCR.Component.Dinners"],EmmaMCR_Component_Login=PS["EmmaMCR.Component.Login"],EmmaMCR_Component_Punting=PS["EmmaMCR.Component.Punting"],EmmaMCR_Store=(PS["EmmaMCR.Settings"],PS["EmmaMCR.Store"]),EmmaMCR_Types_App=PS["EmmaMCR.Types.App"],EmmaMCR_Types_Auth=PS["EmmaMCR.Types.Auth"],Extra_DateTime=PS["Extra.DateTime"],Forestay=PS.Forestay,Halogen_Component_ChildPath=(PS.Halogen,PS["Halogen.Component.ChildPath"]),Halogen_HTML=PS["Halogen.HTML"],Halogen_HTML_Core=PS["Halogen.HTML.Core"],Halogen_HTML_Elements=PS["Halogen.HTML.Elements"],Halogen_HTML_Events=PS["Halogen.HTML.Events"],Halogen_HTML_Properties=PS["Halogen.HTML.Properties"],slotted=(PS.Prelude,function(dictAPIConstraint){return function(v){return function(v1){if(v1 instanceof EmmaMCR_Store.AccommodationMode)return Halogen_HTML_Core.text("Accommodation");if(v1 instanceof EmmaMCR_Store.BulletinMode)return Halogen_HTML_Core.text("Bulletin");if(v1 instanceof EmmaMCR_Store.CommitteeMode)return Halogen_HTML_Core.text("Committee");if(v1 instanceof EmmaMCR_Store.DinnersMode){var i={user:Data_Lens_Getter.viewOn(v)(function($8){return EmmaMCR_Store.setup(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_App.emmaMCRAppUser(Data_Lens_Internal_Forget.strongForget)($8))}),dinners:Data_Lens_Getter.viewOn(v)(function($9){return EmmaMCR_Store.app(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Store.dinners(Data_Lens_Internal_Forget.strongForget)($9))})};return Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(EmmaMCR_Component_Dinners.component(dictAPIConstraint))(i)(Halogen_HTML_Events.input(EmmaMCR_Store.HandleDinners.create))}if(v1 instanceof EmmaMCR_Store.ElectionsMode)return Halogen_HTML_Core.text("Elections");if(v1 instanceof EmmaMCR_Store.SwapMode)return Halogen_HTML_Core.text("Formal swaps");if(v1 instanceof EmmaMCR_Store.PuntMode){var dt=Data_Lens_Getter.viewOn(v)(function($10){return EmmaMCR_Store.app(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Store.localDate(Data_Lens_Internal_Forget.strongForget)(Extra_DateTime.localValue(Data_Lens_Internal_Forget.strongForget)($10)))});i={user:Data_Lens_Getter.viewOn(v)(function($11){return EmmaMCR_Store.setup(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_App.emmaMCRAppUser(Data_Lens_Internal_Forget.strongForget)($11))}),calMonth:Data_Date.month(dt),calYear:Data_Date.year(dt),bookedPunts:Data_Lens_Getter.viewOn(v)(function($12){return EmmaMCR_Store.app(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Store.puntBookings(Data_Lens_Internal_Forget.strongForget)($12))})};return Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp3)(Data_Unit.unit)(EmmaMCR_Component_Punting.component(dictAPIConstraint))(i)(Halogen_HTML_Events.input(EmmaMCR_Store.HandlePunting.create))}throw new Error("Failed pattern match at EmmaMCR.View line 95, column 1 - line 97, column 72: "+[v.constructor.name,v1.constructor.name])}}}),navpoint=function(state){return function(m){return function(t){return EmmaMCR_Component_Common.buttonLi(t)(EmmaMCR_Store.SwitchMode.create(m))(Data_Eq.eq(Data_Maybe.eqMaybe(EmmaMCR_Store.eqAppMode))(Data_Lens_Getter.viewOn(state)(function($13){return EmmaMCR_Store.app(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Store.mode(Data_Lens_Internal_Forget.strongForget)($13))}))(new Data_Maybe.Just(m)))}}};exports.appRender=function(dictAPIConstraint){return function(state){return Halogen_HTML_Elements.div([Halogen_HTML_Properties.id_("halogen")])([Halogen_HTML_Elements.header([Halogen_HTML_Properties.class_("header")])(Data_Array.concat([[Halogen_HTML_Elements.img([Halogen_HTML_Properties.id_("crest"),Halogen_HTML_Properties.src(Data_Maybe.fromMaybe("static/crest.svg")(Data_Lens_Getter.viewOn(state)(function($14){return EmmaMCR_Store.app(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Store.crestURL(Data_Lens_Internal_Forget.strongForget)($14))}))),Halogen_HTML_Properties.width(90)]),Halogen_HTML_Elements.div_([Halogen_HTML_Elements.h1([Halogen_HTML_Properties.class_("title")])([Halogen_HTML_Core.text("Emmanuel College MCR")]),Halogen_HTML_Elements.h2([Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(EmmaMCR_Store.AppA.create(EmmaMCR_Types_App.AuthAction.create(EmmaMCR_Types_App.MCRAuthenticate.value)))),Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(["login","button"])(Data_Lens_Getter.viewOn(state)(function($15){return EmmaMCR_Store.app(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Store.login(Data_Lens_Internal_Forget.strongForget)($15))})?["selected"]:[])))])([Halogen_HTML_Core.text(Data_Maybe.fromMaybe("Login")(Data_Lens_Fold.previewOn(state)(function($16){return EmmaMCR_Store.setup(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_App.emmaMCRAppUser(Data_Lens_Internal_Forget.strongForget)(Data_Lens_Prism_Maybe._Just(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(EmmaMCR_Types_Auth.userName(Data_Lens_Internal_Forget.strongForget)($16))))})))])])],function(){if(Data_Lens_Getter.viewOn(state)(function($17){return EmmaMCR_Store.app(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Store.login(Data_Lens_Internal_Forget.strongForget)($17))})){var user=Data_Lens_Getter.viewOn(state)(function($18){return EmmaMCR_Store.setup(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_App.emmaMCRAppUser(Data_Lens_Internal_Forget.strongForget)($18))}),baseURL=Data_Lens_Getter.viewOn(state)(function($19){return EmmaMCR_Store.setup(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_App.emmaMCRAppSettings(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Types_App.mcrDataServer(Data_Lens_Internal_Forget.strongForget)($19)))});return[Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(EmmaMCR_Component_Login.component(dictAPIConstraint))({baseURL:baseURL,user:user})(Halogen_HTML_Events.input(EmmaMCR_Store.HandleLogin.create))]}return[]}(),[Halogen_HTML_Elements.nav_([Halogen_HTML_Elements.ul_([navpoint(state)(EmmaMCR_Store.DinnersMode.value)("Dinners"),navpoint(state)(EmmaMCR_Store.PuntMode.value)("Punting")])])]])),Halogen_HTML_Elements.section_(Forestay.just(Control_Alternative.alternativeArray)(Data_Lens_Getter.viewOn(state)(function($20){return EmmaMCR_Store.app(Data_Lens_Internal_Forget.strongForget)(EmmaMCR_Store.mode(Data_Lens_Internal_Forget.strongForget)($20))}))(function($21){return Control_Applicative.pure(Control_Applicative.applicativeArray)(slotted(dictAPIConstraint)(state)($21))}))])}},exports.slotted=slotted,exports.navpoint=navpoint}(PS["EmmaMCR.View"]=PS["EmmaMCR.View"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Eff=PS["Control.Monad.Eff"],Control_Monad_Eff_Class=PS["Control.Monad.Eff.Class"],Control_Monad_Eff_Exception=PS["Control.Monad.Eff.Exception"],Control_Monad_Except=(PS["Control.Monad.Error.Class"],PS["Control.Monad.Except"]),DOM_Event_EventTarget=(PS["Control.Semigroupoid"],PS.DOM,PS["DOM.Event.EventTarget"]),DOM_HTML=(PS["DOM.Event.Types"],PS["DOM.HTML"]),DOM_HTML_Document=PS["DOM.HTML.Document"],DOM_HTML_Document_ReadyState=PS["DOM.HTML.Document.ReadyState"],DOM_HTML_Event_EventTypes=PS["DOM.HTML.Event.EventTypes"],DOM_HTML_Types=PS["DOM.HTML.Types"],DOM_HTML_Window=PS["DOM.HTML.Window"],DOM_Node_ParentNode=PS["DOM.Node.ParentNode"],Data_Either=PS["Data.Either"],Data_Foreign=PS["Data.Foreign"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_Maybe=PS["Data.Maybe"],Data_Unit=PS["Data.Unit"],runHalogenAff=(PS["Halogen.Aff.Effects"],PS.Prelude,Control_Monad_Aff.runAff_(Data_Either.either(Control_Monad_Eff_Exception.throwException)(Data_Function.const(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))))),awaitLoad=Control_Monad_Aff.makeAff(function(callback){return Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff)(function(){if(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Document.readyState)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Window.document)(DOM_HTML.window))()instanceof DOM_HTML_Document_ReadyState.Loading){var v1=Data_Functor.map(Control_Monad_Eff.functorEff)(DOM_HTML_Types.windowToEventTarget)(DOM_HTML.window)(),listener=DOM_Event_EventTarget.eventListener(function(v2){return callback(new Data_Either.Right(Data_Unit.unit))});return DOM_Event_EventTarget.addEventListener("DOMContentLoaded")(listener)(!1)(v1)(),function(v2){return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(DOM_Event_EventTarget.removeEventListener(DOM_HTML_Event_EventTypes.load)(listener)(!1)(v1))}}return callback(new Data_Either.Right(Data_Unit.unit))(),Control_Monad_Aff.nonCanceler})});exports.awaitLoad=awaitLoad,exports.selectElement=function(query){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(function($13){return DOM_Node_ParentNode.querySelector(query)(DOM_HTML_Types.htmlDocumentToParentNode($13))})(DOM_HTML_Window.document))(DOM_HTML.window)))(function(v){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(function(){if(v instanceof Data_Maybe.Nothing)return Data_Maybe.Nothing.value;if(v instanceof Data_Maybe.Just)return Data_Either.either(Data_Function.const(Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Control_Monad_Except.runExcept(DOM_HTML_Types.readHTMLElement(Data_Foreign.toForeign(v.value0))));throw new Error("Failed pattern match at Halogen.Aff.Util line 59, column 8 - line 61, column 88: "+[v.constructor.name])}())})},exports.runHalogenAff=runHalogenAff}(PS["Halogen.Aff.Util"]=PS["Halogen.Aff.Util"]||{}),function(exports){"use strict";PS["Control.Applicative"],PS["Control.Bind"],PS["Control.Monad.Aff"],PS["Control.Monad.Eff"];var Control_Monad_Eff_Ref=PS["Control.Monad.Eff.Ref"],Data_Foldable=PS["Data.Foldable"],Data_Functor=(PS["Data.Foreign"],PS["Data.Function"],PS["Data.Functor"]),Data_List_Types=(PS["Data.List"],PS["Data.List.Types"]),Data_Map=PS["Data.Map"],Data_Maybe=PS["Data.Maybe"],Data_StrMap=PS["Data.StrMap"],Unsafe_Coerce=(PS["Data.Traversable"],PS["Halogen.Aff.Effects"],PS["Halogen.Component"],PS["Halogen.Data.OrdBox"],PS.Prelude,PS["Unsafe.Coerce"]),unRenderStateX=Unsafe_Coerce.unsafeCoerce,unDriverStateX=Unsafe_Coerce.unsafeCoerce,mkDriverStateXRef=Unsafe_Coerce.unsafeCoerce;exports.unDriverStateX=unDriverStateX,exports.mkDriverStateXRef=mkDriverStateXRef,exports.renderStateX=function(dictFunctor){return function(f){return unDriverStateX(function(st){return(st.prjQuery,Unsafe_Coerce.unsafeCoerce)(f(st.rendering))})}},exports.renderStateX_=function(dictApplicative){return function(f){return unDriverStateX(function(st){return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering)})}},exports.unRenderStateX=unRenderStateX,exports.initDriverState=function(component){return function(input){return function(handler){return function(prjQuery){return function(lchs){return function(){var v=Control_Monad_Eff_Ref.newRef({})(),v1=Control_Monad_Eff_Ref.newRef(Data_Map.empty)(),v2=Control_Monad_Eff_Ref.newRef(Data_Map.empty)(),v3=Control_Monad_Eff_Ref.newRef(Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value))(),v4=Control_Monad_Eff_Ref.newRef(new Data_Maybe.Just(Data_List_Types.Nil.value))(),v5=Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)(),v6=Control_Monad_Eff_Ref.newRef(0)(),v7=Control_Monad_Eff_Ref.newRef(new Data_Maybe.Just(Data_Map.empty))(),ds={component:component,state:component.initialState(input),refs:Data_StrMap.empty,children:Data_Map.empty,childrenIn:v1,childrenOut:v2,selfRef:v,handler:handler,pendingQueries:v3,pendingOuts:v4,pendingHandlers:v5,rendering:Data_Maybe.Nothing.value,prjQuery:prjQuery,fresh:v6,subscriptions:v7,lifecycleHandlers:lchs};return Control_Monad_Eff_Ref.writeRef(v)(ds)(),mkDriverStateXRef(v)}}}}}}}(PS["Halogen.Aff.Driver.State"]=PS["Halogen.Aff.Driver.State"]||{}),function(exports){"use strict";(PS["Unsafe.Reference"]=PS["Unsafe.Reference"]||{}).reallyUnsafeRefEq=function(a){return function(b){return a===b}}}(),function(exports){"use strict";var unsafeRefEq=PS["Unsafe.Reference"].reallyUnsafeRefEq;exports.unsafeRefEq=unsafeRefEq}(PS["Unsafe.Reference"]=PS["Unsafe.Reference"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Applicative_Free=PS["Control.Applicative.Free"],Control_Bind=PS["Control.Bind"],Control_Coroutine=PS["Control.Coroutine"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Aff_Unsafe=PS["Control.Monad.Aff.Unsafe"],Control_Monad_Eff_Class=(PS["Control.Monad.Eff"],PS["Control.Monad.Eff.Class"]),Control_Monad_Eff_Exception=PS["Control.Monad.Eff.Exception"],Control_Monad_Eff_Ref=PS["Control.Monad.Eff.Ref"],Control_Monad_Error_Class=PS["Control.Monad.Error.Class"],Control_Monad_Fork_Class=PS["Control.Monad.Fork.Class"],Control_Monad_Free=PS["Control.Monad.Free"],Control_Monad_Free_Trans=PS["Control.Monad.Free.Trans"],Control_Monad_Trans_Class=PS["Control.Monad.Trans.Class"],Control_Parallel=PS["Control.Parallel"],Control_Parallel_Class=PS["Control.Parallel.Class"],Data_Boolean=(PS["Control.Semigroupoid"],PS["Data.Boolean"]),Data_Coyoneda=PS["Data.Coyoneda"],Data_Eq=PS["Data.Eq"],Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_List_Types=(PS["Data.List"],PS["Data.List.Types"]),Data_Map=PS["Data.Map"],Data_Maybe=PS["Data.Maybe"],Data_Ord=PS["Data.Ord"],Data_StrMap=(PS["Data.Semiring"],PS["Data.StrMap"]),Halogen_Aff_Driver_State=(PS["Data.Tuple"],PS["Halogen.Aff.Driver.State"]),Halogen_Data_OrdBox=(PS["Halogen.Aff.Effects"],PS["Halogen.Data.OrdBox"]),Halogen_Query_EventSource=PS["Halogen.Query.EventSource"],Halogen_Query_ForkF=PS["Halogen.Query.ForkF"],Halogen_Query_HalogenM=PS["Halogen.Query.HalogenM"],Halogen_Query_InputF=PS["Halogen.Query.InputF"],Unsafe_Reference=(PS.Prelude,PS["Unsafe.Reference"]),queuingHandler=function(handler){return function(ref){return function(message){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v){if(v instanceof Data_Maybe.Nothing)return handler(message);if(v instanceof Data_Maybe.Just)return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(ref)(new Data_Maybe.Just(new Data_List_Types.Cons(handler(message),v.value0))));throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 174, column 3 - line 178, column 57: "+[v.constructor.name])})}}},handleLifecycle=function(lchs){return function(f){return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(lchs)({initializers:Data_List_Types.Nil.value,finalizers:Data_List_Types.Nil.value})))(function(){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(f))(function(v){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(lchs)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v1.finalizers))(function(){return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Parallel.parSequence_(Control_Monad_Aff.parallelAff)(Data_List_Types.foldableList)(v1.initializers))(function(){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v)})})})})})}};exports.handleLifecycle=handleLifecycle,exports.eval=function(render){return function(r){var go=function(ref){return function(v){if(v instanceof Halogen_Query_HalogenM.State)return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v1){var v2=v.value0(v1.state);if(Unsafe_Reference.unsafeRefEq(v1.state)(v2.value1))return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v2.value0);if(Data_Boolean.otherwise)return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(ref)(function(){var $41={};for(var $42 in v1)({}).hasOwnProperty.call(v1,$42)&&($41[$42]=v1[$42]);return $41.state=v2.value1,$41}())))(function(){return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(handleLifecycle(v1.lifecycleHandlers)(render(v1.lifecycleHandlers)(ref)))(function(){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v2.value0)})});throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 78, column 7 - line 84, column 21: "+[v2.constructor.name])});if(v instanceof Halogen_Query_HalogenM.Subscribe)return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v1){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Query_EventSource.unEventSource(v.value0))(function(v2){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref["modifyRef'"](v1.fresh)(function(i){return{state:i+1|0,value:i}})))(function(v3){var done$prime=Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.subscriptions)))(function(v4){return Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.maybe(!1)(Data_Map.member(Data_Ord.ordInt)(v3))(v4))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(v2.done)(function(){return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v1.subscriptions)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map.delete(Data_Ord.ordInt)(v3))))}))});return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v1.subscriptions)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map.insert(Data_Ord.ordInt)(v3)(done$prime)))))(function(){var consumer=Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Coroutine.await(Control_Monad_Aff.monadAff))(function(v4){return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.subscriptions))))(function(v5){return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Data_Maybe.isJust(v5))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(evalF(ref)(v4)))(function(v6){return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Data_Eq.eq(Halogen_Query_EventSource.eqSubscribeStatus)(v6)(Halogen_Query_EventSource.Listening.value))(consumer)}))})});return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.pullFrom(Control_Monad_Aff.monadRecAff)(consumer)(v2.producer)))(function(){return done$prime})})})})))(function(v2){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1)})});if(v instanceof Halogen_Query_HalogenM.Lift)return v.value0;if(v instanceof Halogen_Query_HalogenM.Halt)return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error(v.value0));if(v instanceof Halogen_Query_HalogenM.GetSlots)return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v1){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0(Data_Functor.map(Data_List_Types.functorList)(Halogen_Data_OrdBox.unOrdBox)(Data_Map.keys(v1.children))))});if(v instanceof Halogen_Query_HalogenM.CheckSlot)return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v1){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1(Data_Map.member(Halogen_Data_OrdBox.ordOrdBox)(v1.component.mkOrdBox(v.value0))(v1.children)))});if(v instanceof Halogen_Query_HalogenM.ChildQuery)return evalChildQuery(ref)(v.value0)(v.value1);if(v instanceof Halogen_Query_HalogenM.Raise)return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v1){return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(queuingHandler(v1.handler)(v1.pendingOuts)(v.value0))(function(){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1)})});if(v instanceof Halogen_Query_HalogenM.Par)return Control_Parallel_Class.sequential(Control_Monad_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Control_Monad_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function($109){return Control_Parallel_Class.parallel(Control_Monad_Aff.parallelAff)(evalM(ref)($109))})(v.value0)));if(v instanceof Halogen_Query_HalogenM.Fork)return Halogen_Query_ForkF.unFork(function(v1){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalM(ref)(v1.value0)))(function(v2){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1.value1(function($110){return Control_Monad_Aff_Unsafe.unsafeCoerceAff(Data_Function.flip(Control_Monad_Aff.killFiber)(v2)($110))}))})})(v.value0);if(v instanceof Halogen_Query_HalogenM.GetRef)return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v1){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1(Data_StrMap.lookup(v.value0)(v1.refs)))});throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 75, column 12 - line 131, column 34: "+[v.constructor.name])}},evalM=function(ref){return function(v){return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)(go(ref))(v)}},evalF=function(ref){return function(q){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v){var v1=v.component.eval(q);return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)(go(ref))(v1)})}},evalChildQuery=function(ref){return function(p){return Data_Coyoneda.unCoyoneda(function(k){return function(q){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v){var v1=Data_Map.lookup(Halogen_Data_OrdBox.ordOrdBox)(v.component.mkOrdBox(p))(v.children);if(v1 instanceof Data_Maybe.Just)return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.value0)))(function(v2){return Halogen_Aff_Driver_State.unDriverStateX(function(ds){var v3=ds.prjQuery(q);if(v3 instanceof Data_Maybe.Just)return Data_Functor.map(Control_Monad_Aff.functorAff)(k)(evalF(ds.selfRef)(v3.value0));if(v3 instanceof Data_Maybe.Nothing)return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Query projection failed for child query"));throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 144, column 32 - line 146, column 82: "+[v3.constructor.name])})(v2)});if(v1 instanceof Data_Maybe.Nothing)return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Slot lookup failed for child query"));throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 141, column 5 - line 147, column 73: "+[v1.constructor.name])})}})}};return function(v){if(v instanceof Halogen_Query_InputF.RefUpdate)return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(r)(function(v1){var $102={};for(var $103 in v1)({}).hasOwnProperty.call(v1,$103)&&($102[$103]=v1[$103]);return $102.refs=Data_StrMap.alter(Data_Function.const(v.value1))(v.value0)(v1.refs),$102})))(function(){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value2)});if(v instanceof Halogen_Query_InputF.Query)return evalF(r)(v.value0);throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 61, column 3 - line 66, column 25: "+[v.constructor.name])}}},exports.queuingHandler=queuingHandler}(PS["Halogen.Aff.Driver.Eval"]=PS["Halogen.Aff.Driver.Eval"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Coroutine=PS["Control.Coroutine"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Aff_AVar=PS["Control.Monad.Aff.AVar"],Control_Monad_Eff=PS["Control.Monad.Eff"],Control_Monad_Eff_Class=PS["Control.Monad.Eff.Class"],Control_Monad_Eff_Console=PS["Control.Monad.Eff.Console"],Control_Monad_Eff_Exception=PS["Control.Monad.Eff.Exception"],Control_Monad_Eff_Ref=PS["Control.Monad.Eff.Ref"],Control_Monad_Eff_Unsafe=PS["Control.Monad.Eff.Unsafe"],Control_Monad_Fork_Class=PS["Control.Monad.Fork.Class"],Control_Monad_Rec_Class=PS["Control.Monad.Rec.Class"],Control_Parallel=PS["Control.Parallel"],Data_Either=(PS["Control.Semigroupoid"],PS["Data.Either"]),Data_Foldable=PS["Data.Foldable"],Data_Function=PS["Data.Function"],Data_Functor=PS["Data.Functor"],Data_List=PS["Data.List"],Data_List_Types=PS["Data.List.Types"],Data_Map=PS["Data.Map"],Data_Maybe=PS["Data.Maybe"],Data_Ord=PS["Data.Ord"],Data_Unit=(PS["Data.Semiring"],PS["Data.Traversable"],PS["Data.Tuple"],PS["Data.Unit"]),Halogen_Aff_Driver_Eval=(PS.Halogen,PS["Halogen.Aff.Driver.Eval"]),Halogen_Aff_Driver_State=PS["Halogen.Aff.Driver.State"],Halogen_Component=(PS["Halogen.Aff.Effects"],PS["Halogen.Component"]),Halogen_Data_OrdBox=PS["Halogen.Data.OrdBox"],Halogen_Query_InputF=PS["Halogen.Query.InputF"],newLifecycleHandlers=(PS.Prelude,Control_Monad_Eff_Ref.newRef({initializers:Data_List_Types.Nil.value,finalizers:Data_List_Types.Nil.value})),handleAff=Control_Monad_Aff.runAff_(Data_Either.either(Control_Monad_Eff_Exception.throwException)(Data_Function.const(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))));exports.runUI=function(renderSpec){return function(component){return function(i){var handlePending=function(ref){return function(){var v=Control_Monad_Eff_Ref.readRef(ref)();return Control_Monad_Eff_Ref.writeRef(ref)(Data_Maybe.Nothing.value)(),Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v)(function($63){return handleAff(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($63)))})()}},runComponent=function(lchs){return function(handler){return function(j){return function(prjQuery){return Halogen_Component.unComponent(function(c){return function(){var v=newLifecycleHandlers(),v1=Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(prjQuery)(v)(),v2=Control_Monad_Eff_Ref.readRef(lchs)();return Control_Monad_Eff_Ref.writeRef(lchs)({initializers:Data_List_Types.Nil.value,finalizers:v2.finalizers})(),Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Halogen_Aff_Driver_State.unDriverStateX(function($66){return render(lchs)($66.selfRef)}))(Control_Monad_Eff_Ref.readRef(v1))(),Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(function(lchs){return function(preInits){return Halogen_Aff_Driver_State.unDriverStateX(function(st){var parentInitializer=Data_Functor.map(Data_Maybe.functorMaybe)(function($65){return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($65))})(st.component.initializer);return Control_Monad_Eff_Ref.modifyRef(lchs)(function(handlers){return{initializers:new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Parallel.parSequence_(Control_Monad_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function(){return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Data_Foldable.sequence_(Control_Monad_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(parentInitializer))(function(){return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function(){return handlePending(st.pendingQueries)(),handlePending(st.pendingOuts)()})})}),preInits),finalizers:handlers.finalizers}})})}}(lchs)(v2.initializers))(Control_Monad_Eff_Ref.readRef(v1))(),v1}})}}}},render=function(lchs){return function($$var){return function(){var v=Control_Monad_Eff_Ref.readRef($$var)(),v1=Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.isNothing)(Control_Monad_Eff_Ref.readRef(v.pendingHandlers))();Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v1)(Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(new Data_Maybe.Just(Data_List_Types.Nil.value)))(),Control_Monad_Eff_Ref.writeRef(v.childrenOut)(Data_Map.empty)(),Control_Monad_Eff_Ref.writeRef(v.childrenIn)(v.children)();var handler=Halogen_Aff_Driver_Eval.queuingHandler(function($69){return Data_Functor.void(Control_Monad_Aff.functorAff)(evalF(v.selfRef)($69))})(v.pendingHandlers),childHandler=Halogen_Aff_Driver_Eval.queuingHandler(function($70){return handler(Halogen_Query_InputF.Query.create($70))})(v.pendingQueries),v2=renderSpec.render(function($71){return handleAff(handler($71))})(function(lchs){return function(handler){return function(mkOrdBox){return function(childrenInRef){return function(childrenOutRef){return Halogen_Component.unComponentSlot(function(p){return function(ctor){return function(input){return function(inputQuery){return function(outputQuery){return function(prjQuery){var ordP=mkOrdBox(p);return function(){var v=Control_Monad_Eff_Ref.readRef(childrenInRef)(),v1=function(){var v1=Data_Map.pop(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v);if(v1 instanceof Data_Maybe.Just)return function(){return Control_Monad_Eff_Ref.writeRef(childrenInRef)(v1.value0.value1)(),Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(inputQuery(input))(function(q){return function(){var v2=Control_Monad_Eff_Ref.readRef(v1.value0.value0)();return Halogen_Aff_Driver_State.unDriverStateX(function(st){return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(st.prjQuery(q))(function($67){return handleAff(evalF(st.selfRef)(Halogen_Query_InputF.Query.create($67)))})})(v2)()}})(),v1.value0.value0};if(v1 instanceof Data_Maybe.Nothing)return runComponent(lchs)(function($68){return Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(handler)(outputQuery($68))})(input)(prjQuery)(ctor);throw new Error("Failed pattern match at Halogen.Aff.Driver line 260, column 14 - line 268, column 92: "+[v1.constructor.name])}()(),v2=Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Map.member(Halogen_Data_OrdBox.ordOrdBox)(ordP))(Control_Monad_Eff_Ref.readRef(childrenOutRef))();return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v2)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(Control_Monad_Eff_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur")))(),Control_Monad_Eff_Ref.modifyRef(childrenOutRef)(Data_Map.insert(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v1))(),Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v1))(Halogen_Aff_Driver_State.renderStateX(Control_Monad_Eff.functorEff)(function(v3){if(v3 instanceof Data_Maybe.Nothing)return Control_Monad_Eff_Exception.throw("Halogen internal error: child was not initialized in renderChild");if(v3 instanceof Data_Maybe.Just)return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(renderSpec.renderChild(v3.value0));throw new Error("Failed pattern match at Halogen.Aff.Driver line 274, column 36 - line 276, column 50: "+[v3.constructor.name])}))()}}}}}}})}}}}}(lchs)(childHandler)(v.component.mkOrdBox)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)(),v3=Control_Monad_Eff_Ref.readRef(v.childrenOut)();return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v.childrenIn))(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Map.foldableMap)(function(childVar){return function(){var v4=Control_Monad_Eff_Ref.readRef(childVar)();return Halogen_Aff_Driver_State.renderStateX_(Control_Monad_Eff.applicativeEff)(renderSpec.removeChild)(v4)(),finalize(lchs)(v4)()}}))(),Control_Monad_Eff_Ref.modifyRef(v.selfRef)(function(v4){return{rendering:new Data_Maybe.Just(v2),children:v3,component:v4.component,state:v4.state,refs:v4.refs,childrenIn:v4.childrenIn,childrenOut:v4.childrenOut,selfRef:v4.selfRef,handler:v4.handler,pendingQueries:v4.pendingQueries,pendingOuts:v4.pendingOuts,pendingHandlers:v4.pendingHandlers,prjQuery:v4.prjQuery,fresh:v4.fresh,subscriptions:v4.subscriptions,lifecycleHandlers:v4.lifecycleHandlers}})(),Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v1)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEff))(Data_Unit.unit)(function(v4){return function(){var v5=Control_Monad_Eff_Ref.readRef(v.pendingHandlers)();Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(new Data_Maybe.Just(Data_List_Types.Nil.value))(),Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function($72){return handleAff(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($72)))})(v5)();var v6=Control_Monad_Eff_Ref.readRef(v.pendingHandlers)();return Data_Maybe.maybe(!1)(Data_List.null)(v6)?Data_Functor.voidLeft(Control_Monad_Eff.functorEff)(Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(Data_Maybe.Nothing.value))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))():new Control_Monad_Rec_Class.Loop(Data_Unit.unit)}}))()}}},finalize=function(lchs){return Halogen_Aff_Driver_State.unDriverStateX(function(st){return function(){var v;return v=st,Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function($64){return handleAff(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_Map.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))($64))}))(Control_Monad_Eff_Ref.readRef(v.subscriptions))(),Control_Monad_Eff_Ref.writeRef(v.subscriptions)(Data_Maybe.Nothing.value)(),Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function($73){return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($73))})(st.component.finalizer))(function(f){return Control_Monad_Eff_Ref.modifyRef(lchs)(function(handlers){return{initializers:handlers.initializers,finalizers:new Data_List_Types.Cons(f,handlers.finalizers)}})})(),Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Map.foldableMap)(st.children)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(finalize(lchs))(Control_Monad_Eff_Ref.readRef))()}})},evalF=function(ref){return Halogen_Aff_Driver_Eval.eval(render)(ref)};return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(newLifecycleHandlers))(function(v){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(0)))(function(v1){return Halogen_Aff_Driver_Eval.handleLifecycle(v)(function(){var ref,v2=Control_Monad_Eff_Ref.newRef(Data_Map.empty)();return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(runComponent(v)((ref=v2,function(message){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function(v){return Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_Map.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map.functorMap)(Control_Monad_Aff_AVar.putVar(message))(v))})}))(i)(Data_Maybe.Just.create)(component))(Control_Monad_Eff_Ref.readRef))(Halogen_Aff_Driver_State.unDriverStateX(function(st){return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)({query:(ref=st.selfRef,prjQuery=st.prjQuery,function(q){var v=prjQuery(q);if(v instanceof Data_Maybe.Just)return evalF(ref)(new Halogen_Query_InputF.Query(v.value0));if(v instanceof Data_Maybe.Nothing)return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Halogen internal error: query projection failed in runUI'")));throw new Error("Failed pattern match at Halogen.Aff.Driver line 138, column 5 - line 140, column 110: "+[v.constructor.name])}),subscribe:(fresh=v1,function(ref){return function(consumer){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeEmptyVar)(function(v){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function(){var v1=Control_Monad_Eff_Ref.readRef(fresh)();return Control_Monad_Eff_Ref.modifyRef(fresh)(function(v2){return v2+1|0})(),Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map.insert(Data_Ord.ordInt)(v1)(v))(),v1}))(function(v1){var producer=Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Either.Left.create)(Control_Monad_Aff_AVar.takeVar(v)));return Data_Functor.void(Control_Monad_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.connect(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(producer)(consumer)))(function(){return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map.delete(Data_Ord.ordInt)(v1))))(function(){return Control_Monad_Aff_AVar.killVar(Control_Monad_Eff_Exception.error("ended"))(v)})})))})})}}(v2))});var fresh,prjQuery,ref}))()})})})}}}}(PS["Halogen.Aff.Driver"]=PS["Halogen.Aff.Driver"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Monad_Eff=(PS["Control.Bind"],PS["Control.Monad.Eff"]),DOM_Node_Types=(PS.DOM,PS["DOM.Node.Types"]),Data_Array=PS["Data.Array"],Data_Eq=PS["Data.Eq"],Data_Maybe=(PS["Data.Function.Uncurried"],PS["Data.Maybe"]),Data_Nullable=PS["Data.Nullable"],Data_Tuple=PS["Data.Tuple"],Halogen_VDom_Machine=PS["Halogen.VDom.Machine"],Halogen_VDom_Types=PS["Halogen.VDom.Types"],Halogen_VDom_Util=PS["Halogen.VDom.Util"],eqElemSpec=(PS.Prelude,function(a,b){return!!Data_Eq.eq(Halogen_VDom_Types.eqElemName)(a.value1)(b.value1)&&(a.value0 instanceof Data_Maybe.Just&&b.value0 instanceof Data_Maybe.Just&&a.value0.value0===b.value0.value0||a.value0 instanceof Data_Maybe.Nothing&&b.value0 instanceof Data_Maybe.Nothing)}),buildWidget=function(v){var patch=function(v1){return function(v2){return v2 instanceof Halogen_VDom_Types.Grafted?patch(v1)(Halogen_VDom_Types.runGraft(v2.value0)):v2 instanceof Halogen_VDom_Types.Widget?function(){var v3=v1.value1(v2.value0)();return new Halogen_VDom_Machine.Step(v3.value0,patch(v3),v3.value2)}:function(){return v1.value2(),buildVDom(v)(v2)()}}};return function(w){return function(){var v1=v.buildWidget(v)(w)();return new Halogen_VDom_Machine.Step(v1.value0,patch(v1),v1.value2)}}},buildVDom=function(spec){return function(v){if(v instanceof Halogen_VDom_Types.Text)return buildText(spec)(v.value0);if(v instanceof Halogen_VDom_Types.Elem)return buildElem(spec)(v.value0)(v.value1);if(v instanceof Halogen_VDom_Types.Keyed)return buildKeyed(spec)(v.value0)(v.value1);if(v instanceof Halogen_VDom_Types.Widget)return buildWidget(spec)(v.value0);if(v instanceof Halogen_VDom_Types.Grafted)return buildVDom(spec)(Halogen_VDom_Types.runGraft(v.value0));throw new Error("Failed pattern match at Halogen.VDom.DOM line 58, column 12 - line 63, column 44: "+[v.constructor.name])}},buildText=function(v){var done=function(node){return function(){var v1=Halogen_VDom_Util.unsafeParent(node);return Halogen_VDom_Util.removeChild(node,v1)()}},patch=function(node,s1){return function(v1){if(v1 instanceof Halogen_VDom_Types.Grafted)return patch(node,s1)(Halogen_VDom_Types.runGraft(v1.value0));if(v1 instanceof Halogen_VDom_Types.Text){var res=new Halogen_VDom_Machine.Step(node,patch(node,v1.value0),done(node));return s1===v1.value0?Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(res):function(){return Halogen_VDom_Util.setTextContent(v1.value0,node)(),res}}return function(){return done(node)(),buildVDom(v)(v1)()}}};return function(s){return function(){var v1=Halogen_VDom_Util.createTextNode(s,v.document)();return new Halogen_VDom_Machine.Step(v1,patch(v1,s),done(v1))}}},buildKeyed=function(v){var done=function(node,attrs,steps){return function(){var v1=Halogen_VDom_Util.unsafeParent(node);return Halogen_VDom_Util.removeChild(node,v1)(),Halogen_VDom_Util.forInE(steps,function(v2,v3){return v3.value2})(),Halogen_VDom_Machine.halt(attrs)()}},patch=function(node,attrs,v1,ch1,len1){return function(v2){if(v2 instanceof Halogen_VDom_Types.Grafted)return patch(node,attrs,v1,ch1,len1)(Halogen_VDom_Types.runGraft(v2.value0));if(v2 instanceof Halogen_VDom_Types.Keyed&&eqElemSpec(v1,v2.value0)){var v3=Data_Array.length(v2.value1);if(0===len1&&0===v3)return function(){var v5=Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();return new Halogen_VDom_Machine.Step(node,patch(node,v5,v2.value0,ch1,0),done(node,v5,ch1))};var onThis=function(k,v5){return v5.value2},onThese=function(k,ix$prime,v5,v6){return function(){var v7=v5.value1(v6.value1)();return Halogen_VDom_Util.insertChildIx(ix$prime,v7.value0,node)(),v7}},onThat=function(k,ix,v5){return function(){var v6=buildVDom(v)(v5.value1)();return Halogen_VDom_Util.insertChildIx(ix,v6.value0,node)(),v6}};return function(){var v5=Halogen_VDom_Util.diffWithKeyAndIxE(ch1,v2.value1,Data_Tuple.fst,onThese,onThis,onThat)(),v6=Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();return new Halogen_VDom_Machine.Step(node,patch(node,v6,v2.value0,v5,v3),done(node,v6,v5))}}return function(){return done(node,attrs,ch1)(),buildVDom(v)(v2)()}}};return function(v1){return function(ch1){return function(){var v2=Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0),v1.value1,v.document)(),node=DOM_Node_Types.elementToNode(v2),v3=Halogen_VDom_Util.strMapWithIxE(ch1,Data_Tuple.fst,function(k,ix,v3){return function(){var v4=buildVDom(v)(v3.value1)();return Halogen_VDom_Util.insertChildIx(ix,v4.value0,node)(),v4}})(),v4=v.buildAttributes(v2)(v1.value2)();return new Halogen_VDom_Machine.Step(node,patch(node,v4,v1,v3,Data_Array.length(ch1)),done(node,v4,v3))}}}},buildElem=function(v){var done=function(node,attrs,steps){return function(){var v1=Halogen_VDom_Util.unsafeParent(node);return Halogen_VDom_Util.removeChild(node,v1)(),Control_Monad_Eff.foreachE(steps)(Halogen_VDom_Machine.halt)(),Halogen_VDom_Machine.halt(attrs)()}},patch=function(node,attrs,v1,ch1){return function(v2){if(v2 instanceof Halogen_VDom_Types.Grafted)return patch(node,attrs,v1,ch1)(Halogen_VDom_Types.runGraft(v2.value0));if(v2 instanceof Halogen_VDom_Types.Elem&&eqElemSpec(v1,v2.value0)){var v3=Data_Array.length(v2.value1);if(0===Data_Array.length(ch1)&&0===v3)return function(){var v5=Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();return new Halogen_VDom_Machine.Step(node,patch(node,v5,v2.value0,ch1),done(node,v5,ch1))};var onThis=function(ix,v5){return v5.value2},onThese=function(ix,v5,vdom){return function(){var v6=v5.value1(vdom)();return Halogen_VDom_Util.insertChildIx(ix,v6.value0,node)(),v6}},onThat=function(ix,vdom){return function(){var v5=buildVDom(v)(vdom)();return Halogen_VDom_Util.insertChildIx(ix,v5.value0,node)(),v5}};return function(){var v5=Halogen_VDom_Util.diffWithIxE(ch1,v2.value1,onThese,onThis,onThat)(),v6=Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();return new Halogen_VDom_Machine.Step(node,patch(node,v6,v2.value0,v5),done(node,v6,v5))}}return function(){return done(node,attrs,ch1)(),buildVDom(v)(v2)()}}};return function(v1){return function(ch1){return function(){var v2=Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0),v1.value1,v.document)(),node=DOM_Node_Types.elementToNode(v2),v3=Halogen_VDom_Util.forE(ch1,function(ix,child){return function(){var v3=buildVDom(v)(child)();return Halogen_VDom_Util.insertChildIx(ix,v3.value0,node)(),v3}})(),v4=v.buildAttributes(v2)(v1.value2)();return new Halogen_VDom_Machine.Step(node,patch(node,v4,v1,v3),done(node,v4,v3))}}}};exports.buildVDom=buildVDom,exports.buildText=buildText,exports.buildElem=buildElem,exports.buildKeyed=buildKeyed,exports.buildWidget=buildWidget}(PS["Halogen.VDom.DOM"]=PS["Halogen.VDom.DOM"]||{}),function(exports){"use strict";var Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Category=PS["Control.Category"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Eff=PS["Control.Monad.Eff"],Control_Monad_Eff_Class=PS["Control.Monad.Eff.Class"],Control_Monad_Eff_Ref=PS["Control.Monad.Eff.Ref"],DOM_HTML=(PS.DOM,PS["DOM.HTML"]),DOM_HTML_Types=PS["DOM.HTML.Types"],DOM_HTML_Window=PS["DOM.HTML.Window"],DOM_Node_Node=PS["DOM.Node.Node"],Data_Foldable=(PS["DOM.Node.Types"],PS["Data.Foldable"]),Data_Functor=(PS["Data.Function"],PS["Data.Functor"]),Data_HeytingAlgebra=PS["Data.HeytingAlgebra"],Data_Maybe=PS["Data.Maybe"],Data_Unit=PS["Data.Unit"],Halogen_Aff_Driver=PS["Halogen.Aff.Driver"],Halogen_Aff_Driver_State=PS["Halogen.Aff.Driver.State"],Halogen_VDom_DOM=(PS["Halogen.Aff.Effects"],PS["Halogen.Component"],PS["Halogen.HTML.Core"],PS["Halogen.Query.InputF"],PS["Halogen.VDom"],PS["Halogen.VDom.DOM"]),Halogen_VDom_DOM_Prop=PS["Halogen.VDom.DOM.Prop"],Halogen_VDom_Machine=PS["Halogen.VDom.Machine"],Unsafe_Reference=(PS.Prelude,PS["Unsafe.Reference"]),removeChild=function(v){return function(){var v1=DOM_Node_Node.parentNode(v.node)();return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function(pn){return DOM_Node_Node.removeChild(v.node)(pn)})(v1)()}},renderSpec=function(document){return function(container){return{render:function(handler){return function(child){return function(v){return function(v1){if(v1 instanceof Data_Maybe.Nothing)return function(){var v2=Control_Monad_Eff_Ref.newRef(child)(),spec=function(handler){return function(renderChildRef){return function(document){var getNode=Halogen_Aff_Driver_State.unRenderStateX(function(v){return v.node}),done=Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit),patch=function(slot){return function(){var v1=Control_Monad_Eff_Ref.readRef(renderChildRef)()(slot)(),node=getNode(v1);return new Halogen_VDom_Machine.Step(node,patch,done)}};return{buildWidget:function(spec){return function(slot){return function(){var v1=Control_Monad_Eff_Ref.readRef(renderChildRef)()(slot)(),node=getNode(v1);return new Halogen_VDom_Machine.Step(node,patch,done)}}},buildAttributes:Halogen_VDom_DOM_Prop.buildProp(handler),document:document}}}}(handler)(v2)(document),v3=Halogen_VDom_DOM.buildVDom(spec)(v)(),node=Halogen_VDom_Machine.extract(v3);return Data_Functor.void(Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(node)(DOM_HTML_Types.htmlElementToNode(container)))(),{machine:v3,node:node,renderChildRef:v2}};if(v1 instanceof Data_Maybe.Just)return function(){Control_Monad_Eff_Ref.writeRef(v1.value0.renderChildRef)(child)();var v2=DOM_Node_Node.parentNode(v1.value0.node)(),v3=DOM_Node_Node.nextSibling(v1.value0.node)(),v4=Halogen_VDom_Machine.step(v1.value0.machine)(v)(),newNode=Halogen_VDom_Machine.extract(v4);return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(function(v){return function(v1){return function(v2){return v1 instanceof Data_Maybe.Just&&v2 instanceof Data_Maybe.Just?Data_Functor.void(Control_Monad_Eff.functorEff)(DOM_Node_Node.insertBefore(v)(v1.value0)(v2.value0)):v1 instanceof Data_Maybe.Nothing&&v2 instanceof Data_Maybe.Just?Data_Functor.void(Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(v)(v2.value0)):Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)}}}(newNode)(v3)(v2))(),{machine:v4,node:newNode,renderChildRef:v1.value0.renderChildRef}};throw new Error("Failed pattern match at Halogen.VDom.Driver line 121, column 5 - line 137, column 80: "+[v1.constructor.name])}}}},renderChild:Control_Category.id(Control_Category.categoryFn),removeChild:removeChild}}};exports.runUI=function(component){return function(i){return function(element){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Functor.map(Control_Monad_Eff.functorEff)(DOM_HTML_Types.htmlDocumentToDocument)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Window.document)(DOM_HTML.window))))(function(v){return Halogen_Aff_Driver.runUI(renderSpec(v)(element))(component)(i)})}}}}(PS["Halogen.VDom.Driver"]=PS["Halogen.VDom.Driver"]||{}),function(exports){"use strict";var fromLocalStorage,fromCookie,Control_Alt=PS["Control.Alt"],Control_Applicative=PS["Control.Applicative"],Control_Bind=PS["Control.Bind"],Control_Monad_Aff=PS["Control.Monad.Aff"],Control_Monad_Aff_Class=PS["Control.Monad.Aff.Class"],Control_Monad_Eff_Class=(PS["Control.Monad.Eff"],PS["Control.Monad.Eff.Class"]),Control_Monad_Eff_Exception=PS["Control.Monad.Eff.Exception"],Data_Either=(PS["Control.Semigroupoid"],PS["DOM.Node.ParentNode"],PS["Data.Either"]),Data_Function=PS["Data.Function"],Data_Maybe=PS["Data.Maybe"],Data_Newtype=PS["Data.Newtype"],Data_Ord=PS["Data.Ord"],Data_Symbol=PS["Data.Symbol"],EmmaMCR_Config=PS["EmmaMCR.Config"],EmmaMCR_Settings=PS["EmmaMCR.Settings"],EmmaMCR_Store=PS["EmmaMCR.Store"],EmmaMCR_View=PS["EmmaMCR.View"],Forestay=PS.Forestay,Halogen_Aff_Util=(PS.Halogen,PS["Halogen.Aff"],PS["Halogen.Aff.Util"]),Halogen_Component=PS["Halogen.Component"],Halogen_HTML_Core=(PS["Halogen.HTML"],PS["Halogen.HTML.Core"]),Halogen_Query=PS["Halogen.Query"],Halogen_VDom_Driver=PS["Halogen.VDom.Driver"],configure=(PS["Partial.Unsafe"],PS.Prelude,fromLocalStorage=Control_Bind.bind(Control_Monad_Aff.bindAff)(EmmaMCR_Settings.getLocal(Control_Monad_Aff_Class.monadAffAff)(new Data_Symbol.IsSymbol(function(){return"JSConfig"}))(EmmaMCR_Config.oldGenericSerializedConfig)(Data_Symbol.SProxy.value))(function(v){return Forestay["onJust'"](v)(function(v1){return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Exception.throw("No localstorage configuration"))})(function($9){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Newtype.un(EmmaMCR_Config.newtypeSerializedConfig)(EmmaMCR_Config.Config)($9))})}),fromCookie=Control_Bind.bind(Control_Monad_Aff.bindAff)(EmmaMCR_Config.getConfigCookie)(function(v){return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(EmmaMCR_Settings.setLocal(Control_Monad_Aff_Class.monadAffAff)(new Data_Symbol.IsSymbol(function(){return"JSConfig"}))(EmmaMCR_Config.oldGenericSerializedConfig)(Data_Symbol.SProxy.value)(v))(function(){return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v)})}),Control_Alt.alt(Control_Monad_Aff.altAff)(fromCookie)(fromLocalStorage)),appComponent=function(dictAPIConstraint){return Halogen_Component.lifecycleParentComponent(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Ord.ordVoid))))({initialState:EmmaMCR_Store.appState,render:EmmaMCR_View.appRender(dictAPIConstraint),eval:EmmaMCR_Store.appEval(dictAPIConstraint),initializer:Data_Maybe.Just.create(Halogen_Query.action(EmmaMCR_Store.RecoverState.create)),finalizer:Data_Maybe.Nothing.value,receiver:Data_Function.const(Data_Maybe.Nothing.value)})},renderMain=function(config){return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Halogen_Aff_Util.awaitLoad)(function(){return Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Aff_Util.selectElement("#emmamcrApp"))(function(v){var container=Data_Maybe.fromJust()(v),app=Halogen_Component.hoist(Halogen_HTML_Core.bifunctorHTML)(Control_Monad_Aff.functorAff)(EmmaMCR_Settings.concrete(config))(appComponent(EmmaMCR_Settings.apiReaderT(Control_Monad_Aff_Class.monadAffAff)(Control_Monad_Aff.monadRecAff)));return Halogen_VDom_Driver.runUI(app)(config)(container)})})},runMain=Halogen_Aff_Util.runHalogenAff(Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(renderMain)(configure));exports.runMain=runMain,exports.renderMain=renderMain,exports.configure=configure,exports.appComponent=appComponent}(PS["EmmaMCR.Client"]=PS["EmmaMCR.Client"]||{}),function(exports){"use strict";(PS["Main"]=PS["Main"]||{}).hot=function(){module.hot&&module.hot.accept()}}(),function(exports){"use strict";var $foreign=PS.Main,EmmaMCR_Client=(PS["Control.Bind"],PS["Control.Monad.Eff"],PS["EmmaMCR.Client"]);PS["EmmaMCR.Settings"],PS.Prelude;exports.main=function(){return EmmaMCR_Client.runMain(),$foreign.hot()},exports.hot=$foreign.hot}(PS.Main=PS.Main||{}),PS.Main.main()}).call(this,require("buffer").Buffer)},{"big-integer":1,buffer:7,"text-encoding":2}],6:[function(require,module,exports){"use strict";exports.byteLength=function(b64){return 3*b64.length/4-placeHoldersCount(b64)},exports.toByteArray=function(b64){var i,l,tmp,placeHolders,arr,len=b64.length;placeHolders=placeHoldersCount(b64),arr=new Arr(3*len/4-placeHolders),l=0<placeHolders?len-4:len;var L=0;for(i=0;i<l;i+=4)tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)],arr[L++]=tmp>>16&255,arr[L++]=tmp>>8&255,arr[L++]=255&tmp;2===placeHolders?(tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4,arr[L++]=255&tmp):1===placeHolders&&(tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2,arr[L++]=tmp>>8&255,arr[L++]=255&tmp);return arr},exports.fromByteArray=function(uint8){for(var tmp,len=uint8.length,extraBytes=len%3,output="",parts=[],i=0,len2=len-extraBytes;i<len2;i+=16383)parts.push(encodeChunk(uint8,i,len2<i+16383?len2:i+16383));1===extraBytes?(tmp=uint8[len-1],output+=lookup[tmp>>2],output+=lookup[tmp<<4&63],output+="=="):2===extraBytes&&(tmp=(uint8[len-2]<<8)+uint8[len-1],output+=lookup[tmp>>10],output+=lookup[tmp>>4&63],output+=lookup[tmp<<2&63],output+="=");return parts.push(output),parts.join("")};for(var lookup=[],revLookup=[],Arr="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,len=code.length;i<len;++i)lookup[i]=code[i],revLookup[code.charCodeAt(i)]=i;function placeHoldersCount(b64){var len=b64.length;if(0<len%4)throw new Error("Invalid string. Length must be a multiple of 4");return"="===b64[len-2]?2:"="===b64[len-1]?1:0}function encodeChunk(uint8,start,end){for(var tmp,num,output=[],i=start;i<end;i+=3)tmp=(uint8[i]<<16)+(uint8[i+1]<<8)+uint8[i+2],output.push(lookup[(num=tmp)>>18&63]+lookup[num>>12&63]+lookup[num>>6&63]+lookup[63&num]);return output.join("")}revLookup["-".charCodeAt(0)]=62,revLookup["_".charCodeAt(0)]=63},{}],7:[function(require,module,exports){(function(global){"use strict";var base64=require("base64-js"),ieee754=require("ieee754"),isArray=require("isarray");function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function createBuffer(that,length){if(kMaxLength()<length)throw new RangeError("Invalid typed array length");return Buffer.TYPED_ARRAY_SUPPORT?(that=new Uint8Array(length)).__proto__=Buffer.prototype:(null===that&&(that=new Buffer(length)),that.length=length),that}function Buffer(arg,encodingOrOffset,length){if(!(Buffer.TYPED_ARRAY_SUPPORT||this instanceof Buffer))return new Buffer(arg,encodingOrOffset,length);if("number"==typeof arg){if("string"==typeof encodingOrOffset)throw new Error("If encoding is specified then the first argument must be a string");return allocUnsafe(this,arg)}return from(this,arg,encodingOrOffset,length)}function from(that,value,encodingOrOffset,length){if("number"==typeof value)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&value instanceof ArrayBuffer?function(that,array,byteOffset,length){if(array.byteLength,byteOffset<0||array.byteLength<byteOffset)throw new RangeError("'offset' is out of bounds");if(array.byteLength<byteOffset+(length||0))throw new RangeError("'length' is out of bounds");array=void 0===byteOffset&&void 0===length?new Uint8Array(array):void 0===length?new Uint8Array(array,byteOffset):new Uint8Array(array,byteOffset,length);Buffer.TYPED_ARRAY_SUPPORT?(that=array).__proto__=Buffer.prototype:that=fromArrayLike(that,array);return that}(that,value,encodingOrOffset,length):"string"==typeof value?function(that,string,encoding){"string"==typeof encoding&&""!==encoding||(encoding="utf8");if(!Buffer.isEncoding(encoding))throw new TypeError('"encoding" must be a valid string encoding');var length=0|byteLength(string,encoding),actual=(that=createBuffer(that,length)).write(string,encoding);actual!==length&&(that=that.slice(0,actual));return that}(that,value,encodingOrOffset):function(that,obj){if(Buffer.isBuffer(obj)){var len=0|checked(obj.length);return 0===(that=createBuffer(that,len)).length||obj.copy(that,0,0,len),that}if(obj){if("undefined"!=typeof ArrayBuffer&&obj.buffer instanceof ArrayBuffer||"length"in obj)return"number"!=typeof obj.length||(val=obj.length)!=val?createBuffer(that,0):fromArrayLike(that,obj);if("Buffer"===obj.type&&isArray(obj.data))return fromArrayLike(that,obj.data)}var val;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(that,value)}function assertSize(size){if("number"!=typeof size)throw new TypeError('"size" argument must be a number');if(size<0)throw new RangeError('"size" argument must not be negative')}function allocUnsafe(that,size){if(assertSize(size),that=createBuffer(that,size<0?0:0|checked(size)),!Buffer.TYPED_ARRAY_SUPPORT)for(var i=0;i<size;++i)that[i]=0;return that}function fromArrayLike(that,array){var length=array.length<0?0:0|checked(array.length);that=createBuffer(that,length);for(var i=0;i<length;i+=1)that[i]=255&array[i];return that}function checked(length){if(length>=kMaxLength())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+kMaxLength().toString(16)+" bytes");return 0|length}function byteLength(string,encoding){if(Buffer.isBuffer(string))return string.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(string)||string instanceof ArrayBuffer))return string.byteLength;"string"!=typeof string&&(string=""+string);var len=string.length;if(0===len)return 0;for(var loweredCase=!1;;)switch(encoding){case"ascii":case"latin1":case"binary":return len;case"utf8":case"utf-8":case void 0:return utf8ToBytes(string).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*len;case"hex":return len>>>1;case"base64":return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;encoding=(""+encoding).toLowerCase(),loweredCase=!0}}function swap(b,n,m){var i=b[n];b[n]=b[m],b[m]=i}function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){if(0===buffer.length)return-1;if("string"==typeof byteOffset?(encoding=byteOffset,byteOffset=0):2147483647<byteOffset?byteOffset=2147483647:byteOffset<-2147483648&&(byteOffset=-2147483648),byteOffset=+byteOffset,isNaN(byteOffset)&&(byteOffset=dir?0:buffer.length-1),byteOffset<0&&(byteOffset=buffer.length+byteOffset),byteOffset>=buffer.length){if(dir)return-1;byteOffset=buffer.length-1}else if(byteOffset<0){if(!dir)return-1;byteOffset=0}if("string"==typeof val&&(val=Buffer.from(val,encoding)),Buffer.isBuffer(val))return 0===val.length?-1:arrayIndexOf(buffer,val,byteOffset,encoding,dir);if("number"==typeof val)return val&=255,Buffer.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?dir?Uint8Array.prototype.indexOf.call(buffer,val,byteOffset):Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset):arrayIndexOf(buffer,[val],byteOffset,encoding,dir);throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var i,indexSize=1,arrLength=arr.length,valLength=val.length;if(void 0!==encoding&&("ucs2"===(encoding=String(encoding).toLowerCase())||"ucs-2"===encoding||"utf16le"===encoding||"utf-16le"===encoding)){if(arr.length<2||val.length<2)return-1;arrLength/=indexSize=2,valLength/=2,byteOffset/=2}function read(buf,i){return 1===indexSize?buf[i]:buf.readUInt16BE(i*indexSize)}if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++)if(read(arr,i)===read(val,-1===foundIndex?0:i-foundIndex)){if(-1===foundIndex&&(foundIndex=i),i-foundIndex+1===valLength)return foundIndex*indexSize}else-1!==foundIndex&&(i-=i-foundIndex),foundIndex=-1}else for(arrLength<byteOffset+valLength&&(byteOffset=arrLength-valLength),i=byteOffset;0<=i;i--){for(var found=!0,j=0;j<valLength;j++)if(read(arr,i+j)!==read(val,j)){found=!1;break}if(found)return i}return-1}function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;length?remaining<(length=Number(length))&&(length=remaining):length=remaining;var strLen=string.length;if(strLen%2!=0)throw new TypeError("Invalid hex string");strLen/2<length&&(length=strLen/2);for(var i=0;i<length;++i){var parsed=parseInt(string.substr(2*i,2),16);if(isNaN(parsed))return i;buf[offset+i]=parsed}return i}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length)}function asciiWrite(buf,string,offset,length){return blitBuffer(function(str){for(var byteArray=[],i=0;i<str.length;++i)byteArray.push(255&str.charCodeAt(i));return byteArray}(string),buf,offset,length)}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length)}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length)}function ucs2Write(buf,string,offset,length){return blitBuffer(function(str,units){for(var c,hi,lo,byteArray=[],i=0;i<str.length&&!((units-=2)<0);++i)c=str.charCodeAt(i),hi=c>>8,lo=c%256,byteArray.push(lo),byteArray.push(hi);return byteArray}(string,buf.length-offset),buf,offset,length)}function base64Slice(buf,start,end){return 0===start&&end===buf.length?base64.fromByteArray(buf):base64.fromByteArray(buf.slice(start,end))}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);for(var res=[],i=start;i<end;){var secondByte,thirdByte,fourthByte,tempCodePoint,firstByte=buf[i],codePoint=null,bytesPerSequence=239<firstByte?4:223<firstByte?3:191<firstByte?2:1;if(i+bytesPerSequence<=end)switch(bytesPerSequence){case 1:firstByte<128&&(codePoint=firstByte);break;case 2:128==(192&(secondByte=buf[i+1]))&&127<(tempCodePoint=(31&firstByte)<<6|63&secondByte)&&(codePoint=tempCodePoint);break;case 3:secondByte=buf[i+1],thirdByte=buf[i+2],128==(192&secondByte)&&128==(192&thirdByte)&&2047<(tempCodePoint=(15&firstByte)<<12|(63&secondByte)<<6|63&thirdByte)&&(tempCodePoint<55296||57343<tempCodePoint)&&(codePoint=tempCodePoint);break;case 4:secondByte=buf[i+1],thirdByte=buf[i+2],fourthByte=buf[i+3],128==(192&secondByte)&&128==(192&thirdByte)&&128==(192&fourthByte)&&65535<(tempCodePoint=(15&firstByte)<<18|(63&secondByte)<<12|(63&thirdByte)<<6|63&fourthByte)&&tempCodePoint<1114112&&(codePoint=tempCodePoint)}null===codePoint?(codePoint=65533,bytesPerSequence=1):65535<codePoint&&(codePoint-=65536,res.push(codePoint>>>10&1023|55296),codePoint=56320|1023&codePoint),res.push(codePoint),i+=bytesPerSequence}return function(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH)return String.fromCharCode.apply(String,codePoints);var res="",i=0;for(;i<len;)res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));return res}(res)}exports.Buffer=Buffer,exports.SlowBuffer=function(length){+length!=length&&(length=0);return Buffer.alloc(+length)},exports.INSPECT_MAX_BYTES=50,Buffer.TYPED_ARRAY_SUPPORT=void 0!==global.TYPED_ARRAY_SUPPORT?global.TYPED_ARRAY_SUPPORT:function(){try{var arr=new Uint8Array(1);return arr.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===arr.foo()&&"function"==typeof arr.subarray&&0===arr.subarray(1,1).byteLength}catch(e){return!1}}(),exports.kMaxLength=kMaxLength(),Buffer.poolSize=8192,Buffer._augment=function(arr){return arr.__proto__=Buffer.prototype,arr},Buffer.from=function(value,encodingOrOffset,length){return from(null,value,encodingOrOffset,length)},Buffer.TYPED_ARRAY_SUPPORT&&(Buffer.prototype.__proto__=Uint8Array.prototype,Buffer.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&Buffer[Symbol.species]===Buffer&&Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:!0})),Buffer.alloc=function(size,fill,encoding){return function(that,size,fill,encoding){return assertSize(size),size<=0?createBuffer(that,size):void 0!==fill?"string"==typeof encoding?createBuffer(that,size).fill(fill,encoding):createBuffer(that,size).fill(fill):createBuffer(that,size)}(null,size,fill,encoding)},Buffer.allocUnsafe=function(size){return allocUnsafe(null,size)},Buffer.allocUnsafeSlow=function(size){return allocUnsafe(null,size)},Buffer.isBuffer=function(b){return!(null==b||!b._isBuffer)},Buffer.compare=function(a,b){if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b))throw new TypeError("Arguments must be Buffers");if(a===b)return 0;for(var x=a.length,y=b.length,i=0,len=Math.min(x,y);i<len;++i)if(a[i]!==b[i]){x=a[i],y=b[i];break}return x<y?-1:y<x?1:0},Buffer.isEncoding=function(encoding){switch(String(encoding).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Buffer.concat=function(list,length){if(!isArray(list))throw new TypeError('"list" argument must be an Array of Buffers');if(0===list.length)return Buffer.alloc(0);var i;if(void 0===length)for(i=length=0;i<list.length;++i)length+=list[i].length;var buffer=Buffer.allocUnsafe(length),pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(!Buffer.isBuffer(buf))throw new TypeError('"list" argument must be an Array of Buffers');buf.copy(buffer,pos),pos+=buf.length}return buffer},Buffer.byteLength=byteLength,Buffer.prototype._isBuffer=!0,Buffer.prototype.swap16=function(){var len=this.length;if(len%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var i=0;i<len;i+=2)swap(this,i,i+1);return this},Buffer.prototype.swap32=function(){var len=this.length;if(len%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var i=0;i<len;i+=4)swap(this,i,i+3),swap(this,i+1,i+2);return this},Buffer.prototype.swap64=function(){var len=this.length;if(len%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var i=0;i<len;i+=8)swap(this,i,i+7),swap(this,i+1,i+6),swap(this,i+2,i+5),swap(this,i+3,i+4);return this},Buffer.prototype.toString=function(){var length=0|this.length;return 0===length?"":0===arguments.length?utf8Slice(this,0,length):function(encoding,start,end){var loweredCase=!1;if((void 0===start||start<0)&&(start=0),start>this.length)return"";if((void 0===end||end>this.length)&&(end=this.length),end<=0)return"";if((end>>>=0)<=(start>>>=0))return"";for(encoding||(encoding="utf8");;)switch(encoding){case"hex":return hexSlice(this,start,end);case"utf8":case"utf-8":return utf8Slice(this,start,end);case"ascii":return asciiSlice(this,start,end);case"latin1":case"binary":return latin1Slice(this,start,end);case"base64":return base64Slice(this,start,end);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(encoding+"").toLowerCase(),loweredCase=!0}}.apply(this,arguments)},Buffer.prototype.equals=function(b){if(!Buffer.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b||0===Buffer.compare(this,b)},Buffer.prototype.inspect=function(){var str="",max=exports.INSPECT_MAX_BYTES;return 0<this.length&&(str=this.toString("hex",0,max).match(/.{2}/g).join(" "),this.length>max&&(str+=" ... ")),"<Buffer "+str+">"},Buffer.prototype.compare=function(target,start,end,thisStart,thisEnd){if(!Buffer.isBuffer(target))throw new TypeError("Argument must be a Buffer");if(void 0===start&&(start=0),void 0===end&&(end=target?target.length:0),void 0===thisStart&&(thisStart=0),void 0===thisEnd&&(thisEnd=this.length),start<0||end>target.length||thisStart<0||thisEnd>this.length)throw new RangeError("out of range index");if(thisEnd<=thisStart&&end<=start)return 0;if(thisEnd<=thisStart)return-1;if(end<=start)return 1;if(this===target)return 0;for(var x=(thisEnd>>>=0)-(thisStart>>>=0),y=(end>>>=0)-(start>>>=0),len=Math.min(x,y),thisCopy=this.slice(thisStart,thisEnd),targetCopy=target.slice(start,end),i=0;i<len;++i)if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i],y=targetCopy[i];break}return x<y?-1:y<x?1:0},Buffer.prototype.includes=function(val,byteOffset,encoding){return-1!==this.indexOf(val,byteOffset,encoding)},Buffer.prototype.indexOf=function(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,!0)},Buffer.prototype.lastIndexOf=function(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,!1)},Buffer.prototype.write=function(string,offset,length,encoding){if(void 0===offset)encoding="utf8",length=this.length,offset=0;else if(void 0===length&&"string"==typeof offset)encoding=offset,length=this.length,offset=0;else{if(!isFinite(offset))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");offset|=0,isFinite(length)?(length|=0,void 0===encoding&&(encoding="utf8")):(encoding=length,length=void 0)}var remaining=this.length-offset;if((void 0===length||remaining<length)&&(length=remaining),0<string.length&&(length<0||offset<0)||offset>this.length)throw new RangeError("Attempt to write outside buffer bounds");encoding||(encoding="utf8");for(var loweredCase=!1;;)switch(encoding){case"hex":return hexWrite(this,string,offset,length);case"utf8":case"utf-8":return utf8Write(this,string,offset,length);case"ascii":return asciiWrite(this,string,offset,length);case"latin1":case"binary":return latin1Write(this,string,offset,length);case"base64":return base64Write(this,string,offset,length);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(""+encoding).toLowerCase(),loweredCase=!0}},Buffer.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var MAX_ARGUMENTS_LENGTH=4096;function asciiSlice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i)ret+=String.fromCharCode(127&buf[i]);return ret}function latin1Slice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i)ret+=String.fromCharCode(buf[i]);return ret}function hexSlice(buf,start,end){var len=buf.length;(!start||start<0)&&(start=0),(!end||end<0||len<end)&&(end=len);for(var out="",i=start;i<end;++i)out+=toHex(buf[i]);return out}function utf16leSlice(buf,start,end){for(var bytes=buf.slice(start,end),res="",i=0;i<bytes.length;i+=2)res+=String.fromCharCode(bytes[i]+256*bytes[i+1]);return res}function checkOffset(offset,ext,length){if(offset%1!=0||offset<0)throw new RangeError("offset is not uint");if(length<offset+ext)throw new RangeError("Trying to access beyond buffer length")}function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');if(max<value||value<min)throw new RangeError('"value" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError("Index out of range")}function objectWriteUInt16(buf,value,offset,littleEndian){value<0&&(value=65535+value+1);for(var i=0,j=Math.min(buf.length-offset,2);i<j;++i)buf[offset+i]=(value&255<<8*(littleEndian?i:1-i))>>>8*(littleEndian?i:1-i)}function objectWriteUInt32(buf,value,offset,littleEndian){value<0&&(value=4294967295+value+1);for(var i=0,j=Math.min(buf.length-offset,4);i<j;++i)buf[offset+i]=value>>>8*(littleEndian?i:3-i)&255}function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError("Index out of range");if(offset<0)throw new RangeError("Index out of range")}function writeFloat(buf,value,offset,littleEndian,noAssert){return noAssert||checkIEEE754(buf,0,offset,4),ieee754.write(buf,value,offset,littleEndian,23,4),offset+4}function writeDouble(buf,value,offset,littleEndian,noAssert){return noAssert||checkIEEE754(buf,0,offset,8),ieee754.write(buf,value,offset,littleEndian,52,8),offset+8}Buffer.prototype.slice=function(start,end){var newBuf,len=this.length;if((start=~~start)<0?(start+=len)<0&&(start=0):len<start&&(start=len),(end=void 0===end?len:~~end)<0?(end+=len)<0&&(end=0):len<end&&(end=len),end<start&&(end=start),Buffer.TYPED_ARRAY_SUPPORT)(newBuf=this.subarray(start,end)).__proto__=Buffer.prototype;else{var sliceLen=end-start;newBuf=new Buffer(sliceLen,void 0);for(var i=0;i<sliceLen;++i)newBuf[i]=this[i+start]}return newBuf},Buffer.prototype.readUIntLE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset],mul=1,i=0;++i<byteLength&&(mul*=256);)val+=this[offset+i]*mul;return val},Buffer.prototype.readUIntBE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset+--byteLength],mul=1;0<byteLength&&(mul*=256);)val+=this[offset+--byteLength]*mul;return val},Buffer.prototype.readUInt8=function(offset,noAssert){return noAssert||checkOffset(offset,1,this.length),this[offset]},Buffer.prototype.readUInt16LE=function(offset,noAssert){return noAssert||checkOffset(offset,2,this.length),this[offset]|this[offset+1]<<8},Buffer.prototype.readUInt16BE=function(offset,noAssert){return noAssert||checkOffset(offset,2,this.length),this[offset]<<8|this[offset+1]},Buffer.prototype.readUInt32LE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+16777216*this[offset+3]},Buffer.prototype.readUInt32BE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),16777216*this[offset]+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3])},Buffer.prototype.readIntLE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset],mul=1,i=0;++i<byteLength&&(mul*=256);)val+=this[offset+i]*mul;return(mul*=128)<=val&&(val-=Math.pow(2,8*byteLength)),val},Buffer.prototype.readIntBE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var i=byteLength,mul=1,val=this[offset+--i];0<i&&(mul*=256);)val+=this[offset+--i]*mul;return(mul*=128)<=val&&(val-=Math.pow(2,8*byteLength)),val},Buffer.prototype.readInt8=function(offset,noAssert){return noAssert||checkOffset(offset,1,this.length),128&this[offset]?-1*(255-this[offset]+1):this[offset]},Buffer.prototype.readInt16LE=function(offset,noAssert){noAssert||checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return 32768&val?4294901760|val:val},Buffer.prototype.readInt16BE=function(offset,noAssert){noAssert||checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return 32768&val?4294901760|val:val},Buffer.prototype.readInt32LE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24},Buffer.prototype.readInt32BE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3]},Buffer.prototype.readFloatLE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),ieee754.read(this,offset,!0,23,4)},Buffer.prototype.readFloatBE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),ieee754.read(this,offset,!1,23,4)},Buffer.prototype.readDoubleLE=function(offset,noAssert){return noAssert||checkOffset(offset,8,this.length),ieee754.read(this,offset,!0,52,8)},Buffer.prototype.readDoubleBE=function(offset,noAssert){return noAssert||checkOffset(offset,8,this.length),ieee754.read(this,offset,!1,52,8)},Buffer.prototype.writeUIntLE=function(value,offset,byteLength,noAssert){(value=+value,offset|=0,byteLength|=0,noAssert)||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength)-1,0);var mul=1,i=0;for(this[offset]=255&value;++i<byteLength&&(mul*=256);)this[offset+i]=value/mul&255;return offset+byteLength},Buffer.prototype.writeUIntBE=function(value,offset,byteLength,noAssert){(value=+value,offset|=0,byteLength|=0,noAssert)||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength)-1,0);var i=byteLength-1,mul=1;for(this[offset+i]=255&value;0<=--i&&(mul*=256);)this[offset+i]=value/mul&255;return offset+byteLength},Buffer.prototype.writeUInt8=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(value=Math.floor(value)),this[offset]=255&value,offset+1},Buffer.prototype.writeUInt16LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=255&value,this[offset+1]=value>>>8):objectWriteUInt16(this,value,offset,!0),offset+2},Buffer.prototype.writeUInt16BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>8,this[offset+1]=255&value):objectWriteUInt16(this,value,offset,!1),offset+2},Buffer.prototype.writeUInt32LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset+3]=value>>>24,this[offset+2]=value>>>16,this[offset+1]=value>>>8,this[offset]=255&value):objectWriteUInt32(this,value,offset,!0),offset+4},Buffer.prototype.writeUInt32BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>24,this[offset+1]=value>>>16,this[offset+2]=value>>>8,this[offset+3]=255&value):objectWriteUInt32(this,value,offset,!1),offset+4},Buffer.prototype.writeIntLE=function(value,offset,byteLength,noAssert){if(value=+value,offset|=0,!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit)}var i=0,mul=1,sub=0;for(this[offset]=255&value;++i<byteLength&&(mul*=256);)value<0&&0===sub&&0!==this[offset+i-1]&&(sub=1),this[offset+i]=(value/mul>>0)-sub&255;return offset+byteLength},Buffer.prototype.writeIntBE=function(value,offset,byteLength,noAssert){if(value=+value,offset|=0,!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit)}var i=byteLength-1,mul=1,sub=0;for(this[offset+i]=255&value;0<=--i&&(mul*=256);)value<0&&0===sub&&0!==this[offset+i+1]&&(sub=1),this[offset+i]=(value/mul>>0)-sub&255;return offset+byteLength},Buffer.prototype.writeInt8=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(value=Math.floor(value)),value<0&&(value=255+value+1),this[offset]=255&value,offset+1},Buffer.prototype.writeInt16LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=255&value,this[offset+1]=value>>>8):objectWriteUInt16(this,value,offset,!0),offset+2},Buffer.prototype.writeInt16BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>8,this[offset+1]=255&value):objectWriteUInt16(this,value,offset,!1),offset+2},Buffer.prototype.writeInt32LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=255&value,this[offset+1]=value>>>8,this[offset+2]=value>>>16,this[offset+3]=value>>>24):objectWriteUInt32(this,value,offset,!0),offset+4},Buffer.prototype.writeInt32BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,2147483647,-2147483648),value<0&&(value=4294967295+value+1),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>24,this[offset+1]=value>>>16,this[offset+2]=value>>>8,this[offset+3]=255&value):objectWriteUInt32(this,value,offset,!1),offset+4},Buffer.prototype.writeFloatLE=function(value,offset,noAssert){return writeFloat(this,value,offset,!0,noAssert)},Buffer.prototype.writeFloatBE=function(value,offset,noAssert){return writeFloat(this,value,offset,!1,noAssert)},Buffer.prototype.writeDoubleLE=function(value,offset,noAssert){return writeDouble(this,value,offset,!0,noAssert)},Buffer.prototype.writeDoubleBE=function(value,offset,noAssert){return writeDouble(this,value,offset,!1,noAssert)},Buffer.prototype.copy=function(target,targetStart,start,end){if(start||(start=0),end||0===end||(end=this.length),targetStart>=target.length&&(targetStart=target.length),targetStart||(targetStart=0),0<end&&end<start&&(end=start),end===start)return 0;if(0===target.length||0===this.length)return 0;if(targetStart<0)throw new RangeError("targetStart out of bounds");if(start<0||start>=this.length)throw new RangeError("sourceStart out of bounds");if(end<0)throw new RangeError("sourceEnd out of bounds");end>this.length&&(end=this.length),target.length-targetStart<end-start&&(end=target.length-targetStart+start);var i,len=end-start;if(this===target&&start<targetStart&&targetStart<end)for(i=len-1;0<=i;--i)target[i+targetStart]=this[i+start];else if(len<1e3||!Buffer.TYPED_ARRAY_SUPPORT)for(i=0;i<len;++i)target[i+targetStart]=this[i+start];else Uint8Array.prototype.set.call(target,this.subarray(start,start+len),targetStart);return len},Buffer.prototype.fill=function(val,start,end,encoding){if("string"==typeof val){if("string"==typeof start?(encoding=start,start=0,end=this.length):"string"==typeof end&&(encoding=end,end=this.length),1===val.length){var code=val.charCodeAt(0);code<256&&(val=code)}if(void 0!==encoding&&"string"!=typeof encoding)throw new TypeError("encoding must be a string");if("string"==typeof encoding&&!Buffer.isEncoding(encoding))throw new TypeError("Unknown encoding: "+encoding)}else"number"==typeof val&&(val&=255);if(start<0||this.length<start||this.length<end)throw new RangeError("Out of range index");if(end<=start)return this;var i;if(start>>>=0,end=void 0===end?this.length:end>>>0,val||(val=0),"number"==typeof val)for(i=start;i<end;++i)this[i]=val;else{var bytes=Buffer.isBuffer(val)?val:utf8ToBytes(new Buffer(val,encoding).toString()),len=bytes.length;for(i=0;i<end-start;++i)this[i+start]=bytes[i%len]}return this};var INVALID_BASE64_RE=/[^+\/0-9A-Za-z-_]/g;function toHex(n){return n<16?"0"+n.toString(16):n.toString(16)}function utf8ToBytes(string,units){var codePoint;units=units||1/0;for(var length=string.length,leadSurrogate=null,bytes=[],i=0;i<length;++i){if(55295<(codePoint=string.charCodeAt(i))&&codePoint<57344){if(!leadSurrogate){if(56319<codePoint){-1<(units-=3)&&bytes.push(239,191,189);continue}if(i+1===length){-1<(units-=3)&&bytes.push(239,191,189);continue}leadSurrogate=codePoint;continue}if(codePoint<56320){-1<(units-=3)&&bytes.push(239,191,189),leadSurrogate=codePoint;continue}codePoint=65536+(leadSurrogate-55296<<10|codePoint-56320)}else leadSurrogate&&-1<(units-=3)&&bytes.push(239,191,189);if(leadSurrogate=null,codePoint<128){if((units-=1)<0)break;bytes.push(codePoint)}else if(codePoint<2048){if((units-=2)<0)break;bytes.push(codePoint>>6|192,63&codePoint|128)}else if(codePoint<65536){if((units-=3)<0)break;bytes.push(codePoint>>12|224,codePoint>>6&63|128,63&codePoint|128)}else{if(!(codePoint<1114112))throw new Error("Invalid code point");if((units-=4)<0)break;bytes.push(codePoint>>18|240,codePoint>>12&63|128,codePoint>>6&63|128,63&codePoint|128)}}return bytes}function base64ToBytes(str){return base64.toByteArray(function(str){if((str=function(str){return str.trim?str.trim():str.replace(/^\s+|\s+$/g,"")}(str).replace(INVALID_BASE64_RE,"")).length<2)return"";for(;str.length%4!=0;)str+="=";return str}(str))}function blitBuffer(src,dst,offset,length){for(var i=0;i<length&&!(i+offset>=dst.length||i>=src.length);++i)dst[i+offset]=src[i];return i}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"base64-js":6,ieee754:8,isarray:9}],8:[function(require,module,exports){exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,nBits=-7,i=isLE?nBytes-1:0,d=isLE?-1:1,s=buffer[offset+i];for(i+=d,e=s&(1<<-nBits)-1,s>>=-nBits,nBits+=eLen;0<nBits;e=256*e+buffer[offset+i],i+=d,nBits-=8);for(m=e&(1<<-nBits)-1,e>>=-nBits,nBits+=mLen;0<nBits;m=256*m+buffer[offset+i],i+=d,nBits-=8);if(0===e)e=1-eBias;else{if(e===eMax)return m?NaN:1/0*(s?-1:1);m+=Math.pow(2,mLen),e-=eBias}return(s?-1:1)*m*Math.pow(2,e-mLen)},exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,rt=23===mLen?Math.pow(2,-24)-Math.pow(2,-77):0,i=isLE?0:nBytes-1,d=isLE?1:-1,s=value<0||0===value&&1/value<0?1:0;for(value=Math.abs(value),isNaN(value)||value===1/0?(m=isNaN(value)?1:0,e=eMax):(e=Math.floor(Math.log(value)/Math.LN2),value*(c=Math.pow(2,-e))<1&&(e--,c*=2),2<=(value+=1<=e+eBias?rt/c:rt*Math.pow(2,1-eBias))*c&&(e++,c/=2),eMax<=e+eBias?(m=0,e=eMax):1<=e+eBias?(m=(value*c-1)*Math.pow(2,mLen),e+=eBias):(m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen),e=0));8<=mLen;buffer[offset+i]=255&m,i+=d,m/=256,mLen-=8);for(e=e<<mLen|m,eLen+=mLen;0<eLen;buffer[offset+i]=255&e,i+=d,e/=256,eLen-=8);buffer[offset+i-d]|=128*s}},{}],9:[function(require,module,exports){var toString={}.toString;module.exports=Array.isArray||function(arr){return"[object Array]"==toString.call(arr)}},{}]},{},[5]);
